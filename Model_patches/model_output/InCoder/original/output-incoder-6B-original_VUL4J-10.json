{
    "function range": "654,5-671,5",
    "output": [
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new ",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    output.close();\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    output.close();\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    output.close();\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    output.close();\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    output.close();\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    output.close();\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : ",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(d",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    ",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    ",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(d",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output",
        "<|endoftext|>private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    <|mask:0|>\n    if (cachedContent != null) {\n        output.write(cachedContent);\n    } else {\n        FileInputStream input = new FileInputStream(dfosFile);\n        IOUtils.copy(input, output);\n        dfosFile.delete();\n        dfosFile = null;\n    }\n    output.close();\n    cachedContent = null;\n}\n<|mask:0|>FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void writeObject(ObjectOutputStream out)\n        throws IOException {\n    out.defaultWriteObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(out, output);\n    dfosFile.delete();\n    dfosFile = null;\n}\n\nprivate void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileInputStream input = new "
    ],
    "validation_result": [
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    output.close();\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "private void readObject(ObjectInputStream in)\n        throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n/* BUG : \n*    OutputStream output = getOutputStream();\n* FIXED: \n*/\n    FileOutputStream output = new FileOutputStream(dfosFile);\n    IOUtils.copy(in, output);\n    dfosFile.delete();\n    dfosFile = null;\n}",
            "correctness": "compile_success"
        }
    ]
}