{
    "function range": "1097,5-1148,5",
    "output": [
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        throw new NoTypeConversionAvailableException(body, type);\n    }\n    return answer;\n}\n\nprotected Object doGetBody(Exchange exchange, Object document) throws Exception {\n    if (document == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getBodyType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, document);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (document instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, document);\n*            answer = new InputSource(is);\n*        } else if (document instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, document);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (document instanceof String) {\n*            answer = new InputSource(new StringReader((String) document));\n*        }\n*    }\n* FIXED: \n*/\n    \n    if (answer == null) {\n        if (document instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, document);\n            answer = new InputSource(is);\n        } else if (document instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, document);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (document instanceof String) {\n            answer = new InputSource(new StringReader((String) document));\n        }\n    }\n",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        throw new NoTypeConversionAvailableException(body, type);\n    }\n    return answer;\n}\n\nprotected Object doGetBody(Exchange exchange, Object document) throws Exception {\n    if (document == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getBodyType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, document);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (document instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, document);\n*            answer = new InputSource(is);\n*        } else if (document instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, document);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (document instanceof String) {\n*            answer = new InputSource(new StringReader((String) document));\n*        }\n*    }\n* FIXED: \n*/\n    if (answer == null) {\n        if (document instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, document);\n            answer = new InputSource(is);\n        } else if (document instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, document);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (document instanceof String) {\n            answer = new InputSource(new StringReader((String) document));\n        }\n    }\n    if (answer ",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new File((String) body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new File((String) body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new File((String) body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = ",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, body);\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == ",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);\n        } else if (body instanceof InputStream) {\n            answer = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        }\n    }\n    if (answer == null) {\n        if (body instanceof File) {\n            answer = exchange.getContext().getTypeConverter().convertTo(File.class, exchange, body);",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    <|mask:0|>\n    if (type == null && answer == null) {\n        answer = body;\n    } else if (answer == null) {\n        if (cause != null) {\n            throw cause;\n        } else {\n            throw new NoTypeConversionAvailableException(body, type);\n        }\n    }\n    return answer;\n}\n<|mask:0|>\n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        throw new NoTypeConversionAvailableException(body, type);\n    }\n    return answer;\n}\n\nprotected Object doGetBody(Exchange exchange, Object document) throws Exception {\n    if (document == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getBodyType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, document);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (document instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, document);\n*            answer = new InputSource(is);\n*        } else if (document instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, document);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (document instanceof String) {\n*            answer = new InputSource(new StringReader((String) document));\n*        }\n*    }\n* FIXED: \n*/\n    \n    if (answer == null) {\n        if (document instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, document);\n            answer = new InputSource(is);\n        } else if (document instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, document);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (document instanceof String) {\n            answer = new InputSource(new StringReader((String) document));\n        }\n    }\n\n"
    ],
    "validation_result": [
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    \n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        throw new NoTypeConversionAvailableException(body, type);\n    }\n    return answer;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    \n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        throw new NoTypeConversionAvailableException(body, type);\n    }\n    return answer;\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body == null) {\n        return null;\n    }\n    Object answer = null;\n    Class<?> type = getDocumentType();\n    Exception cause = null;\n    if (type != null) {\n        try {\n            answer = exchange.getContext().getTypeConverter().convertTo(type, exchange, body);\n        } catch (Exception e) {\n            cause = e;\n        }\n    }\n/* BUG : \n*    if (answer == null) {\n*        if (body instanceof WrappedFile) {\n*            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n*            answer = new InputSource(is);\n*        } else if (body instanceof BeanInvocation) {\n*            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n*            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n*                answer = null;\n*            }\n*        } else if (body instanceof String) {\n*            answer = new InputSource(new StringReader((String) body));\n*        }\n*    }\n* FIXED: \n*/\n    \n    if (answer == null) {\n        if (body instanceof WrappedFile) {\n            InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, body);\n            answer = new InputSource(is);\n        } else if (body instanceof BeanInvocation) {\n            BeanInvocation bi = exchange.getContext().getTypeConverter().convertTo(BeanInvocation.class, exchange, body);\n            if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                answer = null;\n            }\n        } else if (body instanceof String) {\n            answer = new InputSource(new StringReader((String) body));\n        }\n    }\n    if (answer == null) {\n        throw new NoTypeConversionAvailableException(body, type);\n    }\n    return answer;\n}",
            "correctness": "compile_success"
        }
    ]
}