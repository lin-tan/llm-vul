{
    "function range": "48,5-61,5",
    "output": [
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageTitleRegex() {\n    return imageTitleRegex;\n}\n\npublic void setImageTitleRegex(String imageTitleRegex) {\n    this.imageTitleRegex = imageTitleRegex;\n}\n\npublic String getImageDescriptionRegex() {\n    return imageDescriptionRegex;\n}\n\npublic void setImageDescriptionRegex(String imageDescriptionRegex) {\n    this.imageDescriptionRegex = imageDescriptionRegex;\n}\n\npublic String getThumbnailUrlRegex() {\n    return thumbnailUrlRegex;\n}\n\npublic void setThumbnailUrlRegex(String thumbnailUrlRegex) {\n    this.thumbnailUrlRegex = thumbnailUrlRegex;\n}\n\npublic String getThumbnailTitleRegex() {\n    return thumbnailTitleRegex;\n}\n\npublic void setThumbnailTitleRegex(String thumbnailTitleRegex) {\n    this.thumbnailTitleRegex = thumbnailTitleRegex;\n}\n\npublic String getThumbnailDescriptionRegex() {\n    return thumbnailDescriptionRegex;\n}\n\npublic void setThumbnailDescriptionRegex(String thumbnailDescriptionRegex) {\n    this.thumbnailDescriptionRegex = thumbnailDescriptionRegex;\n}\n\npublic String getThumbnailImageUrlRegex() {\n    return thumbnailImageUrlRegex;\n}\n\npublic void setThumbnailImageUrlRegex(String thumbnailImageUrlRegex) {\n    this.thumbnailImageUrlRegex = thumbnailImageUrlRegex;\n}\n\npublic String getThumbnailImageTitleRegex() {\n    return thumbnailImageTitleRegex;\n}\n\npublic void setThumbnailImageTitleRegex(String thumbnailImageTitleRegex) {\n    this.thumbnailImageTitleRegex = thumbnailImageTitleRegex;\n}\n\npublic String getThumbnailImageDescriptionRegex() {\n    return thumbnailImageDescriptionRegex;\n}\n\npublic void setThumbnailImageDescriptionRegex(String thumbnailImageDescriptionRegex) {\n    this.",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageTitleRegex() {\n    return imageTitleRegex;\n}\n\npublic void setImageTitleRegex(String imageTitleRegex) {\n    this.imageTitleRegex = imageTitleRegex;\n}\n\npublic String getImageDescriptionRegex() {\n    return imageDescriptionRegex;\n}\n\npublic void setImageDescriptionRegex(String imageDescriptionRegex) {\n    this.imageDescriptionRegex = imageDescriptionRegex;\n}\n\npublic String getImageThumbnailUrlRegex() {\n    return imageThumbnailUrlRegex;\n}\n\npublic void setImageThumbnailUrlRegex(String imageThumbnailUrlRegex) {\n    this.imageThumbnailUrlRegex = imageThumbnailUrlRegex;\n}\n\npublic String getImageThumbnailTitleRegex() {\n    return imageThumbnailTitleRegex;\n}\n\npublic void setImageThumbnailTitleRegex(String imageThumbnailTitleRegex) {\n    this.imageThumbnailTitleRegex = imageThumbnailTitleRegex;\n}\n\npublic String getImageThumbnailDescriptionRegex() {\n    return imageThumbnailDescriptionRegex;\n}\n\npublic void setImageThumbnailDescriptionRegex(String imageThumbnailDescriptionRegex) {\n    this.imageThumbnailDescriptionRegex = imageThumbnailDescriptionRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoTitleRegex() {\n    return videoTitleRegex;\n}\n\npublic void setVideoTitleRegex(String videoTitleRegex) {\n    this.videoTitleRegex = videoTitleRegex;\n}\n\npublic String getVideoDescriptionRegex() {\n    return videoDescriptionRegex;\n}\n\npublic void setVideoDescription",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageAltRegex() {\n    return imageAltRegex;\n}\n\npublic void setImageAltRegex(String imageAltRegex) {\n    this.imageAltRegex = imageAltRegex;\n}\n\npublic String getImageWidthRegex() {\n    return imageWidthRegex;\n}\n\npublic void setImageWidthRegex(String imageWidthRegex) {\n    this.imageWidthRegex = imageWidthRegex;\n}\n\npublic String getImageHeightRegex() {\n    return imageHeightRegex;\n}\n\npublic void setImageHeightRegex(String imageHeightRegex) {\n    this.imageHeightRegex = imageHeightRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoAltRegex() {\n    return videoAltRegex;\n}\n\npublic void setVideoAltRegex(String videoAltRegex) {\n    this.videoAltRegex = videoAltRegex;\n}\n\npublic String getVideoWidthRegex() {\n    return videoWidthRegex;\n}\n\npublic void setVideoWidthRegex(String videoWidthRegex) {\n    this.videoWidthRegex = videoWidthRegex;\n}\n\npublic String getVideoHeightRegex() {\n    return videoHeightRegex;\n}\n\npublic void setVideoHeightRegex(String videoHeightRegex) {\n    this.videoHeightRegex = videoHeightRegex;\n}\n\npublic String getAudioUrlRegex() {\n    return audioUrlRegex;\n}\n\npublic void setAudioUrlRegex(String audioUrlRegex) {\n    this.audioUrlRegex = audioUrlRegex;\n}\n\npublic String getAudioAltRegex() {\n    return audioAltRegex;\n}\n\npublic void ",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageAltRegex() {\n    return imageAltRegex;\n}\n\npublic void setImageAltRegex(String imageAltRegex) {\n    this.imageAltRegex = imageAltRegex;\n}\n\npublic String getImageWidthRegex() {\n    return imageWidthRegex;\n}\n\npublic void setImageWidthRegex(String imageWidthRegex) {\n    this.imageWidthRegex = imageWidthRegex;\n}\n\npublic String getImageHeightRegex() {\n    return imageHeightRegex;\n}\n\npublic void setImageHeightRegex(String imageHeightRegex) {\n    this.imageHeightRegex = imageHeightRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoAltRegex() {\n    return videoAltRegex;\n}\n\npublic void setVideoAltRegex(String videoAltRegex) {\n    this.videoAltRegex = videoAltRegex;\n}\n\npublic String getVideoWidthRegex() {\n    return videoWidthRegex;\n}\n\npublic void setVideoWidthRegex(String videoWidthRegex) {\n    this.videoWidthRegex = videoWidthRegex;\n}\n\npublic String getVideoHeightRegex() {\n    return videoHeightRegex;\n}\n\npublic void setVideoHeightRegex(String videoHeightRegex) {\n    this.videoHeightRegex = videoHeightRegex;\n}\n\npublic String getVideoTitleRegex() {\n    return videoTitleRegex;\n}\n\npublic void setVideoTitleRegex(String videoTitleRegex) {\n    this.videoTitleRegex = videoTitleRegex;\n}\n\npublic String getVideoDescriptionRegex() {\n    return videoDescriptionRegex;\n}\n\npublic void ",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageAltRegex() {\n    return imageAltRegex;\n}\n\npublic void setImageAltRegex(String imageAltRegex) {\n    this.imageAltRegex = imageAltRegex;\n}\n\npublic String getImageWidthRegex() {\n    return imageWidthRegex;\n}\n\npublic void setImageWidthRegex(String imageWidthRegex) {\n    this.imageWidthRegex = imageWidthRegex;\n}\n\npublic String getImageHeightRegex() {\n    return imageHeightRegex;\n}\n\npublic void setImageHeightRegex(String imageHeightRegex) {\n    this.imageHeightRegex = imageHeightRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoAltRegex() {\n    return videoAltRegex;\n}\n\npublic void setVideoAltRegex(String videoAltRegex) {\n    this.videoAltRegex = videoAltRegex;\n}\n\npublic String getVideoWidthRegex() {\n    return videoWidthRegex;\n}\n\npublic void setVideoWidthRegex(String videoWidthRegex) {\n    this.videoWidthRegex = videoWidthRegex;\n}\n\npublic String getVideoHeightRegex() {\n    return videoHeightRegex;\n}\n\npublic void setVideoHeightRegex(String videoHeightRegex) {\n    this.videoHeightRegex = videoHeightRegex;\n}\n\npublic String getSoundUrlRegex() {\n    return soundUrlRegex;\n}\n\npublic void setSoundUrlRegex(String soundUrlRegex) {\n    this.soundUrlRegex = soundUrlRegex;\n}\n\npublic String getSoundAltRegex() {\n    return soundAltRegex;\n}\n\npublic void ",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageTitleRegex() {\n    return imageTitleRegex;\n}\n\npublic void setImageTitleRegex(String imageTitleRegex) {\n    this.imageTitleRegex = imageTitleRegex;\n}\n\npublic String getImageDescriptionRegex() {\n    return imageDescriptionRegex;\n}\n\npublic void setImageDescriptionRegex(String imageDescriptionRegex) {\n    this.imageDescriptionRegex = imageDescriptionRegex;\n}\n\npublic String getThumbnailUrlRegex() {\n    return thumbnailUrlRegex;\n}\n\npublic void setThumbnailUrlRegex(String thumbnailUrlRegex) {\n    this.thumbnailUrlRegex = thumbnailUrlRegex;\n}\n\npublic String getThumbnailTitleRegex() {\n    return thumbnailTitleRegex;\n}\n\npublic void setThumbnailTitleRegex(String thumbnailTitleRegex) {\n    this.thumbnailTitleRegex = thumbnailTitleRegex;\n}\n\npublic String getThumbnailDescriptionRegex() {\n    return thumbnailDescriptionRegex;\n}\n\npublic void setThumbnailDescriptionRegex(String thumbnailDescriptionRegex) {\n    this.thumbnailDescriptionRegex = thumbnailDescriptionRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoTitleRegex() {\n    return videoTitleRegex;\n}\n\npublic void setVideoTitleRegex(String videoTitleRegex) {\n    this.videoTitleRegex = videoTitleRegex;\n}\n\npublic String getVideoDescriptionRegex() {\n    return videoDescriptionRegex;\n}\n\npublic void setVideoDescriptionRegex(String videoDescriptionRegex) {\n    this.videoDescriptionRegex = videoDescriptionRegex;\n}\n\npublic String getAudioUrlRegex() {\n    return audioUrl",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageTitleRegex() {\n    return imageTitleRegex;\n}\n\npublic void setImageTitleRegex(String imageTitleRegex) {\n    this.imageTitleRegex = imageTitleRegex;\n}\n\npublic String getImageDescriptionRegex() {\n    return imageDescriptionRegex;\n}\n\npublic void setImageDescriptionRegex(String imageDescriptionRegex) {\n    this.imageDescriptionRegex = imageDescriptionRegex;\n}\n\npublic String getThumbnailUrlRegex() {\n    return thumbnailUrlRegex;\n}\n\npublic void setThumbnailUrlRegex(String thumbnailUrlRegex) {\n    this.thumbnailUrlRegex = thumbnailUrlRegex;\n}\n\npublic String getThumbnailTitleRegex() {\n    return thumbnailTitleRegex;\n}\n\npublic void setThumbnailTitleRegex(String thumbnailTitleRegex) {\n    this.thumbnailTitleRegex = thumbnailTitleRegex;\n}\n\npublic String getThumbnailDescriptionRegex() {\n    return thumbnailDescriptionRegex;\n}\n\npublic void setThumbnailDescriptionRegex(String thumbnailDescriptionRegex) {\n    this.thumbnailDescriptionRegex = thumbnailDescriptionRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoTitleRegex() {\n    return videoTitleRegex;\n}\n\npublic void setVideoTitleRegex(String videoTitleRegex) {\n    this.videoTitleRegex = videoTitleRegex;\n}\n\npublic String getVideoDescriptionRegex() {\n    return videoDescriptionRegex;\n}\n\npublic void setVideoDescriptionRegex(String videoDescriptionRegex) {\n    this.videoDescriptionRegex = videoDescriptionRegex;\n}\n\npublic String getExternalUrlRegex() {\n    return externalUrl",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageTitleRegex() {\n    return imageTitleRegex;\n}\n\npublic void setImageTitleRegex(String imageTitleRegex) {\n    this.imageTitleRegex = imageTitleRegex;\n}\n\npublic String getImageDescriptionRegex() {\n    return imageDescriptionRegex;\n}\n\npublic void setImageDescriptionRegex(String imageDescriptionRegex) {\n    this.imageDescriptionRegex = imageDescriptionRegex;\n}\n\npublic String getThumbnailUrlRegex() {\n    return thumbnailUrlRegex;\n}\n\npublic void setThumbnailUrlRegex(String thumbnailUrlRegex) {\n    this.thumbnailUrlRegex = thumbnailUrlRegex;\n}\n\npublic String getThumbnailTitleRegex() {\n    return thumbnailTitleRegex;\n}\n\npublic void setThumbnailTitleRegex(String thumbnailTitleRegex) {\n    this.thumbnailTitleRegex = thumbnailTitleRegex;\n}\n\npublic String getThumbnailDescriptionRegex() {\n    return thumbnailDescriptionRegex;\n}\n\npublic void setThumbnailDescriptionRegex(String thumbnailDescriptionRegex) {\n    this.thumbnailDescriptionRegex = thumbnailDescriptionRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoTitleRegex() {\n    return videoTitleRegex;\n}\n\npublic void setVideoTitleRegex(String videoTitleRegex) {\n    this.videoTitleRegex = videoTitleRegex;\n}\n\npublic String getVideoDescriptionRegex() {\n    return videoDescriptionRegex;\n}\n\npublic void setVideoDescriptionRegex(String videoDescriptionRegex) {\n    this.videoDescriptionRegex = videoDescriptionRegex;\n}\n\npublic String getVideoThumbnailUrlRegex() {\n    return ",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageTitleRegex() {\n    return imageTitleRegex;\n}\n\npublic void setImageTitleRegex(String imageTitleRegex) {\n    this.imageTitleRegex = imageTitleRegex;\n}\n\npublic String getImageDescriptionRegex() {\n    return imageDescriptionRegex;\n}\n\npublic void setImageDescriptionRegex(String imageDescriptionRegex) {\n    this.imageDescriptionRegex = imageDescriptionRegex;\n}\n\npublic String getThumbnailUrlRegex() {\n    return thumbnailUrlRegex;\n}\n\npublic void setThumbnailUrlRegex(String thumbnailUrlRegex) {\n    this.thumbnailUrlRegex = thumbnailUrlRegex;\n}\n\npublic String getThumbnailTitleRegex() {\n    return thumbnailTitleRegex;\n}\n\npublic void setThumbnailTitleRegex(String thumbnailTitleRegex) {\n    this.thumbnailTitleRegex = thumbnailTitleRegex;\n}\n\npublic String getThumbnailDescriptionRegex() {\n    return thumbnailDescriptionRegex;\n}\n\npublic void setThumbnailDescriptionRegex(String thumbnailDescriptionRegex) {\n    this.thumbnailDescriptionRegex = thumbnailDescriptionRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoTitleRegex() {\n    return videoTitleRegex;\n}\n\npublic void setVideoTitleRegex(String videoTitleRegex) {\n    this.videoTitleRegex = videoTitleRegex;\n}\n\npublic String getVideoDescriptionRegex() {\n    return videoDescriptionRegex;\n}\n\npublic void setVideoDescriptionRegex(String videoDescriptionRegex) {\n    this.videoDescriptionRegex = videoDescriptionRegex;\n}\n\npublic String getEmbedUrlRegex() {\n    return embedUrl",
        "<|endoftext|>public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n/* BUG : \n*    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n* FIXED: \n*/\n    <|mask:0|>\n        addFieldError(fieldName, object);\n    }\n}\n<|mask:0|>Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n\npublic String getUrlRegex() {\n    return urlRegex;\n}\n\npublic void setUrlRegex(String urlRegex) {\n    this.urlRegex = urlRegex;\n}\n\npublic String getTitleRegex() {\n    return titleRegex;\n}\n\npublic void setTitleRegex(String titleRegex) {\n    this.titleRegex = titleRegex;\n}\n\npublic String getDescriptionRegex() {\n    return descriptionRegex;\n}\n\npublic void setDescriptionRegex(String descriptionRegex) {\n    this.descriptionRegex = descriptionRegex;\n}\n\npublic String getImageUrlRegex() {\n    return imageUrlRegex;\n}\n\npublic void setImageUrlRegex(String imageUrlRegex) {\n    this.imageUrlRegex = imageUrlRegex;\n}\n\npublic String getImageTitleRegex() {\n    return imageTitleRegex;\n}\n\npublic void setImageTitleRegex(String imageTitleRegex) {\n    this.imageTitleRegex = imageTitleRegex;\n}\n\npublic String getImageDescriptionRegex() {\n    return imageDescriptionRegex;\n}\n\npublic void setImageDescriptionRegex(String imageDescriptionRegex) {\n    this.imageDescriptionRegex = imageDescriptionRegex;\n}\n\npublic String getThumbnailUrlRegex() {\n    return thumbnailUrlRegex;\n}\n\npublic void setThumbnailUrlRegex(String thumbnailUrlRegex) {\n    this.thumbnailUrlRegex = thumbnailUrlRegex;\n}\n\npublic String getThumbnailTitleRegex() {\n    return thumbnailTitleRegex;\n}\n\npublic void setThumbnailTitleRegex(String thumbnailTitleRegex) {\n    this.thumbnailTitleRegex = thumbnailTitleRegex;\n}\n\npublic String getThumbnailDescriptionRegex() {\n    return thumbnailDescriptionRegex;\n}\n\npublic void setThumbnailDescriptionRegex(String thumbnailDescriptionRegex) {\n    this.thumbnailDescriptionRegex = thumbnailDescriptionRegex;\n}\n\npublic String getVideoUrlRegex() {\n    return videoUrlRegex;\n}\n\npublic void setVideoUrlRegex(String videoUrlRegex) {\n    this.videoUrlRegex = videoUrlRegex;\n}\n\npublic String getVideoTitleRegex() {\n    return videoTitleRegex;\n}\n\npublic void setVideoTitleRegex(String videoTitleRegex) {\n    this.videoTitleRegex = videoTitleRegex;\n}\n\npublic String getVideoDescriptionRegex() {\n    return videoDescriptionRegex;\n}\n\npublic void setVideoDescriptionRegex(String videoDescriptionRegex) {\n    this.videoDescriptionRegex = videoDescriptionRegex;\n}\n\npublic String getExternalLinkUrlRegex() {\n    return external"
    ],
    "validation_result": [
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    Matcher matcher = Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value));\n    if (!matcher.matches()) {\n        addFieldError(fieldName, object);\n    }\n}",
            "correctness": "compile_success"
        }
    ]
}