{
    "function range": "302,5-319,5",
    "output": [
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + 120);\n        ZipLong.getValue(data, offset + 124);\n        ZipLong.getValue(data, offset + 128);\n        ZipLong.getValue(data, offset + 132);\n        ZipLong.getValue(data, offset + 136);\n        ZipLong.getValue(data, offset + 140);\n        ZipLong.getValue(data, offset + 144);\n        ZipLong.getValue(data, offset + 148);\n        ZipLong.getValue(data, offset + 152);\n        ZipLong.getValue(data, offset + 156);\n        ZipLong.getValue(data, offset + 160);\n        ZipLong.getValue(data, offset + 164);\n        ZipLong.getValue(data, offset + 168);\n        ZipLong.getValue(data, offset + 172);\n        ZipLong.getValue(data, offset + 176);\n        ZipLong.getValue(data, offset + 180);\n        ZipLong.getValue(data, offset + 184);\n        ZipLong.getValue(data, offset + 188);\n        ZipLong.getValue(data, offset + 192);\n        ZipLong.getValue(data, offset + 196);\n        ZipLong.getValue(data, offset + 200);\n        ZipLong.getValue(data, offset + 204);\n        ZipLong.getValue(data, offset + 208);\n        ZipLong.getValue(data, offset + 212);\n        ZipLong.getValue(data, offset + 216);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 18);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 22);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 26);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 30);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 34);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 38);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 42);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 46);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 50);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 54);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 58);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 62);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 66);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 70);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 74);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 78);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 82);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 86);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 90);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 94);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 98);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 102);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 106);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 110);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 114);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 18);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 22);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 26);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 30);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 34);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 38);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 42);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 46);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 50);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 54);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 58);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 62);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 66);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 70);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 74);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 78);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 82);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 86);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 90);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 94);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 98);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 102);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 106);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 110);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 114);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 22);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 26);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 30);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 34);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 38);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 42);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 46);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 50);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 54);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 58);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 62);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 66);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 70);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 74);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 78);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 82);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 86);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 90);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 94);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 98);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 102);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 106);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 110);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 114);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + 118);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 18);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 22);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 26);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 30);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 34);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 38);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 42);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 46);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 50);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 54);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 58);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 62);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 66);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 70);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 74);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 78);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 82);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 86);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 90);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 94);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 98);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 102);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 106);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 110);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 114);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 18);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 22);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 26);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 30);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 34);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 38);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 42);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 46);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 50);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 54);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 58);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 62);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 66);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 70);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 74);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 78);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 82);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 86);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 90);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 94);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 98);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 102);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 106);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 110);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 114);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 18);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 22);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 26);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 30);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 34);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 38);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 42);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 46);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 50);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 54);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 58);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 62);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 66);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 70);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 74);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 78);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 82);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 86);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 90);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 94);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 98);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 102);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 106);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 110);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 114);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + 120);\n        ZipLong.getValue(data, offset + 124);\n        ZipLong.getValue(data, offset + 128);\n        ZipLong.getValue(data, offset + 132);\n        ZipLong.getValue(data, offset + 136);\n        ZipLong.getValue(data, offset + 140);\n        ZipLong.getValue(data, offset + 144);\n        ZipLong.getValue(data, offset + 148);\n        ZipLong.getValue(data, offset + 152);\n        ZipLong.getValue(data, offset + 156);\n        ZipLong.getValue(data, offset + 160);\n        ZipLong.getValue(data, offset + 164);\n        ZipLong.getValue(data, offset + 168);\n        ZipLong.getValue(data, offset + 172);\n        ZipLong.getValue(data, offset + 176);\n        ZipLong.getValue(data, offset + 180);\n        ZipLong.getValue(data, offset + 184);\n        ZipLong.getValue(data, offset + 188);\n        ZipLong.getValue(data, offset + 192);\n        ZipLong.getValue(data, offset + 196);\n        ZipLong.getValue(data, offset + 200);\n        ZipLong.getValue(data, offset + 204);\n        ZipLong.getValue(data, offset + 208);\n        ZipLong.getValue(data, offset + 212);\n        ZipLong.getValue(data, offset + 216);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + 120);\n        ZipLong.getValue(data, offset + 124);\n        ZipLong.getValue(data, offset + 128);\n        ZipLong.getValue(data, offset + 136);\n        ZipLong.getValue(data, offset + 140);\n        ZipLong.getValue(data, offset + 144);\n        ZipLong.getValue(data, offset + 148);\n        ZipLong.getValue(data, offset + 152);\n        ZipLong.getValue(data, offset + 156);\n        ZipLong.getValue(data, offset + 160);\n        ZipLong.getValue(data, offset + 164);\n        ZipLong.getValue(data, offset + 168);\n        ZipLong.getValue(data, offset + 172);\n        ZipLong.getValue(data, offset + 176);\n        ZipLong.getValue(data, offset + 180);\n        ZipLong.getValue(data, offset + 184);\n        ZipLong.getValue(data, offset + 188);\n        ZipLong.getValue(data, offset + 192);\n        ZipLong.getValue(data, offset + 196);\n        ZipLong.getValue(data, offset + 200);\n        ZipLong.getValue(data, offset + 204);\n        ZipLong.getValue(data, offset + 208);\n        ZipLong.getValue(data, offset + 212);\n        ZipLong.getValue(data, offset + 216);\n        ZipLong.getValue(data, offset + 220);\n        ZipLong.getValue(data, offset + ",
        "<|endoftext|>public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n/* BUG : \n*        for (int i = 0; i < this.rcount; i++) {\n* FIXED: \n*/\n        <|mask:0|>\n            for (int j = 0; j < this.hashSize; j++) {\n            }\n        }\n    }\n}\n<|mask:0|>ZipLong.getValue(data, offset + 16);\n        ZipLong.getValue(data, offset + 20);\n        ZipLong.getValue(data, offset + 24);\n        ZipLong.getValue(data, offset + 28);\n        ZipLong.getValue(data, offset + 32);\n        ZipLong.getValue(data, offset + 36);\n        ZipLong.getValue(data, offset + 40);\n        ZipLong.getValue(data, offset + 44);\n        ZipLong.getValue(data, offset + 48);\n        ZipLong.getValue(data, offset + 52);\n        ZipLong.getValue(data, offset + 56);\n        ZipLong.getValue(data, offset + 60);\n        ZipLong.getValue(data, offset + 64);\n        ZipLong.getValue(data, offset + 68);\n        ZipLong.getValue(data, offset + 72);\n        ZipLong.getValue(data, offset + 76);\n        ZipLong.getValue(data, offset + 80);\n        ZipLong.getValue(data, offset + 84);\n        ZipLong.getValue(data, offset + 88);\n        ZipLong.getValue(data, offset + 92);\n        ZipLong.getValue(data, offset + 96);\n        ZipLong.getValue(data, offset + 100);\n        ZipLong.getValue(data, offset + 104);\n        ZipLong.getValue(data, offset + 108);\n        ZipLong.getValue(data, offset + 112);\n        ZipLong.getValue(data, offset + 116);\n        ZipLong.getValue(data, offset + 120);\n        ZipLong.getValue(data, offset + 124);\n        ZipLong.getValue(data, offset + 128);\n        ZipLong.getValue(data, offset + 132);\n        ZipLong.getValue(data, offset + 136);\n        ZipLong.getValue(data, offset + 140);\n        ZipLong.getValue(data, offset + 144);\n        ZipLong.getValue(data, offset + 148);\n        ZipLong.getValue(data, offset + 152);\n        ZipLong.getValue(data, offset + 156);\n        ZipLong.getValue(data, offset + 160);\n        ZipLong.getValue(data, offset + 164);\n        ZipLong.getValue(data, offset + 168);\n        ZipLong.getValue(data, offset + 172);\n        ZipLong.getValue(data, offset + 176);\n        ZipLong.getValue(data, offset + 180);\n        ZipLong.getValue(data, offset + 184);\n        ZipLong.getValue(data, offset + 188);\n        ZipLong.getValue(data, offset + 192);\n        ZipLong.getValue(data, offset + 196);\n        ZipLong.getValue(data, offset + 200);\n        ZipLong.getValue(data, offset + 204);\n        ZipLong.getValue(data, offset + 208);\n        ZipLong.getValue(data, offset + 212);\n        ZipLong.getValue(data, offset + 216);\n        ZipLong.getValue(data, offset + "
    ],
    "validation_result": [
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "uncompilable"
        }
    ]
}