{
    "output": [
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentTitle() {\n    return documentTitle;\n}\n\npublic void setDocumentTitle(String documentTitle) {\n    this.documentTitle = documentTitle;\n}\n\npublic String getDocumentAuthor() {\n    return documentAuthor;\n}\n\npublic void setDocumentAuthor(String documentAuthor) {",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentTitle() {\n    return documentTitle;\n}\n\npublic void setDocumentTitle(String documentTitle) {\n    this.documentTitle = documentTitle;\n}\n\npublic String getDocumentDescription() {\n    return documentDescription;\n}\n\npublic void setDocumentDescription(String documentDescription) {",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentBasePath() {\n    return documentBasePath;\n}\n\npublic void ",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentBase() {\n    return documentBase;\n}\n\npublic void setDocument",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentBasePath() {\n    return documentBasePath;\n}\n\npublic void ",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentRoot() {\n    return documentRoot;\n}\n\npublic void set",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentBase() {\n    return documentBase;\n}\n\npublic void setDocument",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentId() {\n    return documentId;\n}\n\npublic void setDocumentId(",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentBaseUris() {\n    return documentBaseUris;\n}\n\npublic void ",
        "<|endoftext|>protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        <|mask:0|>\n\n        if (type != null || answer != null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n\n    return null;\n}\n<|mask:0|>\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}\n\npublic Class<?> getDocumentType() {\n    return documentType;\n}\n\npublic void setDocumentType(Class<?> documentType) {\n    this.documentType = documentType;\n}\n\npublic String getDocumentFormat() {\n    return documentFormat;\n}\n\npublic void setDocumentFormat(String documentFormat) {\n    this.documentFormat = documentFormat;\n}\n\npublic String getDocumentLanguage() {\n    return documentLanguage;\n}\n\npublic void setDocumentLanguage(String documentLanguage) {\n    this.documentLanguage = documentLanguage;\n}\n\npublic String getDocumentEncoding() {\n    return documentEncoding;\n}\n\npublic void setDocumentEncoding(String documentEncoding) {\n    this.documentEncoding = documentEncoding;\n}\n\npublic String getDocumentUri() {\n    return documentUri;\n}\n\npublic void setDocumentUri(String documentUri) {\n    this.documentUri = documentUri;\n}\n\npublic String getDocumentBaseUri() {\n    return documentBaseUri;\n}\n\npublic void setDocumentBaseUri(String documentBaseUri) {\n    this.documentBaseUri = documentBaseUri;\n}\n\npublic String getDocumentBaseUris() {\n    return documentBaseUris;\n}\n\npublic void "
    ],
    "validation_result": [
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        },
        {
            "patch": "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body != null) {\n\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n\n        if (type != null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n\n        /* BUG: \n         * if (answer == null) {\n         *     if (!(body instanceof WrappedFile)) {\n         *         if (!(body instanceof BeanInvocation)) {\n         *             if (body instanceof String) {\n         *                 StringReader stringReader = new StringReader((String) body);\n         *                 answer = new InputSource(stringReader);\n         *             }\n         *         }else{\n         *             CamelContext context = exchange.getContext();\n         *             TypeConverter typeConverter = context.getTypeConverter();\n         *             BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n         *             if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n         *                 answer = null;\n         *             }\n         *         }\n         *     }else{\n         *         CamelContext context = exchange.getContext();\n         *         TypeConverter typeConverter = context.getTypeConverter();\n         *         answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n         *     }\n         * }\n         * FIXED: \n         */\n        \n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }else{\n                        CamelContext context = exchange.getContext();\n                        TypeConverter typeConverter = context.getTypeConverter();\n                        BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                        if (bi.getArgs() != null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                            answer = null;\n                        }\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }else{\n            CamelContext context = exchange.getContext();\n            TypeConverter typeConverter = context.getTypeConverter();\n            answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n        }\n\n        if (cause != null) {\n            throw cause;\n        }\n\n        return answer;\n    }\n\n    return null;\n}",
            "correctness": "test_timeout"
        }
    ]
}