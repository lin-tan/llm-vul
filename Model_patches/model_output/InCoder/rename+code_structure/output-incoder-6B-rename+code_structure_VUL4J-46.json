{
    "output": [
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       ",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOut",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName, String textComponentCfgName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  X",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName, String textComponentCfgName)\n   {\n       super(objcodec);\n       if (xml",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName,\n           String textComponentCfgName)\n   {\n       super(objcodec);\n       ",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName, XMLStreamWriter writer)\n   {\n       super(objcodec);\n       if (xml",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName, XMLInputFactory xmlInput)\n   {\n       super(objcodec);\n       if (xml",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName, XMLStreamWriter xmlWriter)\n   {\n       super(objcodec);\n       if (",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n      ",
        "<|endoftext|>   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           <|mask:0|>\n       }\n       textComponentCfgName = textComponentName;\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n<|mask:0|>xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n       textComponentCfgName = textComponentName;\n   }\n   \n   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName,\n           XMLInputFactory xmlInput2, XMLOutputFactory xmlOutput2)\n"
    ],
    "validation_result": [
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLInputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput =  XMLOutputFactory.newInstance();\n       }\n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           /* BUG: \n            * xmlInput = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlInput = XMLOutputFactory.newInstance();\n       }\n       xmlParserCharacteristics = xpCharacteristics;\n       initializeManufactories(xmlInput, xmlOutput);\n       xmlOutputManufactory = xmlOutput;\n       xmlInputManufactory = xmlInput;\n       \n   }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n           XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n           String nameForTextElem)\n   {\n       super(oc);\n       if (xmlOut == null) {\n           xmlOut =  XMLOutputFactory.newInstance();\n       }\n       _xmlGeneratorFeatures = xgFeatures;\n      \n       if (xmlIn == null) {\n           /* BUG: \n            * xmlIn = XMLInputFactory.newInstance();\n            * FIXED: \n            */\n           xmlIn = XMLOutputFactory.newInstance();\n       }\n       _xmlParserFeatures = xpFeatures;\n       _initFactories(xmlIn, xmlOut);\n       _xmlOutputFactory = xmlOut;\n       _xmlInputFactory = xmlIn;\n       \n   }"
        }
    ]
}