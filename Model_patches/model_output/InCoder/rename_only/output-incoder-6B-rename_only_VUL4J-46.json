{
    "output": [
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xg",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentCfgName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentCfgName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xp",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentCfgName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentCfgName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentCfgName, String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentCfgName;\n    text",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprivate void initializeManufactories(XMLInputFactory xmlInput, XMLOutput",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentCfgName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentCfgName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprivate void initializeManufactories(XMLInputFactory xmlInput, ",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentCfgName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentCfgName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprivate void initializeManufactories(XMLInputFactory xmlInput",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentCfgName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentCfgName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, XMLInput",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentCfgName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentCfgName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    initializeManufactories(null, null);\n    xmlInputManufactory = null;\n    xmlOutputManufactory = null;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, ",
        "<|endoftext|>protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        <|mask:0|>\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n<|mask:0|>xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprotected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}\n\nprivate void initializeManufactories(XMLInputFactory xmlInputFactory, XMLO"
    ],
    "validation_result": [
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        /* BUG: \n         * xmlOut = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        /* BUG: \n         * xmlOut = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        /* BUG: \n         * xmlOut = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        /* BUG: \n         * xmlOut = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        /* BUG: \n         * xmlOut = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        /* BUG: \n         * xmlOut = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n        XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n        String textComponentName)\n{\n    super(objcodec);\n    xmlParserCharacteristics = xpCharacteristics;\n    xmlCreatorCharacteristics = xgCharacteristics;\n    textComponentCfgName = textComponentName;\n    if (xmlInput == null) {\n        /* BUG: \n         * xmlInput = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlInput = XMLInputFactory.newInstance();\n    }\n    if (xmlOutput == null) {\n        /* BUG: \n         * xmlOutput = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOutput = XMLOutputFactory.newInstance();\n    }\n    initializeManufactories(xmlInput, xmlOutput);\n    xmlInputManufactory = xmlInput;\n    xmlOutputManufactory = xmlOutput;\n}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        /* BUG: \n         * xmlIn = XMLInputFactory.newInstance();\n         * FIXED: \n         */\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        /* BUG: \n         * xmlOut = XMLOutputFactory.newInstance();\n         * FIXED: \n         */\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}"
        }
    ]
}