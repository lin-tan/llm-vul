{
    "function range": "2,3-26,5",
    "output": [
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      this.cryptSize = ZipShort.getValue(data, offset + 10);\n      this.cryptAlg = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 16));\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(7);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(8);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(9);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(7);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(8);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(7);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }\n}\n",
        "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }\n}\n"
    ],
    "validation_result": [
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      this.cryptSize = ZipShort.getValue(data, offset + 10);\n      this.cryptAlg = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 16));\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(7);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(8);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(9);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(7);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(8);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(7);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(0);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(1);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(3);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(4);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(5);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(6);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }",
            "correctness": "test_success"
        },
        {
            "patch": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n      this.rcount = ZipLong.getValue(data, offset + 8);\n      this.flags = ZipShort.getValue(data, offset + 6);\n      this.format = ZipShort.getValue(data, offset);\n      this.bitlen = ZipShort.getValue(data, offset + 4);\n      int zv2 = ZipShort.getValue(data, offset + 2);\n      this.algId = EncryptionAlgorithm.getAlgorithmByCode(zv2);\n      if (rcount <= 0) {\n          return;\n      }\n      this.hashSize = ZipShort.getValue(data, offset + 14);\n      int zv12 =  ZipShort.getValue(data, offset + 12);\n      this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv12);\n      }\n      if (this.hashAlg == null) {\n          this.hashAlg = HashAlgorithm.getAlgorithmByCode(zv2);\n      }\n  }",
            "correctness": "test_success"
        }
    ]
}