{
    "function range": "2,5-58,5",
    "output": [
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }\n\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        return dbUserName.equals(requestUserName);\n    }\n    return false;\n  }\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (requestUserName.equals(dbUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.equals(dbUserName, requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName!= null && requestUserName!= null && dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.isNotBlank(dbUserName) && StringUtils.isNotBlank(requestUserName)) {\n            return dbUserName.equals(requestUserName);\n        }\n    }\n    return false;\n  }\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName!= null && requestUserName!= null && dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }\n\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.isNotBlank(dbUserName) && StringUtils.isNotBlank(requestUserName)) {\n            return dbUserName.equalsIgnoreCase(requestUserName);\n        }\n    }\n    return false;\n  }\n}\n",
        "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.isBlank(dbUserName) || StringUtils.isBlank(requestUserName)) {\n            return true;\n        }\n        return dbUserName.equals(requestUserName);\n    }\n    return false;\n  }\n}\n"
    ],
    "validation_result": [
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }",
            "correctness": "test_timeout"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }",
            "correctness": "test_timeout"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        return dbUserName.equals(requestUserName);\n    }\n    return false;\n  }",
            "correctness": "test_timeout"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (requestUserName.equals(dbUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }",
            "correctness": "test_timeout"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.equals(dbUserName, requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName!= null && requestUserName!= null && dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }",
            "correctness": "test_timeout"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.isNotBlank(dbUserName) && StringUtils.isNotBlank(requestUserName)) {\n            return dbUserName.equals(requestUserName);\n        }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (dbUserName!= null && requestUserName!= null && dbUserName.equals(requestUserName)) {\n            return true;\n        }\n    }\n    return false;\n  }",
            "correctness": "test_timeout"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.isNotBlank(dbUserName) && StringUtils.isNotBlank(requestUserName)) {\n            return dbUserName.equalsIgnoreCase(requestUserName);\n        }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean isAllowed(HttpServletRequest request) throws IOException {\n    BufferedReader reader = request.getReader();\n    ScimUser scimUserFromRequest = JsonUtils.readValue(IOUtils.toString(reader), ScimUser.class);\n    String pathInfo = UaaUrlUtils.getRequestPath(request);\n    IdentityZone zone = IdentityZoneHolder.get();\n    ScimUser scimUserFromDb;\n    try {\n        scimUserFromDb = scimUserProvisioning.retrieve(\n            UaaUrlUtils.extractPathVariableFromUrl(USER_ID_PATH_PARAMETER_INDEX, pathInfo), zone.getId());\n    } catch (ScimResourceNotFoundException e) {\n        return true;\n    }\n    String dbEmail = scimUserFromDb.getPrimaryEmail();\n    String requestEmail = scimUserFromRequest.getPrimaryEmail();\n    if (dbEmail.equals(requestEmail)) {\n        String dbUserName = scimUserFromDb.getUserName();\n        String requestUserName = scimUserFromRequest.getUserName();\n        if (StringUtils.isBlank(dbUserName) || StringUtils.isBlank(requestUserName)) {\n            return true;\n        }\n        return dbUserName.equals(requestUserName);\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        }
    ]
}