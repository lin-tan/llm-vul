{
    "function range": "2,5-112,5",
    "output": [
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      return item.isBuildable();\n    }\n    return false;\n  }\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          ParametersDefinitionProperty.ParameterDefinition pd = pdp.getParameterDefinition(step.getName());\n          if (pd!= null) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null && pdp.getParameterDefinitions()!= null) {\n          for (ParametersDefinitionProperty.ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd.getName().equals(step.getName())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      return true;\n    }\n    return false;\n  }\n\n  @Override\n  public void stop() throws Exception {\n  }\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          for (ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd instanceof TextParameterDefinition) {\n              TextParameterDefinition tpd = (TextParameterDefinition) pd;\n              if (tpd.getName().equals(step.getParameterName())) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          ParametersDefinitionProperty.ParameterDefinition pd = pdp.getParameterDefinition(step.getName());\n          if (pd!= null) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          ParametersDefinitionProperty.ParameterDefinition pd = pdp.getParameterDefinition(step.getName());\n          if (pd!= null) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  @Override\n  public void stop() throws Exception {\n  }\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null && pdp.getParameterDefinitions()!= null) {\n          for (ParametersDefinitionProperty.ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd.getName().equals(step.getName())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof AbstractProject) {\n        AbstractProject project = (AbstractProject) item;\n        if (project.isDisabled()) {\n          return false;\n        }\n      }\n    }\n    return super.start();\n  }\n}\n",
        "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null && pdp.getParameterDefinitions()!= null) {\n          for (ParametersDefinitionProperty.ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd.getName().equals(step.getName())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  @Override\n  public void stop() throws Exception {\n  }\n}\n"
    ],
    "validation_result": [
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      return item.isBuildable();\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          ParametersDefinitionProperty.ParameterDefinition pd = pdp.getParameterDefinition(step.getName());\n          if (pd!= null) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null && pdp.getParameterDefinitions()!= null) {\n          for (ParametersDefinitionProperty.ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd.getName().equals(step.getName())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      return true;\n    }\n    return false;\n  }",
            "correctness": "test_timeout"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          for (ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd instanceof TextParameterDefinition) {\n              TextParameterDefinition tpd = (TextParameterDefinition) pd;\n              if (tpd.getName().equals(step.getParameterName())) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          ParametersDefinitionProperty.ParameterDefinition pd = pdp.getParameterDefinition(step.getName());\n          if (pd!= null) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null) {\n          ParametersDefinitionProperty.ParameterDefinition pd = pdp.getParameterDefinition(step.getName());\n          if (pd!= null) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null && pdp.getParameterDefinitions()!= null) {\n          for (ParametersDefinitionProperty.ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd.getName().equals(step.getName())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof AbstractProject) {\n        AbstractProject project = (AbstractProject) item;\n        if (project.isDisabled()) {\n          return false;\n        }\n      }\n    }\n    return super.start();\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "public boolean start() throws Exception {\n    String job = step.getJob();\n    Item item = Jenkins.getActiveInstance().getItem(job, invokingRun.getParent(), Item.class);\n    if (item!= null) {\n      if (item instanceof ParameterizedJobMixIn.ParameterizedJob) {\n        ParameterizedJobMixIn.ParameterizedJob p = (ParameterizedJobMixIn.ParameterizedJob) item;\n        ParametersDefinitionProperty pdp = p.getProperty(ParametersDefinitionProperty.class);\n        if (pdp!= null && pdp.getParameterDefinitions()!= null) {\n          for (ParametersDefinitionProperty.ParameterDefinition pd : pdp.getParameterDefinitions()) {\n            if (pd.getName().equals(step.getName())) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "correctness": "uncompilable"
        }
    ]
}