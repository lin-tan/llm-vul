{
    "function range": "2,5-25,5",
    "output": [
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.new",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, XMLInputFactory xmlIn)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc,",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem,\n        XMLInputFactory xmlIn)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, nameForTextElem);",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem, String nameForXmlElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInput",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, nameForTextElem);\n",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem, String nameForXmlElem)\n{\n    super(oc);\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    _xmlParserFeatures = xpFeatures;\n    _xmlInput",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.new",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xg",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, XMLInputFactory xmlIn,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.new",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc,"
    ],
    "validation_result": [
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    }\n    _xmlGeneratorFeatures = xgFeatures;\n    if (xmlIn == null) {\n        xmlIn = XMLInputFactory.newInstance();\n    }\n    _xmlParserFeatures = xpFeatures;\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n    _nameForTextElem = nameForTextElem;\n}",
            "correctness": "uncompilable"
        }
    ]
}