{
    "output": [
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem, XMLInputFactory xmlIn,\n        XMLOutputFactory xmlOut)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null)",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc,",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem, XMLInputFactory xmlIn,\n        XMLOutputFactory xmlOut)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    _xmlInputFactory = xmlIn",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem, ErrorHandler eh)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xml",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem, ErrorHandler eh)\n{\n    super(oc, eh);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut, String nameForTextElem)\n{\n    this(oc, xpFeatures",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem, XMLResolver resolver)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, null, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem, XMLResolver resolver)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    _",
        "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        String nameForTextElem)\n{\n    this(oc, xpFeatures, xgFeatures, null, null, nameForTextElem);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\n{\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, null);\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}\n\nXmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem, ErrorHandler eh)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    _xmlInput"
    ],
    "validation_result": [
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        },
        {
            "patch": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\n        XMLInputFactory xmlIn, XMLOutputFactory xmlOut,\n        String nameForTextElem)\n{\n    super(oc);\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        _xmlInputFactory = XMLInputFactory.newInstance();\n    } else {\n        _xmlInputFactory = xmlIn;\n    }\n    if (xmlOut == null) {\n        _xmlOutputFactory = XMLOutputFactory.newInstance();\n    } else {\n        _xmlOutputFactory = xmlOut;\n    }\n}",
            "correctness": "compile_success"
        }
    ]
}