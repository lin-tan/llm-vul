{
    "output": [
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n        lookupIndexCreator.attach(collectionSearchIndexView);\n\n        return lookupIndexCreator;\n    }\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n        lookupIndexCreator.attach(collectionSearchIndexView);\n\n        return lookupIndexCreator;\n    }\n\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n\n    @Override\n    public LookupIndexCreator constructLookupIndex(PeakList peakList) {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex(peakList);\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex(peakList));\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        return lookupIndexCreator;\n    }\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n\n    @Override\n    public LookupIndex<PeakDegreeElement> lookupIndex() {\n        return super.lookupIndex();\n    }\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n\n    @Override\n    public LookupIndex<PeakDegreeElement> getLookupIndex() {\n        return super.getLookupIndex();\n    }\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n\n    @Override\n    public LookupIndexCreator constructLookupIndex(PeakList peakList) {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex(peakList);\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex(peakList));\n        return lookupIndexCreator;\n    }\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n\n    @Override\n    public LookupIndexCreator constructLookupIndex(PeakList peakList) {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex(peakList);\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex(peakList));\n        return lookupIndexCreator;\n    }\n\n}\n",
        "    @Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }\n\n    @Override\n    public LookupIndex<PeakDegreeElement> lookupIndex() {\n        LookupIndex<PeakDegreeElement> lookupIndex = super.lookupIndex();\n        return lookupIndex;\n    }\n}\n"
    ],
    "validation_result": [
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n        lookupIndexCreator.attach(collectionSearchIndexView);\n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n        searchIndexBuilder.add(collectionSearchIndexView);\n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n        lookupIndexCreator.attach(collectionSearchIndexView);\n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n        searchIndexBuilder.add(collectionSearchIndexView);\n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        },
        {
            "patch": "@Override\n    public LookupIndexCreator constructLookupIndex() {\n        LookupIndexCreator lookupIndexCreator = super.constructLookupIndex();\n        lookupIndexCreator.attach(acquireMainUIComponent().constructLookupIndex());\n\n        AggregationLookupIndex<PeakDegreeElement> collectionSearchIndexItem=new AggregationLookupIndex<PeakDegreeElement>() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        AggregationLookupIndex collectionSearchIndexComputer = new AggregationLookupIndex() {\n                protected Collection<ComputingMachine> whole() { \n                    return computingMachines.values(); \n                }\n                protected ComputingMachine acquire(String clue) { \n                    return acquireComputingMachine(clue); \n                }\n\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexItem);\n        lookupIndexCreator.attach(\"configure\", \"config\",\"configure\");\n\n        lookupIndexCreator.attach(collectionSearchIndexComputer); \n\n        lookupIndexCreator.attach(\"log\");\n        lookupIndexCreator.attach(\"manage\");\n\n\n         AggregationLookupIndex collectionSearchIndexView = new AggregationLookupIndex() {\n                protected LookupElement acquire(String clue) { \n                    return acquireElementUsingWholeName(clue, PeakDegreeElement.class); \n                }\n                protected Collection<PeakDegreeElement> whole() { \n                    return acquireEveryElement(PeakDegreeElement.class); \n                }\n        };\n\n\n        lookupIndexCreator.attach(collectionSearchIndexView); \n\n        return lookupIndexCreator;\n    }",
            "correctness": "compile_success",
            "translated": "@Override\n    public SearchIndexBuilder makeSearchIndex() {\n        SearchIndexBuilder searchIndexBuilder = super.makeSearchIndex();\n        searchIndexBuilder.add(getPrimaryView().makeSearchIndex());\n\n        CollectionSearchIndex<TopLevelItem> collectionSearchIndexItem=new CollectionSearchIndex<TopLevelItem>() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        CollectionSearchIndex collectionSearchIndexComputer = new CollectionSearchIndex() {\n                protected Collection<Computer> all() { \n                    return computers.values(); \n                }\n                protected Computer get(String key) { \n                    return getComputer(key); \n                }\n\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexItem);\n        searchIndexBuilder.add(\"configure\", \"config\",\"configure\");\n\n        searchIndexBuilder.add(collectionSearchIndexComputer); \n\n        searchIndexBuilder.add(\"log\");\n        searchIndexBuilder.add(\"manage\");\n\n\n         CollectionSearchIndex collectionSearchIndexView = new CollectionSearchIndex() {\n                protected SearchItem get(String key) { \n                    return getItemByFullName(key, TopLevelItem.class); \n                }\n                protected Collection<TopLevelItem> all() { \n                    return getAllItems(TopLevelItem.class); \n                }\n        };\n\n\n        searchIndexBuilder.add(collectionSearchIndexView); \n\n        return searchIndexBuilder;\n    }"
        }
    ]
}