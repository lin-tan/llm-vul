{
    "function range": "2,5-13,5",
    "output": [
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent().getParent()), \"Path to check must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent().getParent()), \"Examine path must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Path to check must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must be a child of the parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Examine path must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Path to check must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Examine path must start with parent path\");\n  }\n}\n",
        "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");"
    ],
    "validation_result": [
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent().getParent()), \"Path to check must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Path to check must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent().getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent().getParent().getParent()), \"Path to check must start with parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent().getParent()), \"Examine path must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Examine path must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent().getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent().getParent().getParent()), \"Examine path must start with parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Path to check must start with parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Examine path must start with parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Path to check must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Path to check must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent()), \"Path to check must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent().getParent()), \"Path to check must start with parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must be a child of the parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Path to check must be a child of the parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent().getParent()), \"Examine path must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Examine path must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent()), \"Examine path must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent().getParent()), \"Examine path must start with parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Path to check must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Path to check must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Path to check must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Path to check must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent()), \"Path to check must start with parent path\");\n  }"
        },
        {
            "patch": "public static void examinePathManipulation(@NonNull Path basePath, @NonNull Path examinePath) {\n    Assert.notNull(examinePath, \"Path to check must not be null\");\n    Assert.notNull(basePath, \"Parent path must not be null\");\n    Assert.isTrue(basePath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(examinePath.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(examinePath.startsWith(basePath), \"Examine path must start with parent path\");\n    Assert.isTrue(examinePath.startsWith(basePath.getParent()), \"Examine path must start with parent path\");\n  }",
            "correctness": "compile_success",
            "translated": "public static void checkDirectoryTraversal(@NonNull Path parentPath, @NonNull Path pathToCheck) {\n    Assert.notNull(pathToCheck, \"Path to check must not be null\");\n    Assert.notNull(parentPath, \"Parent path must not be null\");\n    Assert.isTrue(parentPath.isAbsolute(), \"Parent path must be absolute\");\n    Assert.isTrue(pathToCheck.isAbsolute(), \"Examine path must be absolute\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath), \"Examine path must start with parent path\");\n    Assert.isTrue(pathToCheck.startsWith(parentPath.getParent()), \"Examine path must start with parent path\");\n  }"
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        }
    ]
}