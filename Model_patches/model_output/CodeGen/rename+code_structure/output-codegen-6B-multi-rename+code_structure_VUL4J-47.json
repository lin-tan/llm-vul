{
    "output": [
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(XMLInputFactory.IS_COALESCING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(XMLInputFactory.IS_COALESCING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_COALESCING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_COALESCING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(XMLInputFactory.IS_COALESCING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       \n       xmlOutput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n\n",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       \n       xmlOutput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isCoalescing\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isValidating\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isNamespaceAware\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringComments\", new Boolean(true));\n       xmlInput.setProperty(\"javax.xml.stream.isIgnoringElementContentWhitespace\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isReplacingEntityReferences\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.isSupportingExternalEntities\", new Boolean(true));\n       xmlOutput.setProperty(\"javax.xml.stream.supportDTD\", new Boolean(true));\n       ",
        "   protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics,\n           XMLInputFactory xmlInput, XMLOutputFactory xmlOutput,\n           String textComponentName)\n   {\n       super(objcodec);\n       if (xmlOutput == null) {\n           xmlOutput = XMLOutputFactory.newInstance();\n       }\n       \n       xmlCreatorCharacteristics = xgCharacteristics;\n      \n       if (xmlInput == null) {\n           xmlInput = XMLInputFactory.newInstance();\n       }\n       xmlInput.setProperty(XMLInputFactory.IS_COALESCING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_COALESCING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.SUPPORT_DTD, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_VALIDATING, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, new Boolean(true));\n       xmlInput.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, new Boolean(true));\n       xmlInput."
    ],
    "validation_result": [
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        },
        {
            "patch": "",
            "correctness": "uncompilable",
            "translated": ""
        }
    ]
}