{
    "function range": "2,1-8,1",
    "output": [
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}\n\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}\n\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}\n\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n    }\n    return source;\n}\n}\n",
        "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}\n\n}\n"
    ],
    "validation_result": [
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n        source = source.replace(\"\\u2028\", \"\\\\u2028\");\n        source = source.replace(\"\\u2029\", \"\\\\u2029\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\'\", \"\\\\\\'\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\b\", \"\\\\b\");\n        source = source.replace(\"\\f\", \"\\\\f\");\n    }\n    return source;\n}"
        },
        {
            "patch": "@Override\npublic String JavaScriptStringEncoding(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}",
            "correctness": "compile_success",
            "translated": "@Override\npublic String encodeForJSString(String source) {\n    if( source!= null ){\n        source = source.replace(\"\\\\\", \"\\\\\\\\\");\n        source = source.replace(\"\\\"\", \"\\\\\\\"\");\n        source = source.replace(\"\\n\", \"\\\\n\");\n        source = source.replace(\"\\r\", \"\\\\r\");\n        source = source.replace(\"\\t\", \"\\\\t\");\n    }\n    return source;\n}"
        }
    ]
}