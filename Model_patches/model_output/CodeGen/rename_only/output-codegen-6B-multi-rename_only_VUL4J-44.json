{
    "output": [
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}\n\npublic String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}\n\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}\n\npublic String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t\treturn x.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}\n\treturn null;\n}\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t\treturn x.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}\n\treturn null;\n}\n\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\tx = new StringBuilder();\n\t}\n\treturn x.toString();\n}\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t\tx = new StringBuilder();\n\t}\n\treturn x.toString();\n}\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\tx = new StringBuilder();\n\t}\n\treturn x.toString();\n}\n}\n",
        "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t\treturn x.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}\n\treturn charString;\n}\n\n}\n"
    ],
    "validation_result": [
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry\n\t{\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++)\n\t\t{\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn sb.toString();\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry\n\t{\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++)\n\t\t{\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn sb.toString();\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t\treturn x.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t}\n\treturn null;\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry {\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++) {\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t\treturn sb.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t}\n\treturn null;\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t\treturn x.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t}\n\treturn null;\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry {\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++) {\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t\treturn sb.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t}\n\treturn null;\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry\n\t{\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++)\n\t\t{\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn sb.toString();\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn x.toString();\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry\n\t{\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++)\n\t\t{\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\treturn null;\n\t}\n\treturn sb.toString();\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\tx = new StringBuilder();\n\t}\n\treturn x.toString();\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry\n\t{\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++)\n\t\t{\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\tsb = new StringBuilder();\n\t}\n\treturn sb.toString();\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t\tx = new StringBuilder();\n\t}\n\treturn x.toString();\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry {\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++) {\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t\tsb = new StringBuilder();\n\t}\n\treturn sb.toString();\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry\n\t{\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++)\n\t\t{\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t}\n\tcatch (UnsupportedEncodingException e)\n\t{\n\t\te.printStackTrace();\n\t\tx = new StringBuilder();\n\t}\n\treturn x.toString();\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry {\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++) {\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t\tsb = new StringBuilder();\n\t}\n\treturn sb.toString();\n}"
        },
        {
            "patch": "public String convertChar( char[] exempt, Character a )\n{\n\tString charString = String.valueOf(a.charValue());\n\tbyte[] byteArray;\n\tStringBuilder x;\n\ttry {\n\t\tbyteArray = charString.getBytes(\"UTF-8\");\n\t\tx = new StringBuilder();\n\t\tfor (int i = 0; i < byteArray.length; i++) {\n\t\t\tx.append(byteArray[i]);\n\t\t}\n\t\treturn x.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t}\n\treturn charString;\n}",
            "correctness": "compile_success",
            "translated": "public String encodeCharacter( char[] immune, Character c )\n{\n\tString cStr = String.valueOf(c.charValue());\n\tbyte[] bytes;\n\tStringBuilder sb;\n\ttry {\n\t\tbytes = cStr.getBytes(\"UTF-8\");\n\t\tsb = new StringBuilder();\n\t\tfor (int i = 0; i < bytes.length; i++) {\n\t\t\tsb.append(bytes[i]);\n\t\t}\n\t\treturn sb.toString();\n\t} catch (UnsupportedEncodingException e) {\n\t\te.printStackTrace();\n\t}\n\treturn cStr;\n}"
        }
    ]
}