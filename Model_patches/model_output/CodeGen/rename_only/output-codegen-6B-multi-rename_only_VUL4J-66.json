{
    "output": [
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n            return false;\n      }\n   }\n   return true;\n}\n}\n",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n            return false;\n      }\n   }\n   return true;\n}\n\n}\n",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}\n}\n",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}\n\n}\n",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}\n",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}\n\npublic static void main(String[] args)\n{\n   try\n   {\n      if (args.length == 0)\n      {\n         System.out.println(\"Usage:\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \" \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \":\" + System.getProperty(\"user.dir\") + \" \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \":\" + System.getProperty(\"user.dir\") + \":\" + System.getProperty(\"user.dir\") + \" \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \":\" + System.getProperty(\"user.dir\") + \":\" + System.getProperty(\"user.dir\") + \":\" + System.getProperty(\"user.dir\") + \" \" + Main.class.getName());",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}\n\npublic static void main(String[] args)\n{\n   try\n   {\n      if (args.length == 0)\n      {\n         System.out.println(\"Usage:\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName() + \" URL\");\n         System.out.println();\n         System.out.println(\"Example:\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName() + \" http://www.apache.org/\");\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName() + \" https://www.apache.org/\");\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName() + \" ftp://www.apache.org/\");\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName() + \" http://www.apache.org/index.html\");\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName() + \" https://www.apache.org/index.html\");\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName() + \" ftp://www.apache.org/index.html\");\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}\n\npublic static void main(String[] args)\n{\n   try\n   {\n      if (args.length == 0)\n      {\n         System.out.println(\"Usage:\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \" \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \":\" + System.getProperty(\"user.dir\") + \" \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \":\" + System.getProperty(\"user.dir\") + \":\" + System.getProperty(\"java.home\") + \" \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:\" + System.getProperty(\"java.class.path\") + \":\" + System.getProperty(\"user.dir\") + \":\" + System.getProperty(\"java.home\") + \":\" + System.getProperty(\"sun.boot.class.path\") + \" \" + Main.class",
        "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}\n\npublic static void main(String[] args)\n{\n   try\n   {\n      if (args.length == 0)\n      {\n         System.out.println(\"Usage:\");\n         System.out.println();\n         System.out.println(\"java \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:.:. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:.:.:. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:.:.:.:. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:.:.:.:.:. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or\");\n         System.out.println();\n         System.out.println(\"java -cp.:.:.:.:.:.:. \" + Main.class.getName());\n         System.out.println();\n         System.out.println(\"or"
    ],
    "validation_result": [
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a)\n{\n   if (a == null || a.length() == 0) return false;\n   for (int m = 0; m < a.length(); m++) {\n      switch (a.charAt(m))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str)\n{\n   if (str == null || str.length() == 0) return false;\n   for (int i = 0; i < str.length(); i++) {\n      switch (str.charAt(i))\n      {\n         case '/':\n         case '\\\\':\n         case '?':\n         case ':':\n         case '<':\n         case '>':\n         case ';':\n         case '(':\n         case ')':\n         case '@':\n         case ',':\n         case '[':\n         case ']':\n         case '=':\n         case '{':\n         case '}':\n         case'':\n         case '\\t':\n         case '\\n':\n         case '\\r':\n         case '\\f':\n         case '\\b':\n            return false;\n      }\n   }\n   return true;\n}"
        }
    ]
}