{
    "output": [
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, false);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n",
        "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }\n}\n"
    ],
    "validation_result": [
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "compile_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    factory.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    factory.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_VALIDATING, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, false);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, false);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        },
        {
            "patch": "final static private XMLStreamReader createXMLStreamReader(InputStream inDataSequence) throws XMLStreamException, IOException {\n    XMLInputFactory producer = XMLInputFactory.newInstance();\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    producer.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    producer.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    producer.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    producer.setProperty(XMLInputFactory.IS_COALESCING, true);\n    producer.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    return producer.createXMLStreamReader(inDataSequence);\n  }",
            "correctness": "test_success",
            "translated": "final static private XMLStreamReader createXMLStreamReader(InputStream inputStream) throws XMLStreamException, IOException {\n    XMLInputFactory factory = XMLInputFactory.newInstance();\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\n    factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);\n    factory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true);\n    factory.setProperty(XMLInputFactory.IS_COALESCING, true);\n    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);\n    return factory.createXMLStreamReader(inputStream);\n  }"
        }
    ]
}