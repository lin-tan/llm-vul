{
    "function range": "2,1-20,1",
    "output": [
        "        \n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n}",
        "        \n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n}\n\nfunction init(ObjectCodec objcodec)\n{\n\n\n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n       \n\n\n\n\n       \n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n   \n   \n\n\n\n       \n\n\n\n\n       \n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n   \n\n\n\n\n       \n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n   \n   \n\n\n\n\n   \n\n\n\n\n       \n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n\n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n       \n\n\n\n\n       \n\n}",
        "\n    }\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n   \n\n\n\n\n       \n\n}"
    ],
    "validation_result": [
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n   \n\n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n}\n\nfunction init(ObjectCodec objcodec)\n{\n\n\n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n}\n\nfunction init(ObjectCodec oc)\n{\n\n\n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n       \n\n\n\n\n       \n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n   \n   \n\n\n\n       \n\n\n\n\n       \n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n   \n\n\n\n\n       \n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n   \n   \n\n\n\n\n   \n\n\n\n\n       \n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n\n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n       \n\n\n\n\n       \n\n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        },
        {
            "patch": "}\n    if (xmlOutput == null) {\n        xmlOutput = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n\n   \n\n\n\n\n       \n\n}",
            "correctness": "uncompilable",
            "translated": "}\n    if (xmlOut == null) {\n        xmlOut = XMLOutputFactory.newInstance();\n    if (xml\n   \n\n\n   \n    public\n\n   \n\n\n   \n\n   \n   \n\n\n\n       \n\n\n\n\n       \n}"
        }
    ]
}