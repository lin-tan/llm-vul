{
    "function range": "2,1-56,1",
    "output": [
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n        }\n    return",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n               \n            }\n           \n           \n           \n\n    return",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n\n    }\n\n",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n\n            }\n\n               \n           \n\n               \n           \n           \n        }\n    return result;",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n           \n           \n\n               \n               \n           \n        }\n    return",
        "\n            }           \n           \n            }\n           \n            result = encodeEntirely(charEncoder, result);\n            ++j;\n           \n           \n           \n\n\n   \n   \n            }\n            ++j;\n            }\n       \n            break;\n            }\n            break;\n            int\n           \n\n               \n               \n           \n        }\n    return result",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n               \n            }\n    return",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n               \n            }\n           \n           \n           \n        }\n",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n           \n           \n\n               \n               \n           \n\n    }\n\n",
        "\n            }           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n\n            }\n\n               \n           \n\n               \n           \n        }\n   \n\n    return result"
    ],
    "validation_result": [
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n        }\n    return",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n        }\n    return"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n               \n            }\n           \n           \n           \n\n    return",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n        }\n    return"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n\n    }",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n\n    }"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n\n            }\n\n               \n           \n\n               \n           \n           \n        }\n    return result;",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n\n            }\n\n               \n           \n\n               \n           \n           \n        }\n    return out;"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n           \n           \n\n               \n               \n           \n        }\n    return",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n        }\n    return"
        },
        {
            "patch": "}           \n           \n            }\n           \n            result = encodeEntirely(charEncoder, result);\n            ++j;\n           \n           \n           \n\n\n   \n   \n            }\n            ++j;\n            }\n       \n            break;\n            }\n            break;\n            int\n           \n\n               \n               \n           \n        }\n    return result",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n           \n            out = encodeFully(enc, out);\n            ++i;\n           \n           \n           \n\n\n   \n   \n            }\n            ++i;\n            }\n       \n            break;\n            }\n            break;\n            int\n           \n\n               \n               \n           \n        }\n    return out"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n               \n            }\n    return",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n        }\n    return"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n               \n            }\n           \n           \n           \n        }",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n               \n            }\n           \n           \n           \n        }"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n           \n           \n\n               \n               \n           \n\n    }",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n            }\n            }\n\n               \n           \n\n               \n               \n           \n\n    }"
        },
        {
            "patch": "}           \n           \n            }\n            if (outcome.isUnderflow()) {\n                result = encodeEntirely(charEncoder, result);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n\n            }\n\n               \n           \n\n               \n           \n        }\n   \n\n    return result",
            "correctness": "uncompilable",
            "translated": "}           \n           \n            }\n            if (res.isUnderflow()) {\n                out = encodeFully(enc, out);\n            }\n\n               \n               \n               \n            }\n\n   \n   \n            }\n\n            }\n       \n\n            }\n\n               \n           \n\n               \n           \n        }\n   \n\n    return out"
        }
    ]
}