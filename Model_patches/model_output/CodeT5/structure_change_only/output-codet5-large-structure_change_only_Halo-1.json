{
    "function range": "2,5-13,5",
    "output": [
        "\n\n }\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       \n  }",
        "\n\n }\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
        "\n\n }\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n    else {\n\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
        "\n\n }\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
        "\n\n }\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
        "\n    if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n    }\n  }",
        "\n    if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n  }",
        "\n    if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n    }",
        "\n    if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n    }\n}",
        "\n\n }\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n   \n\n   \n  }"
    ],
    "validation_result": [
        {
            "patch": "}\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       \n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "}\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "}\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n    else {\n\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "}\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "}\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n    }\n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n  }",
            "correctness": "uncompilable"
        },
        {
            "patch": "if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n    }",
            "correctness": "uncompilable"
        },
        {
            "patch": "if (!parentPath.equals(pathToCheck)) {\n\n\n\n\nException\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .setDirectoryTraversal(true);\n       \n    }\n}",
            "correctness": "uncompilable"
        },
        {
            "patch": "}\n\n\n\n    if (!parentPath.equals(pathToCheck)) {Exception\n\n\n\n    else {\n       \n\n\n\n    if (!parentPath.equals(pathToCheck)) {\nException.\n\n\n    if (!parentPath.equals(pathToCheck)) {\n\n       .\n   \n\n   \n  }",
            "correctness": "uncompilable"
        }
    ]
}