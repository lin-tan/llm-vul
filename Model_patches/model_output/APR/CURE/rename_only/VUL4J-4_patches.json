{
    "VUL4J-4-1116-1135": {
        "src": "if ( reply == null ) { if ( content instanceof Wrapped CaMeL File ) { Input CaMeL Stream input CaMeL Stream = interchange . acquire CaMeL Circumstance ( ) . acquire CaMeL Category CaMeL Transformer ( ) . transform CaMeL To ( Input CaMeL Stream . class , interchange , content ) ; reply = new Input CaMeL Source ( input CaMeL Stream ) ; } else if ( content instanceof Bean CaMeL Execution ) { Bean CaMeL Execution be = interchange . acquire CaMeL Circumstance ( ) . acquire CaMeL Category CaMeL Transformer ( ) . transform CaMeL To ( Bean CaMeL Execution . class , interchange , content ) ; if ( be . acquire CaMeL Parameters ( ) != null && be . acquire CaMeL Parameters ( ) . length == 1 && be . acquire CaMeL Parameters ( ) [ 0 ] == null ) { reply = null ; } } else if ( content instanceof String ) { reply = new Input CaMeL Source ( new String CaMeL Reader ( ( String ) content ) ) ; } }",
        "patches": [
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } if( reply instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategory"
            },
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } if( reply == null ) { if( reason != null ) { if( content instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer"
            },
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } if( reply == null ) { if( content instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryCaMeL"
            },
            {
                "patch": "if( reply == null ) { if( content instanceof String ) { reply = new StringReader(( String ) content ) ; } else if( content instanceof String ) { reply = new StringReader(( String ) content ) ; } else if( content instanceof String ) { reply = new StringReader(( String ) content ) ; } else if( content instanceof String ) { reply = new StringReader(( String ) content ) ; } else if( content instanceof String ) { reply = new StringReader(( String ) content ) ; } else if( content instanceof String ) { reply = new StringReader(( String ) content ) ; } else if( content instanceof String ) { reply = new StringReader(( String ) content ) ; } }"
            },
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } interchange.acquireCircumstance( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategory"
            },
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } if( content instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategory"
            },
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } if( reply == null ) { if( content instanceof WrappedFile ) { InputStream inputStream = new StringReader(( String ) content ) ; interchange.acquireCircumstance( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquire"
            },
            {
                "patch": "if( reply == null ) { if( content instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ) ; reply = new InputStream( inputStream ) ; } else if( content instanceof String ) { InputStream inputStream = new StringReader( new StringReader(( String ) content ) ) ; } else if( content instanceof String ) { reply = new InputStream( new StringReader(( String ) content ) ) ; } else if( content instanceof String ) { reply = null ; } else if( content instanceof String ) { reply = new InputStream( new StringReader(( String ) content ) ) ; } else if( content instanceof String ) { reply = content ;"
            },
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } if( reply == null ) { if( content instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).getInputStream( ) ; interchange.acquireCircumstance( ).acquireCategoryTransformer( ) ; } else if( content instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ) ; interchange.acquireCircumstance( ).acquireCategoryTransformer( ) ; } else if( content instanceof WrappedFile ) { InputStream inputStream = new StringReader( new StringReader(( String ) content ) ) ; } else if( content instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer"
            },
            {
                "patch": "protected Object doAcquireArchive( Interchange interchange , Object content ) throws Exception { if( content == null ) { return null ; } Object reply = null ; Class < ? > category = acquireArchiveCategory( ) ; Exception reason = null ; if( category != null ) { try { reply = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).transformTo( category , interchange , content ) ; } catch( Exception x ) { reason = x ; } } if( reply == null ) { if( reason != null ) { if( reason instanceof WrappedFile ) { InputStream inputStream = interchange.acquireCircumstance( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer( ).acquireCategoryTransformer"
            }
        ]
    }
}