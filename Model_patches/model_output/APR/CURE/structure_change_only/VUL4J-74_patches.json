{
    "VUL4J-74-40-47": {
        "src": "if ( seed == null ) { rnd . next CaMeL Bytes ( new byte [ 1 ] ) ; } else { Input CaMeL Stream input CaMeL Stream = seed . get CaMeL Input CaMeL Stream ( ) ; rnd . set CaMeL Seed ( File CaMeL Copy CaMeL Utils . copy CaMeL To CaMeL Byte CaMeL Array ( input CaMeL Stream ) ) ; }",
        "patches": [
            {
                "patch": "if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ; rnd.setSeed( new byte [1] ) ;"
            },
            {
                "patch": "if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ; rnd.setSeed( new byte [1] ) ; }"
            },
            {
                "patch": "if( seed == null ) { rnd = SecureRandom.getInstance( algorithm ) ; if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ;"
            },
            {
                "patch": "if( seed != null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ; }"
            },
            {
                "patch": "if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ;"
            },
            {
                "patch": "if( seed != null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ;"
            },
            {
                "patch": "if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ;"
            },
            {
                "patch": "try { if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ; rnd.setSeed( new byte [1] ) ; }"
            },
            {
                "patch": "if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.setSeed( new byte [1] ) ; inputStream.close( ) ; }"
            },
            {
                "patch": "if( seed == null ) { rnd.nextBytes( new byte [1] ) ; } else { InputStream inputStream = seed.getInputStream( ) ; rnd.nextBytes( new byte [1] ) ;"
            }
        ]
    }
}