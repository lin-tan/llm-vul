{
    "id": 20,
    "patches": [
        {
            "rank": 1,
            "score": -0.2573,
            "fix_type": "general",
            "patch": "if (parentFile != null ){\n  File parentFile = file.getParentFile();\nif (parentFile != null ){\nparentFile.mkdirs();\n}\nelse {\nIOUtil.copy();\n}\n}\n"
        },
        {
            "rank": 2,
            "score": -0.3322,
            "fix_type": "general",
            "patch": "if (whetherOverwrite() || file.exists() || file.lastModified() < itemTime.getTime() ){\n  File parentFile = file.getParentFile();\nif (parentFile != null ){\nparentFile.mkdirs(symbolicLinkTargetLocation);\n}\nelse {\n  OutputStream output = null;\ntry{\noutput = new FileOutputStream(file);\noutput = new FileOutputStream(file);\nIOUtil.copy(compressedInDataSequence);\noutput = null;\n}\n}\n}\n"
        },
        {
            "rank": 3,
            "score": -0.4667,
            "fix_type": "insert",
            "patch": "if (file == null ){\nreturn;\n}\n"
        },
        {
            "rank": 4,
            "score": -0.873,
            "fix_type": "general",
            "patch": "setDestFile(file);\n"
        },
        {
            "rank": 5,
            "score": -0.873,
            "fix_type": "general",
            "patch": "setSourceFile(file);\n"
        },
        {
            "rank": 6,
            "score": -0.3091,
            "fix_type": "general",
            "patch": "if (whetherOverwrite() || !file.exists() || file.lastModified() < itemTime.getTime() ){\nparentFile.mkdirs();\n}\nelse {\nreturn;\n}\n"
        },
        {
            "rank": 7,
            "score": -0.3357,
            "fix_type": "general",
            "patch": "if (whetherOverwrite() || file.exists() || file.lastModified() < itemTime.getTime() ){\n  File parentFile = file.getParentFile();\nif (parentFile != null ){\nparentFile.mkdirs(symbolicLinkTargetLocation);\n}\nelse {\n  OutputStream output = null;\ntry{\noutput = new FileOutputStream(file);\noutput = new FileOutputStream(file);\noutput = null;\nIOUtil.copy(compressedInDataSequence);\n}\n}\n}\n"
        },
        {
            "rank": 8,
            "score": -0.534,
            "fix_type": "insert",
            "patch": " final File file = FileUtils.resolveFile();\n"
        },
        {
            "rank": 9,
            "score": -1.1758,
            "fix_type": "general",
            "patch": "return setDestFile(file);\n"
        },
        {
            "rank": 10,
            "score": -1.1758,
            "fix_type": "general",
            "patch": "return setSourceFile(file);\n"
        }
    ]
}