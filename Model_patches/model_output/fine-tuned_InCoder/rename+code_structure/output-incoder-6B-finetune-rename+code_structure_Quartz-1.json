{
    "output": [
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    DocumentBuilder archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n<|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilderFactory();\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreator;\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder(false);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder(null);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreator.newDocumentBuilder();\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder(true);\n<|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreatorManufactory.newSAXParser().getXMLReader();\n<|endofmask|>",
        "<|endoftext|>protected void loadArchiveAnalyzer() throws ParserConfigurationException  {\n    Object source = solveSchemeOrigin();\n    DocumentBuilderFactory archiveCreatorManufactory = DocumentBuilderFactory.newInstance();\n    archiveCreatorManufactory.setValidating(true);\n    archiveCreatorManufactory.setNamespaceAware(true);\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaLanguage\", \"http://www.w3.org/2001/XMLSchema\");\n    archiveCreatorManufactory.setAttribute(\"http://java.sun.com/xml/jaxp/properties/schemaSource\", source);\n// buggy lines start:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n// buggy lines end\n    \n    archiveCreator.setErrorHandler(this);\n    NamespaceContext nsCircumstance = new NamespaceContext()\n    {\n        public String acquireBeginningOfString(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n      public String acquireTitilescopeURI(String beginningOfString)\n      {\n            if (beginningOfString!= null){\n                switch(beginningOfString){\n                    case XMLConstants.XML_NS_PREFIX:\n                        return XMLConstants.XML_NS_URI;\n                    case \"q\":\n                        return PROJECT_TS;\n                    case XMLConstants.XMLNS_ATTRIBUTE:\n                        return XMLConstants.XMLNS_ATTRIBUTE_NS_URI;\n                    default:\n                        break;\n                }\n                return XMLConstants.NULL_NS_URI;\n            }else{\n                throw new IllegalArgumentException(\"Null prefix\");\n            }\n      }\n      public Iterator<?> acquireBeginningsOfStrings(String titlescopeURI)\n      {\n          throw new UnsupportedOperationException();\n      }\n    }; \n    XPathFactory xpathFactory = XPathFactory.newInstance();\n    path = xpathFactory.newXPath();\n    path.setNamespaceContext(nsCircumstance);\n}\n// fixed lines:\n    archiveCreator = archiveCreatorManufactory.newDocumentBuilder().newDocument();\n<|endofmask|><|endofmask|>"
    ],
    "validation_result": [
        {
            "patch": "    archiveCreator = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n",
            "correctness": "compile_success",
            "translated": "    docBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n"
        },
        {
            "patch": "    DocumentBuilder archiveCreator = archiveCreatorManufactory.newDocumentBuilder();\n",
            "correctness": "compile_success",
            "translated": "    DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();\n"
        },
        {
            "patch": "    archiveCreator = archiveCreatorManufactory.newDocumentBuilderFactory();\n",
            "correctness": "uncompilable",
            "translated": "    docBuilder = docBuilderFactory.newDocumentBuilderFactory();\n"
        },
        {
            "patch": "    archiveCreator = archiveCreator;\n",
            "correctness": "compile_success",
            "translated": "    docBuilder = docBuilder;\n"
        },
        {
            "patch": "    archiveCreator = archiveCreatorManufactory.newDocumentBuilder(false);\n",
            "correctness": "uncompilable",
            "translated": "    docBuilder = docBuilderFactory.newDocumentBuilder(false);\n"
        },
        {
            "patch": "    archiveCreator = archiveCreatorManufactory.newDocumentBuilder(null);\n",
            "correctness": "uncompilable",
            "translated": "    docBuilder = docBuilderFactory.newDocumentBuilder(null);\n"
        },
        {
            "patch": "    archiveCreator = archiveCreator.newDocumentBuilder();\n",
            "correctness": "uncompilable",
            "translated": "    docBuilder = docBuilder.newDocumentBuilder();\n"
        },
        {
            "patch": "    archiveCreator = archiveCreatorManufactory.newDocumentBuilder(true);\n",
            "correctness": "uncompilable",
            "translated": "    docBuilder = docBuilderFactory.newDocumentBuilder(true);\n"
        },
        {
            "patch": "    archiveCreator = archiveCreatorManufactory.newSAXParser().getXMLReader();\n",
            "correctness": "uncompilable",
            "translated": "    docBuilder = docBuilderFactory.newSAXParser().getXMLReader();\n"
        },
        {
            "patch": "    archiveCreator = archiveCreatorManufactory.newDocumentBuilder().newDocument();\n",
            "correctness": "uncompilable",
            "translated": "    docBuilder = docBuilderFactory.newDocumentBuilder().newDocument();\n"
        }
    ]
}