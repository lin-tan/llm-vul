{
    "output": [
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        answer = body;\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        return answer;\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        if (answer!= null) {\n            return answer;\n        }\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        CamelContext context = exchange.getContext();\n        TypeConverter typeConverter = context.getTypeConverter();\n<|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        if (answer == null)\n            throw new NoTypeConversionAvailableException(body, type);\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        if (answer!= null)\n            return answer;\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        if (answer == null)\n            throw new IllegalArgumentException(\"String_Node_Str\");\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        if (answer == null)\n            throw new IllegalArgumentException(\"String_Node_Str\" + body);\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n        if (answer == null)\n            throw new IllegalStateException(\"String_Node_Str\" + body);\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "protected Object doGetDocument(Exchange exchange, Object body) throws Exception {\n    if (body!= null) {\n        Class<?> type = getDocumentType();\n        Exception cause = null;\n        Object answer = null;\n        if (type!= null) {\n            try {\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = typeConverter.convertTo(type, exchange, body);\n            } catch (Exception e) {\n                cause = e;\n            }\n        }\n// buggy lines start:\n        if (answer == null) {\n            if (!(body instanceof WrappedFile)) {\n                if (!(body instanceof BeanInvocation)) {\n                    if (body instanceof String) {\n                        StringReader stringReader = new StringReader((String) body);\n                        answer = new InputSource(stringReader);\n                    }\n                }else{\n                    CamelContext context = exchange.getContext();\n                    TypeConverter typeConverter = context.getTypeConverter();\n                    BeanInvocation bi = typeConverter.convertTo(BeanInvocation.class, exchange, body);\n                    if (bi.getArgs()!= null && bi.getArgs().length == 1 && bi.getArgs()[0] == null) {\n                        answer = null;\n                    }\n                }\n            }else{\n                CamelContext context = exchange.getContext();\n                TypeConverter typeConverter = context.getTypeConverter();\n                answer = new InputSource(typeConverter.convertTo(InputStream.class, exchange, body));\n            }\n        }\n// buggy lines end\n\n        if (type!= null || answer!= null) {\n            if (answer == null) {\n                if (cause == null) {\n                    throw new NoTypeConversionAvailableException(body, type);\n                } else {\n                    throw cause;\n                }\n            } \n        }else{\n            answer = body;\n        }   \n        return answer;\n    }\n    return null;\n}\n// fixed lines:\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>"
    ],
    "validation_result": [
        {
            "patch": "        answer = body;\n",
            "correctness": "compile_success"
        },
        {
            "patch": "        return answer;\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "        if (answer!= null) {\n            return answer;\n        }\n",
            "correctness": "test_success"
        },
        {
            "patch": "        CamelContext context = exchange.getContext();\n        TypeConverter typeConverter = context.getTypeConverter();\n",
            "correctness": "test_success"
        },
        {
            "patch": "        if (answer == null)\n            throw new NoTypeConversionAvailableException(body, type);\n",
            "correctness": "compile_success"
        },
        {
            "patch": "        if (answer!= null)\n            return answer;\n",
            "correctness": "test_success"
        },
        {
            "patch": "        if (answer == null)\n            throw new IllegalArgumentException(\"String_Node_Str\");\n",
            "correctness": "compile_success"
        },
        {
            "patch": "        if (answer == null)\n            throw new IllegalArgumentException(\"String_Node_Str\" + body);\n",
            "correctness": "compile_success"
        },
        {
            "patch": "        if (answer == null)\n            throw new IllegalStateException(\"String_Node_Str\" + body);\n",
            "correctness": "compile_success"
        },
        {
            "patch": "",
            "correctness": "test_success"
        }
    ]
}