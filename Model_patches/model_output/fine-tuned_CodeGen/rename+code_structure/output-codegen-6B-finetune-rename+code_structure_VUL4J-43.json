{
    "output": [
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (item.isDirectory()) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!item.isDirectory() && parentFile!= null) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!item.isDirectory())\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!isDirectory(item)) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!compressedFile.isDirectory()) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tboolean isDirectory = item.isDirectory();\n\tif (!isDirectory) {\n<|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!item.isDirectory() &&!outputFile.exists()) {\n<|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!item.isDirectory() &&!item.isLink()) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!item.isDirectory() && outputFile.exists()) {\n<|endoftext|><|endoftext|><|endoftext|><|endoftext|>",
        "public static void saveItem(ZipFile compressedFile, ZipEntry item, File targetFolder)\n\tthrows IOException\n{\n\tString entryName = item.getName();\n\tFile outputFile = new File(targetFolder,entryName);\n// buggy lines start:\n\tif (!item.isDirectory()) {\n// buggy lines end\n\n\t\tFile parentFile = outputFile.getParentFile();\n\t\tparentFile.mkdirs();\n\t\ttry (InputStream input = compressedFile.getInputStream(item)) {\n\t\t\tInputOutputUtility.saveDataSequence(input, outputFile);\n\t\t}\n\t}\n\telse {\n\t\toutputFile.mkdirs();\n\t}\n}\n// fixed lines:\n\tif (!item.isDirectory() &&!compressedFile.isDirectory()) {\n<|endoftext|><|endoftext|>"
    ],
    "validation_result": [
        {
            "patch": "\tif (item.isDirectory()) {\n",
            "correctness": "compile_success",
            "translated": "\tif (entry.isDirectory()) {\n"
        },
        {
            "patch": "\tif (!item.isDirectory() && parentFile!= null) {\n",
            "correctness": "uncompilable",
            "translated": "\tif (!entry.isDirectory() && parentFile!= null) {\n"
        },
        {
            "patch": "\tif (!item.isDirectory())\n",
            "correctness": "uncompilable",
            "translated": "\tif (!entry.isDirectory())\n"
        },
        {
            "patch": "\tif (!isDirectory(item)) {\n",
            "correctness": "uncompilable",
            "translated": "\tif (!isDirectory(entry)) {\n"
        },
        {
            "patch": "\tif (!compressedFile.isDirectory()) {\n",
            "correctness": "uncompilable",
            "translated": "\tif (!zipFile.isDirectory()) {\n"
        },
        {
            "patch": "\tboolean isDirectory = item.isDirectory();\n\tif (!isDirectory) {\n",
            "correctness": "compile_success",
            "translated": "\tboolean isDirectory = entry.isDirectory();\n\tif (!isDirectory) {\n"
        },
        {
            "patch": "\tif (!item.isDirectory() &&!outputFile.exists()) {\n",
            "correctness": "compile_success",
            "translated": "\tif (!entry.isDirectory() &&!outFile.exists()) {\n"
        },
        {
            "patch": "\tif (!item.isDirectory() &&!item.isLink()) {\n",
            "correctness": "uncompilable",
            "translated": "\tif (!entry.isDirectory() &&!entry.isLink()) {\n"
        },
        {
            "patch": "\tif (!item.isDirectory() && outputFile.exists()) {\n",
            "correctness": "compile_success",
            "translated": "\tif (!entry.isDirectory() && outFile.exists()) {\n"
        },
        {
            "patch": "\tif (!item.isDirectory() &&!compressedFile.isDirectory()) {\n",
            "correctness": "uncompilable",
            "translated": "\tif (!entry.isDirectory() &&!zipFile.isDirectory()) {\n"
        }
    ]
}