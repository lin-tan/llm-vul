{
    "id": "cmpl-6lpfugwXPnGpIJRMSPmapjWeD6xpS",
    "object": "text_completion",
    "created": 1676858074,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"toString\")\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -1.7507994,
                    -8.03023e-05,
                    -0.004266801,
                    -0.0086162295,
                    -0.23864853,
                    -0.053613365,
                    -0.000751311,
                    -0.0006852826,
                    -1.2998761,
                    -0.0016872365,
                    -0.00089579565,
                    -0.0033409582,
                    -0.14530887,
                    -0.03920069,
                    -0.00056749035,
                    -0.00036813872,
                    -0.87763613,
                    -0.00040164858,
                    -0.0008075043,
                    -0.0039525246,
                    -0.2171017,
                    -1.465112,
                    -0.70865947,
                    -0.0013936466
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "als": -8.03023e-05
                    },
                    {
                        "\")": -0.004266801
                    },
                    {
                        "\n": -0.0086162295
                    },
                    {
                        "   ": -0.23864853
                    },
                    {
                        " .": -0.053613365
                    },
                    {
                        "add": -0.000751311
                    },
                    {
                        "(\"": -0.0006852826
                    },
                    {
                        "to": -0.5858651
                    },
                    {
                        "ize": -0.0016872365
                    },
                    {
                        "\")": -0.00089579565
                    },
                    {
                        "\n": -0.0033409582
                    },
                    {
                        "   ": -0.14530887
                    },
                    {
                        " .": -0.03920069
                    },
                    {
                        "add": -0.00056749035
                    },
                    {
                        "(\"": -0.00036813872
                    },
                    {
                        "get": -0.6444933
                    },
                    {
                        "String": -0.00040164858
                    },
                    {
                        "\")": -0.0008075043
                    },
                    {
                        "\n": -0.0039525246
                    },
                    {
                        "<|endoftext|>": -0.2171017
                    },
                    {
                        "package": -1.465112
                    },
                    {
                        " com": -0.70865947
                    },
                    {
                        ".": -0.0013936466
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    332,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    350,
                    356,
                    358,
                    359,
                    359,
                    359,
                    359
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    "include",
                    " <"
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -0.690287,
                    -0.011831526,
                    -0.4255412,
                    -0.08374889,
                    -0.117279656,
                    -0.08070723,
                    -0.027700135,
                    -0.0011326642,
                    -1.5337404,
                    -0.0005291436,
                    -0.0012029015,
                    -0.004202455,
                    -0.14182657,
                    -0.0392072,
                    -0.00086829124,
                    -0.0006338098,
                    -0.25192988,
                    -5.8247755e-05,
                    -0.001473273,
                    -0.0043812026,
                    -0.6986944,
                    -2.2651334,
                    -1.1000258,
                    -0.7061013
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "ify": -0.011831526
                    },
                    {
                        "\")": -0.4255412
                    },
                    {
                        "\n": -0.08374889
                    },
                    {
                        "   ": -0.117279656
                    },
                    {
                        " .": -0.08070723
                    },
                    {
                        "add": -0.027700135
                    },
                    {
                        "(\"": -0.0011326642
                    },
                    {
                        "equ": -0.64592403
                    },
                    {
                        "String": -0.0005291436
                    },
                    {
                        "\")": -0.0012029015
                    },
                    {
                        "\n": -0.004202455
                    },
                    {
                        "   ": -0.14182657
                    },
                    {
                        " .": -0.0392072
                    },
                    {
                        "add": -0.00086829124
                    },
                    {
                        "(\"": -0.0006338098
                    },
                    {
                        "equ": -0.25192988
                    },
                    {
                        "als": -5.8247755e-05
                    },
                    {
                        "\")": -0.001473273
                    },
                    {
                        "\n": -0.0043812026
                    },
                    {
                        "   ": -0.68896896
                    },
                    {
                        "package": -1.4676983
                    },
                    {
                        "include": -1.1000258
                    },
                    {
                        " <": -0.7061013
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    329,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val CONFINED_ROUTINES = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Kot",
                    "lin",
                    "\n",
                    "private",
                    " val",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".",
                    "builder",
                    "<",
                    "String",
                    ">",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "@",
                    "ext",
                    "ends"
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -0.690287,
                    -0.011831526,
                    -0.4255412,
                    -0.08374889,
                    -0.117279656,
                    -0.08070723,
                    -0.027700135,
                    -0.0011326642,
                    -0.64592403,
                    -6.182308e-05,
                    -0.0020162635,
                    -0.0046763266,
                    -0.15179288,
                    -0.03247267,
                    -0.0008899478,
                    -0.0008104854,
                    -1.7088138,
                    -0.001310743,
                    -0.00067567825,
                    -0.002764786,
                    -0.087994374,
                    -0.023831224,
                    -0.00064740895,
                    -0.00048525323,
                    -0.8678603,
                    -0.0020758752,
                    -0.000556157,
                    -0.0027149399,
                    -0.45227328,
                    -0.02824345,
                    -0.00035168228,
                    -0.0005321858,
                    -0.20414001,
                    -0.010103569,
                    -0.0010263948,
                    -0.0020383657,
                    -0.007691001,
                    -0.011119651,
                    -0.0011145219,
                    -0.00020274745,
                    -0.4011446,
                    -0.00019189759,
                    -0.012956117,
                    -0.00094209076,
                    -0.0024870133,
                    -0.0029583992,
                    -0.015934,
                    -0.09005885,
                    -0.0050818264,
                    -0.19754721,
                    -0.20606549,
                    -0.10459846,
                    -1.7462968,
                    -0.0013711442,
                    -0.38077703,
                    -0.1390538,
                    -0.06314487,
                    -0.03051677,
                    -0.0011647678,
                    -8.578871e-05,
                    -0.0014457565,
                    -0.0069746296,
                    -0.00021431445,
                    -0.0013957351,
                    -8.268835e-05,
                    -0.23447153,
                    -0.1964357,
                    -0.00011249522,
                    -0.0011912049,
                    -0.046412796,
                    -0.022570353,
                    -0.015114861,
                    -0.0038438616,
                    -0.0030288862,
                    -0.015136583,
                    -0.005731568,
                    -0.0047985595,
                    -0.004342889,
                    -0.00053707336,
                    -0.0015609657,
                    -0.011724838,
                    -0.0013048351,
                    -0.00062730775,
                    -0.0004170931,
                    -0.0015080144,
                    -4.1918032e-05,
                    -0.00012131666,
                    -0.0022305225,
                    -0.001074188,
                    -0.0049196677,
                    -0.010377803,
                    -0.5326305,
                    -0.024626603,
                    -5.037998e-05,
                    -0.015587267,
                    -0.17773153,
                    -0.0010900006,
                    -0.009033129,
                    -0.0009467437,
                    -0.020782083,
                    -0.0011608283,
                    -0.0030704977,
                    -0.0016474725,
                    -0.00025062053,
                    -0.005486292,
                    -0.020080352,
                    -0.0012937337,
                    -0.009678518,
                    -0.0052597127,
                    -0.0008600593,
                    -0.003883772,
                    -0.043265596,
                    -0.00021121504,
                    -0.0024800212,
                    -0.0037833112,
                    -0.0052610305,
                    -0.0027019095,
                    -0.0044672317,
                    -0.00059343275,
                    -0.0006126357,
                    -0.0011977707,
                    -0.0002042981,
                    -0.0051307143,
                    -0.0038329726,
                    -0.00067842286,
                    -0.0014716014,
                    -8.51908e-05,
                    -0.000100094694,
                    -0.0024916737,
                    -1.1873685e-05,
                    -0.00027947655,
                    -0.00034929716,
                    -0.00044213727,
                    -0.0009891622,
                    -5.7652644e-05,
                    -7.302963e-05,
                    -0.0036450515,
                    -0.00020406157,
                    -0.00034762823,
                    -0.00036623323,
                    -0.00035645344,
                    -0.00079312886,
                    -0.0002457311,
                    -0.00013848272,
                    -0.029884702,
                    -0.00019940869,
                    -0.000311554,
                    -0.0005334971,
                    -0.07900803,
                    -5.184207,
                    -0.1262071,
                    -0.00016960275
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "ify": -0.011831526
                    },
                    {
                        "\")": -0.4255412
                    },
                    {
                        "\n": -0.08374889
                    },
                    {
                        "   ": -0.117279656
                    },
                    {
                        " .": -0.08070723
                    },
                    {
                        "add": -0.027700135
                    },
                    {
                        "(\"": -0.0011326642
                    },
                    {
                        "equ": -0.64592403
                    },
                    {
                        "als": -6.182308e-05
                    },
                    {
                        "\")": -0.0020162635
                    },
                    {
                        "\n": -0.0046763266
                    },
                    {
                        "   ": -0.15179288
                    },
                    {
                        " .": -0.03247267
                    },
                    {
                        "add": -0.0008899478
                    },
                    {
                        "(\"": -0.0008104854
                    },
                    {
                        "to": -0.38549057
                    },
                    {
                        "ize": -0.001310743
                    },
                    {
                        "\")": -0.00067567825
                    },
                    {
                        "\n": -0.002764786
                    },
                    {
                        "   ": -0.087994374
                    },
                    {
                        " .": -0.023831224
                    },
                    {
                        "add": -0.00064740895
                    },
                    {
                        "(\"": -0.00048525323
                    },
                    {
                        "to": -0.64132077
                    },
                    {
                        "Class": -0.0020758752
                    },
                    {
                        "\")": -0.000556157
                    },
                    {
                        "\n": -0.0027149399
                    },
                    {
                        "   ": -0.45227328
                    },
                    {
                        " .": -0.02824345
                    },
                    {
                        "add": -0.00035168228
                    },
                    {
                        "(\"": -0.0005321858
                    },
                    {
                        "hash": -0.20414001
                    },
                    {
                        "Code": -0.010103569
                    },
                    {
                        "\")": -0.0010263948
                    },
                    {
                        "\n": -0.0020383657
                    },
                    {
                        "   ": -0.007691001
                    },
                    {
                        " .": -0.011119651
                    },
                    {
                        "add": -0.0011145219
                    },
                    {
                        "(\"": -0.00020274745
                    },
                    {
                        "not": -0.4011446
                    },
                    {
                        "ify": -0.00019189759
                    },
                    {
                        "All": -0.012956117
                    },
                    {
                        "\")": -0.00094209076
                    },
                    {
                        "\n": -0.0024870133
                    },
                    {
                        "   ": -0.0029583992
                    },
                    {
                        " .": -0.015934
                    },
                    {
                        "build": -0.09005885
                    },
                    {
                        "();": -0.0050818264
                    },
                    {
                        "\n": -0.19754721
                    },
                    {
                        "\n": -0.20606549
                    },
                    {
                        "//": -0.10459846
                    },
                    {
                        " Scala": -1.5475404
                    },
                    {
                        "lin": -0.0013711442
                    },
                    {
                        "\n": -0.38077703
                    },
                    {
                        "private": -0.1390538
                    },
                    {
                        " val": -0.06314487
                    },
                    {
                        " CON": -0.03051677
                    },
                    {
                        "FIN": -0.0011647678
                    },
                    {
                        "ED": -8.578871e-05
                    },
                    {
                        "_": -0.0014457565
                    },
                    {
                        "R": -0.0069746296
                    },
                    {
                        "OUT": -0.00021431445
                    },
                    {
                        "IN": -0.0013957351
                    },
                    {
                        "ES": -8.268835e-05
                    },
                    {
                        " =": -0.23447153
                    },
                    {
                        " Imm": -0.1964357
                    },
                    {
                        "utable": -0.00011249522
                    },
                    {
                        "Set": -0.0011912049
                    },
                    {
                        ".": -0.046412796
                    },
                    {
                        "builder": -0.022570353
                    },
                    {
                        "<": -0.015114861
                    },
                    {
                        "String": -0.0038438616
                    },
                    {
                        ">": -0.0030288862
                    },
                    {
                        "()": -0.015136583
                    },
                    {
                        "\n": -0.005731568
                    },
                    {
                        "   ": -0.0047985595
                    },
                    {
                        " .": -0.004342889
                    },
                    {
                        "add": -0.00053707336
                    },
                    {
                        "(\"": -0.0015609657
                    },
                    {
                        "clone": -0.011724838
                    },
                    {
                        "\")": -0.0013048351
                    },
                    {
                        "\n": -0.00062730775
                    },
                    {
                        "   ": -0.0004170931
                    },
                    {
                        " .": -0.0015080144
                    },
                    {
                        "add": -4.1918032e-05
                    },
                    {
                        "(\"": -0.00012131666
                    },
                    {
                        "wait": -0.0022305225
                    },
                    {
                        "\")": -0.001074188
                    },
                    {
                        "\n": -0.0049196677
                    },
                    {
                        "   ": -0.010377803
                    },
                    {
                        " /*": -0.5326305
                    },
                    {
                        " B": -0.024626603
                    },
                    {
                        "UG": -5.037998e-05
                    },
                    {
                        ":": -0.015587267
                    },
                    {
                        " ": -0.17773153
                    },
                    {
                        "\n": -0.0010900006
                    },
                    {
                        "    ": -0.009033129
                    },
                    {
                        " *": -0.0009467437
                    },
                    {
                        " .": -0.020782083
                    },
                    {
                        "add": -0.0011608283
                    },
                    {
                        "(\"": -0.0030704977
                    },
                    {
                        "not": -0.0016474725
                    },
                    {
                        "ify": -0.00025062053
                    },
                    {
                        "\")": -0.005486292
                    },
                    {
                        "\n": -0.020080352
                    },
                    {
                        "    ": -0.0012937337
                    },
                    {
                        " *": -0.009678518
                    },
                    {
                        " FIX": -0.0052597127
                    },
                    {
                        "ED": -0.0008600593
                    },
                    {
                        ":": -0.003883772
                    },
                    {
                        " ": -0.043265596
                    },
                    {
                        "\n": -0.00021121504
                    },
                    {
                        "    ": -0.0024800212
                    },
                    {
                        " */": -0.0037833112
                    },
                    {
                        "\n": -0.0052610305
                    },
                    {
                        "   ": -0.0027019095
                    },
                    {
                        " .": -0.0044672317
                    },
                    {
                        "add": -0.00059343275
                    },
                    {
                        "(\"": -0.0006126357
                    },
                    {
                        "not": -0.0011977707
                    },
                    {
                        "ify": -0.0002042981
                    },
                    {
                        "\")": -0.0051307143
                    },
                    {
                        "\n": -0.0038329726
                    },
                    {
                        "   ": -0.00067842286
                    },
                    {
                        " .": -0.0014716014
                    },
                    {
                        "add": -8.51908e-05
                    },
                    {
                        "(\"": -0.000100094694
                    },
                    {
                        "equ": -0.0024916737
                    },
                    {
                        "als": -1.1873685e-05
                    },
                    {
                        "\")": -0.00027947655
                    },
                    {
                        "\n": -0.00034929716
                    },
                    {
                        "   ": -0.00044213727
                    },
                    {
                        " .": -0.0009891622
                    },
                    {
                        "add": -5.7652644e-05
                    },
                    {
                        "(\"": -7.302963e-05
                    },
                    {
                        "final": -0.0036450515
                    },
                    {
                        "ize": -0.00020406157
                    },
                    {
                        "\")": -0.00034762823
                    },
                    {
                        "\n": -0.00036623323
                    },
                    {
                        "   ": -0.00035645344
                    },
                    {
                        " .": -0.00079312886
                    },
                    {
                        "add": -0.0002457311
                    },
                    {
                        "(\"": -0.00013848272
                    },
                    {
                        "get": -0.029884702
                    },
                    {
                        "Class": -0.00019940869
                    },
                    {
                        "\")": -0.000311554
                    },
                    {
                        "\n": -0.0005334971
                    },
                    {
                        "<|endoftext|>": -0.07900803
                    },
                    {
                        "package": -1.4680597
                    },
                    {
                        "ext": -0.1262071
                    },
                    {
                        "ends": -0.00016960275
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    351,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    370,
                    375,
                    377,
                    378,
                    381,
                    383,
                    386,
                    388,
                    392,
                    396,
                    398,
                    399,
                    402,
                    404,
                    407,
                    409,
                    412,
                    415,
                    418,
                    420,
                    421,
                    424,
                    426,
                    431,
                    434,
                    435,
                    436,
                    438,
                    442,
                    445,
                    446,
                    453,
                    457,
                    461,
                    464,
                    466,
                    467,
                    468,
                    471,
                    473,
                    475,
                    477,
                    481,
                    487,
                    490,
                    491,
                    498,
                    499,
                    505,
                    506,
                    508,
                    509,
                    512,
                    514,
                    517,
                    519,
                    524,
                    526,
                    527,
                    530,
                    532,
                    535,
                    537,
                    541,
                    543,
                    544,
                    547,
                    550,
                    552,
                    554,
                    555,
                    556,
                    557,
                    561,
                    563,
                    565,
                    568,
                    570,
                    573,
                    576,
                    578,
                    579,
                    583,
                    585,
                    589,
                    591,
                    592,
                    593,
                    594,
                    598,
                    601,
                    602,
                    605,
                    607,
                    610,
                    612,
                    615,
                    618,
                    620,
                    621,
                    624,
                    626,
                    629,
                    631,
                    634,
                    637,
                    639,
                    640,
                    643,
                    645,
                    648,
                    650,
                    655,
                    658,
                    660,
                    661,
                    664,
                    666,
                    669,
                    671,
                    674,
                    679,
                    681,
                    682,
                    682,
                    682,
                    682
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -0.690287,
                    -0.011831526,
                    -0.4255412,
                    -0.08374889,
                    -0.117279656,
                    -0.08070723,
                    -0.027700135,
                    -0.0011326642,
                    -0.64592403,
                    -6.182308e-05,
                    -0.0020162635,
                    -0.0046763266,
                    -0.15179288,
                    -0.03247267,
                    -0.0008899478,
                    -0.0008104854,
                    -0.38549057,
                    -0.0003342722,
                    -0.00087944814,
                    -0.0032233293,
                    -0.6040736,
                    -0.046742696,
                    -0.0012455116,
                    -0.0005383865,
                    -0.45555842,
                    -0.0012969561,
                    -0.0012312467,
                    -0.0051434143,
                    -0.15302363,
                    -1.4689941,
                    -0.7076393,
                    -0.0013848128
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "ify": -0.011831526
                    },
                    {
                        "\")": -0.4255412
                    },
                    {
                        "\n": -0.08374889
                    },
                    {
                        "   ": -0.117279656
                    },
                    {
                        " .": -0.08070723
                    },
                    {
                        "add": -0.027700135
                    },
                    {
                        "(\"": -0.0011326642
                    },
                    {
                        "equ": -0.64592403
                    },
                    {
                        "als": -6.182308e-05
                    },
                    {
                        "\")": -0.0020162635
                    },
                    {
                        "\n": -0.0046763266
                    },
                    {
                        "   ": -0.15179288
                    },
                    {
                        " .": -0.03247267
                    },
                    {
                        "add": -0.0008899478
                    },
                    {
                        "(\"": -0.0008104854
                    },
                    {
                        "to": -0.38549057
                    },
                    {
                        "String": -0.0003342722
                    },
                    {
                        "\")": -0.00087944814
                    },
                    {
                        "\n": -0.0032233293
                    },
                    {
                        "   ": -0.6040736
                    },
                    {
                        " .": -0.046742696
                    },
                    {
                        "add": -0.0012455116
                    },
                    {
                        "(\"": -0.0005383865
                    },
                    {
                        "final": -0.45555842
                    },
                    {
                        "ize": -0.0012969561
                    },
                    {
                        "\")": -0.0012312467
                    },
                    {
                        "\n": -0.0051434143
                    },
                    {
                        "<|endoftext|>": -0.15302363
                    },
                    {
                        "package": -1.4689941
                    },
                    {
                        " com": -0.7076393
                    },
                    {
                        ".": -0.0013848128
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    372,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"toString\")\n    .add(\"equals\")\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " React",
                    ","
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -2.4865136,
                    -0.0017807974,
                    -0.0028993385,
                    -0.0078084935,
                    -0.19390348,
                    -0.06167387,
                    -0.0005285457,
                    -0.0010025869,
                    -0.3675025,
                    -6.838237e-05,
                    -0.0018904957,
                    -0.0043158284,
                    -0.57181364,
                    -2.1444411,
                    -1.2266864,
                    -0.8368588
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "String": -0.0017807974
                    },
                    {
                        "\")": -0.0028993385
                    },
                    {
                        "\n": -0.0078084935
                    },
                    {
                        "   ": -0.19390348
                    },
                    {
                        " .": -0.06167387
                    },
                    {
                        "add": -0.0005285457
                    },
                    {
                        "(\"": -0.0010025869
                    },
                    {
                        "equ": -0.3675025
                    },
                    {
                        "als": -6.838237e-05
                    },
                    {
                        "\")": -0.0018904957
                    },
                    {
                        "\n": -0.0043158284
                    },
                    {
                        "<|endoftext|>": -0.57181364
                    },
                    {
                        "package": -1.4649928
                    },
                    {
                        " React": -1.2266864
                    },
                    {
                        " from": -0.57690233
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    310,
                    316,
                    318,
                    319,
                    322,
                    324,
                    327,
                    329,
                    332,
                    335,
                    337,
                    338,
                    338,
                    338,
                    338
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -0.690287,
                    -0.011831526,
                    -0.4255412,
                    -0.08374889,
                    -0.117279656,
                    -0.08070723,
                    -0.027700135,
                    -0.0011326642,
                    -0.64592403,
                    -6.182308e-05,
                    -0.0020162635,
                    -0.0046763266,
                    -0.15179288,
                    -0.03247267,
                    -0.0008899478,
                    -0.0008072649,
                    -0.38469467,
                    -0.00033439047,
                    -0.0008786136,
                    -0.0032314016,
                    -0.60623527,
                    -0.046791352,
                    -0.0012300529,
                    -0.0005375511,
                    -0.45756483,
                    -0.0012967177,
                    -0.0012328003,
                    -0.0051238257,
                    -0.15289028,
                    -1.4691942,
                    -0.7078673,
                    -0.0013829027
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "ify": -0.011831526
                    },
                    {
                        "\")": -0.4255412
                    },
                    {
                        "\n": -0.08374889
                    },
                    {
                        "   ": -0.117279656
                    },
                    {
                        " .": -0.08070723
                    },
                    {
                        "add": -0.027700135
                    },
                    {
                        "(\"": -0.0011326642
                    },
                    {
                        "equ": -0.64592403
                    },
                    {
                        "als": -6.182308e-05
                    },
                    {
                        "\")": -0.0020162635
                    },
                    {
                        "\n": -0.0046763266
                    },
                    {
                        "   ": -0.15179288
                    },
                    {
                        " .": -0.03247267
                    },
                    {
                        "add": -0.0008899478
                    },
                    {
                        "(\"": -0.0008072649
                    },
                    {
                        "to": -0.38469467
                    },
                    {
                        "String": -0.00033439047
                    },
                    {
                        "\")": -0.0008786136
                    },
                    {
                        "\n": -0.0032314016
                    },
                    {
                        "   ": -0.60623527
                    },
                    {
                        " .": -0.046791352
                    },
                    {
                        "add": -0.0012300529
                    },
                    {
                        "(\"": -0.0005375511
                    },
                    {
                        "final": -0.45756483
                    },
                    {
                        "ize": -0.0012967177
                    },
                    {
                        "\")": -0.0012328003
                    },
                    {
                        "\n": -0.0051238257
                    },
                    {
                        "<|endoftext|>": -0.15289028
                    },
                    {
                        "package": -1.4691942
                    },
                    {
                        " com": -0.7078673
                    },
                    {
                        ".": -0.0013829027
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    372,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"getClass\")\n    .add(\"toString\")\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -0.690287,
                    -0.011831526,
                    -0.4255412,
                    -0.08374889,
                    -0.117279656,
                    -0.08070723,
                    -0.027700135,
                    -0.0011326642,
                    -0.64592403,
                    -6.182308e-05,
                    -0.0020162635,
                    -0.0046763266,
                    -0.15179288,
                    -0.03247267,
                    -0.0008899478,
                    -0.0008072649,
                    -2.483092,
                    -0.007048155,
                    -0.00070639845,
                    -0.0034961018,
                    -0.15256509,
                    -0.029325148,
                    -0.0005535326,
                    -0.0005119672,
                    -0.38202396,
                    -0.00023392851,
                    -0.0006583827,
                    -0.0046440517,
                    -0.37669376,
                    -1.4690623,
                    -0.70821667,
                    -0.0013864846
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "ify": -0.011831526
                    },
                    {
                        "\")": -0.4255412
                    },
                    {
                        "\n": -0.08374889
                    },
                    {
                        "   ": -0.117279656
                    },
                    {
                        " .": -0.08070723
                    },
                    {
                        "add": -0.027700135
                    },
                    {
                        "(\"": -0.0011326642
                    },
                    {
                        "equ": -0.64592403
                    },
                    {
                        "als": -6.182308e-05
                    },
                    {
                        "\")": -0.0020162635
                    },
                    {
                        "\n": -0.0046763266
                    },
                    {
                        "   ": -0.15179288
                    },
                    {
                        " .": -0.03247267
                    },
                    {
                        "add": -0.0008899478
                    },
                    {
                        "(\"": -0.0008072649
                    },
                    {
                        "to": -0.38469467
                    },
                    {
                        "Class": -0.007048155
                    },
                    {
                        "\")": -0.00070639845
                    },
                    {
                        "\n": -0.0034961018
                    },
                    {
                        "   ": -0.15256509
                    },
                    {
                        " .": -0.029325148
                    },
                    {
                        "add": -0.0005535326
                    },
                    {
                        "(\"": -0.0005119672
                    },
                    {
                        "to": -0.38202396
                    },
                    {
                        "String": -0.00023392851
                    },
                    {
                        "\")": -0.0006583827
                    },
                    {
                        "\n": -0.0046440517
                    },
                    {
                        "<|endoftext|>": -0.37669376
                    },
                    {
                        "package": -1.4690623
                    },
                    {
                        " com": -0.70821667
                    },
                    {
                        ".": -0.0013864846
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    349,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    369,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val CONFINED_ROUTINES = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Kot",
                    "lin",
                    "\n",
                    "private",
                    " val",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".",
                    "builder",
                    "<",
                    "String",
                    ">",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -1.7507994,
                    -8.03023e-05,
                    -0.004266801,
                    -0.0086162295,
                    -0.23864853,
                    -0.053613365,
                    -0.000751311,
                    -0.0006852826,
                    -1.2998761,
                    -0.0016872365,
                    -0.00089579565,
                    -0.0033409582,
                    -0.14530887,
                    -0.03920069,
                    -0.00056749035,
                    -0.0003668246,
                    -0.64493775,
                    -0.0019942268,
                    -0.00056069077,
                    -0.0027299414,
                    -0.542955,
                    -0.056828063,
                    -0.00041804678,
                    -0.0004821529,
                    -0.15440446,
                    -0.010835328,
                    -0.001035344,
                    -0.0019357019,
                    -0.003438384,
                    -0.010570184,
                    -0.00024883242,
                    -0.00015672446,
                    -0.12821753,
                    -0.00028639348,
                    -0.33642694,
                    -0.0017464053,
                    -0.0025696538,
                    -0.00344885,
                    -0.022236992,
                    -0.08318915,
                    -0.004804968,
                    -0.22170377,
                    -0.18389916,
                    -0.0938145,
                    -1.6987598,
                    -0.0014738683,
                    -0.37596786,
                    -0.1324809,
                    -0.060600433,
                    -0.033689257,
                    -0.0011946685,
                    -8.8171946e-05,
                    -0.0014382342,
                    -0.0072743017,
                    -0.00019547573,
                    -0.000826832,
                    -3.130471e-05,
                    -0.23933949,
                    -0.13461259,
                    -0.00011618975,
                    -0.0012239657,
                    -0.043600563,
                    -0.018652553,
                    -0.016373165,
                    -0.0035881617,
                    -0.0024125644,
                    -0.010990616,
                    -0.006184031,
                    -0.0047480133,
                    -0.004549141,
                    -0.0006102534,
                    -0.0013619519,
                    -0.0114778485,
                    -0.0012424093,
                    -0.00070019584,
                    -0.00041256036,
                    -0.0013918565,
                    -4.3586017e-05,
                    -0.0001226242,
                    -0.0020380074,
                    -0.001228383,
                    -0.006285096,
                    -0.013995589,
                    -0.37883714,
                    -0.022547737,
                    -4.6921985e-05,
                    -0.013465387,
                    -0.17291649,
                    -0.0010015131,
                    -0.008586708,
                    -0.0012945682,
                    -0.016146595,
                    -0.0008030889,
                    -0.0037013448,
                    -0.000787282,
                    -0.00013097163,
                    -0.004668901,
                    -0.022818085,
                    -0.0013091924,
                    -0.008125649,
                    -0.0047607087,
                    -0.0014766747,
                    -0.0040810136,
                    -0.03921544,
                    -0.0002409637,
                    -0.0021853049,
                    -0.0027695075,
                    -0.004597223,
                    -0.00080642954,
                    -0.00063428754,
                    -0.00020250905,
                    -0.00014873935,
                    -0.0050304863,
                    -1.2112103e-05,
                    -0.00030106178,
                    -0.0004290187,
                    -0.00021228698,
                    -0.0006650631,
                    -5.3837026e-05,
                    -5.7413286e-05,
                    -0.0027043615,
                    -0.000159348,
                    -0.00027911988,
                    -0.00039437588,
                    -0.0009962613,
                    -0.0009987685,
                    -6.13453e-05,
                    -0.000120839824,
                    -0.022050884,
                    -0.0002035838,
                    -0.00035454513,
                    -0.0005443507,
                    -0.06740081,
                    -1.4668795,
                    -0.7121628,
                    -0.0014446818
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "als": -8.03023e-05
                    },
                    {
                        "\")": -0.004266801
                    },
                    {
                        "\n": -0.0086162295
                    },
                    {
                        "   ": -0.23864853
                    },
                    {
                        " .": -0.053613365
                    },
                    {
                        "add": -0.000751311
                    },
                    {
                        "(\"": -0.0006852826
                    },
                    {
                        "to": -0.5858651
                    },
                    {
                        "ize": -0.0016872365
                    },
                    {
                        "\")": -0.00089579565
                    },
                    {
                        "\n": -0.0033409582
                    },
                    {
                        "   ": -0.14530887
                    },
                    {
                        " .": -0.03920069
                    },
                    {
                        "add": -0.00056749035
                    },
                    {
                        "(\"": -0.0003668246
                    },
                    {
                        "get": -0.64493775
                    },
                    {
                        "Class": -0.0019942268
                    },
                    {
                        "\")": -0.00056069077
                    },
                    {
                        "\n": -0.0027299414
                    },
                    {
                        "   ": -0.542955
                    },
                    {
                        " .": -0.056828063
                    },
                    {
                        "add": -0.00041804678
                    },
                    {
                        "(\"": -0.0004821529
                    },
                    {
                        "hash": -0.15440446
                    },
                    {
                        "Code": -0.010835328
                    },
                    {
                        "\")": -0.001035344
                    },
                    {
                        "\n": -0.0019357019
                    },
                    {
                        "   ": -0.003438384
                    },
                    {
                        " .": -0.010570184
                    },
                    {
                        "add": -0.00024883242
                    },
                    {
                        "(\"": -0.00015672446
                    },
                    {
                        "not": -0.12821753
                    },
                    {
                        "ify": -0.00028639348
                    },
                    {
                        "All": -0.33642694
                    },
                    {
                        "\")": -0.0017464053
                    },
                    {
                        "\n": -0.0025696538
                    },
                    {
                        "   ": -0.00344885
                    },
                    {
                        " .": -0.022236992
                    },
                    {
                        "build": -0.08318915
                    },
                    {
                        "();": -0.004804968
                    },
                    {
                        "\n": -0.22170377
                    },
                    {
                        "\n": -0.18389916
                    },
                    {
                        "//": -0.0938145
                    },
                    {
                        " Scala": -1.6736487
                    },
                    {
                        "lin": -0.0014738683
                    },
                    {
                        "\n": -0.37596786
                    },
                    {
                        "private": -0.1324809
                    },
                    {
                        " val": -0.060600433
                    },
                    {
                        " CON": -0.033689257
                    },
                    {
                        "FIN": -0.0011946685
                    },
                    {
                        "ED": -8.8171946e-05
                    },
                    {
                        "_": -0.0014382342
                    },
                    {
                        "R": -0.0072743017
                    },
                    {
                        "OUT": -0.00019547573
                    },
                    {
                        "IN": -0.000826832
                    },
                    {
                        "ES": -3.130471e-05
                    },
                    {
                        " =": -0.23933949
                    },
                    {
                        " Imm": -0.13461259
                    },
                    {
                        "utable": -0.00011618975
                    },
                    {
                        "Set": -0.0012239657
                    },
                    {
                        ".": -0.043600563
                    },
                    {
                        "builder": -0.018652553
                    },
                    {
                        "<": -0.016373165
                    },
                    {
                        "String": -0.0035881617
                    },
                    {
                        ">": -0.0024125644
                    },
                    {
                        "()": -0.010990616
                    },
                    {
                        "\n": -0.006184031
                    },
                    {
                        "   ": -0.0047480133
                    },
                    {
                        " .": -0.004549141
                    },
                    {
                        "add": -0.0006102534
                    },
                    {
                        "(\"": -0.0013619519
                    },
                    {
                        "clone": -0.0114778485
                    },
                    {
                        "\")": -0.0012424093
                    },
                    {
                        "\n": -0.00070019584
                    },
                    {
                        "   ": -0.00041256036
                    },
                    {
                        " .": -0.0013918565
                    },
                    {
                        "add": -4.3586017e-05
                    },
                    {
                        "(\"": -0.0001226242
                    },
                    {
                        "wait": -0.0020380074
                    },
                    {
                        "\")": -0.001228383
                    },
                    {
                        "\n": -0.006285096
                    },
                    {
                        "   ": -0.013995589
                    },
                    {
                        " /*": -0.37883714
                    },
                    {
                        " B": -0.022547737
                    },
                    {
                        "UG": -4.6921985e-05
                    },
                    {
                        ":": -0.013465387
                    },
                    {
                        " ": -0.17291649
                    },
                    {
                        "\n": -0.0010015131
                    },
                    {
                        "    ": -0.008586708
                    },
                    {
                        " *": -0.0012945682
                    },
                    {
                        " .": -0.016146595
                    },
                    {
                        "add": -0.0008030889
                    },
                    {
                        "(\"": -0.0037013448
                    },
                    {
                        "not": -0.000787282
                    },
                    {
                        "ify": -0.00013097163
                    },
                    {
                        "\")": -0.004668901
                    },
                    {
                        "\n": -0.022818085
                    },
                    {
                        "    ": -0.0013091924
                    },
                    {
                        " *": -0.008125649
                    },
                    {
                        " FIX": -0.0047607087
                    },
                    {
                        "ED": -0.0014766747
                    },
                    {
                        ":": -0.0040810136
                    },
                    {
                        " ": -0.03921544
                    },
                    {
                        "\n": -0.0002409637
                    },
                    {
                        "    ": -0.0021853049
                    },
                    {
                        " */": -0.0027695075
                    },
                    {
                        "\n": -0.004597223
                    },
                    {
                        "   ": -0.00080642954
                    },
                    {
                        " .": -0.00063428754
                    },
                    {
                        "add": -0.00020250905
                    },
                    {
                        "(\"": -0.00014873935
                    },
                    {
                        "equ": -0.0050304863
                    },
                    {
                        "als": -1.2112103e-05
                    },
                    {
                        "\")": -0.00030106178
                    },
                    {
                        "\n": -0.0004290187
                    },
                    {
                        "   ": -0.00021228698
                    },
                    {
                        " .": -0.0006650631
                    },
                    {
                        "add": -5.3837026e-05
                    },
                    {
                        "(\"": -5.7413286e-05
                    },
                    {
                        "final": -0.0027043615
                    },
                    {
                        "ize": -0.000159348
                    },
                    {
                        "\")": -0.00027911988
                    },
                    {
                        "\n": -0.00039437588
                    },
                    {
                        "   ": -0.0009962613
                    },
                    {
                        " .": -0.0009987685
                    },
                    {
                        "add": -6.13453e-05
                    },
                    {
                        "(\"": -0.000120839824
                    },
                    {
                        "get": -0.022050884
                    },
                    {
                        "Class": -0.0002035838
                    },
                    {
                        "\")": -0.00035454513
                    },
                    {
                        "\n": -0.0005443507
                    },
                    {
                        "<|endoftext|>": -0.06740081
                    },
                    {
                        "package": -1.4668795
                    },
                    {
                        " com": -0.7121628
                    },
                    {
                        ".": -0.0014446818
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    332,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    356,
                    358,
                    359,
                    362,
                    364,
                    367,
                    369,
                    373,
                    377,
                    379,
                    380,
                    383,
                    385,
                    388,
                    390,
                    393,
                    396,
                    399,
                    401,
                    402,
                    405,
                    407,
                    412,
                    415,
                    416,
                    417,
                    419,
                    423,
                    426,
                    427,
                    434,
                    438,
                    442,
                    445,
                    447,
                    448,
                    449,
                    452,
                    454,
                    456,
                    458,
                    462,
                    468,
                    471,
                    472,
                    479,
                    480,
                    486,
                    487,
                    489,
                    490,
                    493,
                    495,
                    498,
                    500,
                    505,
                    507,
                    508,
                    511,
                    513,
                    516,
                    518,
                    522,
                    524,
                    525,
                    528,
                    531,
                    533,
                    535,
                    536,
                    537,
                    538,
                    542,
                    544,
                    546,
                    549,
                    551,
                    554,
                    557,
                    559,
                    560,
                    564,
                    566,
                    570,
                    572,
                    573,
                    574,
                    575,
                    579,
                    582,
                    583,
                    586,
                    588,
                    591,
                    593,
                    596,
                    599,
                    601,
                    602,
                    605,
                    607,
                    610,
                    612,
                    617,
                    620,
                    622,
                    623,
                    626,
                    628,
                    631,
                    633,
                    636,
                    641,
                    643,
                    644,
                    644,
                    644,
                    644
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Java \nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n\n",
                    "\n",
                    "//",
                    " Java",
                    " ",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "/**"
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -0.690287,
                    -0.01183629,
                    -0.42546222,
                    -0.08369348,
                    -0.11706273,
                    -0.08060883,
                    -0.027718458,
                    -0.0011353506,
                    -0.6465008,
                    -6.158372e-05,
                    -0.0019558237,
                    -0.0046198578,
                    -0.14856882,
                    -0.029708527,
                    -0.0007112888,
                    -0.0007630648,
                    -0.37127906,
                    -0.0003278922,
                    -0.0008715718,
                    -0.0032996929,
                    -0.7378921,
                    -0.05067502,
                    -0.001330022,
                    -0.00057536183,
                    -1.5611024,
                    -0.0076998905,
                    -0.00084049406,
                    -0.005436609,
                    -1.0053461,
                    -0.07457113,
                    -0.0010213233,
                    -0.00087276584,
                    -0.35205686,
                    -0.012565339,
                    -0.0015468172,
                    -0.0025106748,
                    -0.011366432,
                    -0.015868898,
                    -0.044595804,
                    -0.00032264323,
                    -0.10851531,
                    -0.00020107947,
                    -0.00820485,
                    -0.004117701,
                    -0.0036382903,
                    -0.0037392746,
                    -0.012622439,
                    -0.028666286,
                    -0.004790473,
                    -1.8080629,
                    -0.15142277,
                    -0.27732107,
                    -2.0013316,
                    -1.2227517,
                    -0.013312372,
                    -0.115640834,
                    -0.029013518,
                    -0.009532581,
                    -0.03901636,
                    -0.0029095614,
                    -0.012293278,
                    -0.00092329714,
                    -0.02341867,
                    -0.0012097067,
                    -0.00013526501,
                    -0.00051888794,
                    -0.010445981,
                    -0.0001427761,
                    -0.0009542614,
                    -8.972073e-05,
                    -0.013858267,
                    -0.042038966,
                    -0.00037326562,
                    -0.0024573153,
                    -0.024083903,
                    -0.003588401,
                    -0.0005240139,
                    -0.0324832,
                    -0.008697695,
                    -0.005319754,
                    -0.012516873,
                    -0.06703878,
                    -0.0009978138,
                    -0.007757014,
                    -0.08012833,
                    -0.005552101,
                    -0.0032876136,
                    -0.001942511,
                    -0.018772982,
                    -0.00062325277,
                    -0.0008917378,
                    -0.008451212,
                    -0.003381804,
                    -0.009057428,
                    -0.014749495,
                    -0.6697284,
                    -0.005689606,
                    -0.0060005854,
                    -0.12149839,
                    -0.00086817396,
                    -0.029038738,
                    -0.02610253,
                    -0.008064659,
                    -0.09221883,
                    -0.004521479,
                    -0.0021644565,
                    -0.20315015,
                    -6.396884e-05,
                    -0.0045515364,
                    -0.001721148,
                    -0.0022834549,
                    -0.033468522,
                    -0.00072697556,
                    -0.000648005,
                    -0.012347888,
                    -0.00014408647,
                    -0.0012803064,
                    -0.0013466117,
                    -0.003492811,
                    -0.029577259,
                    -0.00047088155,
                    -0.00046312832,
                    -0.0056599933,
                    -0.0003659939,
                    -0.0005893778,
                    -0.0023460046,
                    -0.12078522,
                    -3.6868794
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "ify": -0.01183629
                    },
                    {
                        "\")": -0.42546222
                    },
                    {
                        "\n": -0.08369348
                    },
                    {
                        "   ": -0.11706273
                    },
                    {
                        " .": -0.08060883
                    },
                    {
                        "add": -0.027718458
                    },
                    {
                        "(\"": -0.0011353506
                    },
                    {
                        "equ": -0.6465008
                    },
                    {
                        "als": -6.158372e-05
                    },
                    {
                        "\")": -0.0019558237
                    },
                    {
                        "\n": -0.0046198578
                    },
                    {
                        "   ": -0.14856882
                    },
                    {
                        " .": -0.029708527
                    },
                    {
                        "add": -0.0007112888
                    },
                    {
                        "(\"": -0.0007630648
                    },
                    {
                        "to": -0.37127906
                    },
                    {
                        "String": -0.0003278922
                    },
                    {
                        "\")": -0.0008715718
                    },
                    {
                        "\n": -0.0032996929
                    },
                    {
                        "<|endoftext|>": -0.6515311
                    },
                    {
                        " .": -0.05067502
                    },
                    {
                        "add": -0.001330022
                    },
                    {
                        "(\"": -0.00057536183
                    },
                    {
                        "final": -0.50693095
                    },
                    {
                        "Class": -0.0076998905
                    },
                    {
                        "\")": -0.00084049406
                    },
                    {
                        "\n": -0.005436609
                    },
                    {
                        "<|endoftext|>": -0.45677736
                    },
                    {
                        " .": -0.07457113
                    },
                    {
                        "add": -0.0010213233
                    },
                    {
                        "(\"": -0.00087276584
                    },
                    {
                        "hash": -0.35205686
                    },
                    {
                        "Code": -0.012565339
                    },
                    {
                        "\")": -0.0015468172
                    },
                    {
                        "\n": -0.0025106748
                    },
                    {
                        "   ": -0.011366432
                    },
                    {
                        " .": -0.015868898
                    },
                    {
                        "add": -0.044595804
                    },
                    {
                        "(\"": -0.00032264323
                    },
                    {
                        "not": -0.10851531
                    },
                    {
                        "ify": -0.00020107947
                    },
                    {
                        "All": -0.00820485
                    },
                    {
                        "\")": -0.004117701
                    },
                    {
                        "\n": -0.0036382903
                    },
                    {
                        "   ": -0.0037392746
                    },
                    {
                        " .": -0.012622439
                    },
                    {
                        "build": -0.028666286
                    },
                    {
                        "();": -0.004790473
                    },
                    {
                        "\n": -0.20353365
                    },
                    {
                        "\n": -0.15142277
                    },
                    {
                        "//": -0.27732107
                    },
                    {
                        " Java": -2.0013316
                    },
                    {
                        " ": -1.2227517
                    },
                    {
                        "\n": -0.013312372
                    },
                    {
                        "private": -0.115640834
                    },
                    {
                        " static": -0.029013518
                    },
                    {
                        " final": -0.009532581
                    },
                    {
                        " Set": -0.03901636
                    },
                    {
                        "<": -0.0029095614
                    },
                    {
                        "String": -0.012293278
                    },
                    {
                        ">": -0.00092329714
                    },
                    {
                        " CON": -0.02341867
                    },
                    {
                        "FIN": -0.0012097067
                    },
                    {
                        "ED": -0.00013526501
                    },
                    {
                        "_": -0.00051888794
                    },
                    {
                        "R": -0.010445981
                    },
                    {
                        "OUT": -0.0001427761
                    },
                    {
                        "IN": -0.0009542614
                    },
                    {
                        "ES": -8.972073e-05
                    },
                    {
                        " =": -0.013858267
                    },
                    {
                        " Imm": -0.042038966
                    },
                    {
                        "utable": -0.00037326562
                    },
                    {
                        "Set": -0.0024573153
                    },
                    {
                        ".<": -0.024083903
                    },
                    {
                        "String": -0.003588401
                    },
                    {
                        ">": -0.0005240139
                    },
                    {
                        " builder": -0.0324832
                    },
                    {
                        "()": -0.008697695
                    },
                    {
                        "\n": -0.005319754
                    },
                    {
                        "   ": -0.012516873
                    },
                    {
                        " .": -0.06703878
                    },
                    {
                        "add": -0.0009978138
                    },
                    {
                        "(\"": -0.007757014
                    },
                    {
                        "clone": -0.08012833
                    },
                    {
                        "\")": -0.005552101
                    },
                    {
                        "\n": -0.0032876136
                    },
                    {
                        "   ": -0.001942511
                    },
                    {
                        " .": -0.018772982
                    },
                    {
                        "add": -0.00062325277
                    },
                    {
                        "(\"": -0.0008917378
                    },
                    {
                        "wait": -0.008451212
                    },
                    {
                        "\")": -0.003381804
                    },
                    {
                        "\n": -0.009057428
                    },
                    {
                        "   ": -0.014749495
                    },
                    {
                        " .": -0.6697284
                    },
                    {
                        "add": -0.005689606
                    },
                    {
                        "(\"": -0.0060005854
                    },
                    {
                        "not": -0.12149839
                    },
                    {
                        "ify": -0.00086817396
                    },
                    {
                        "\")": -0.029038738
                    },
                    {
                        "\n": -0.02610253
                    },
                    {
                        "   ": -0.008064659
                    },
                    {
                        " .": -0.09221883
                    },
                    {
                        "add": -0.004521479
                    },
                    {
                        "(\"": -0.0021644565
                    },
                    {
                        "equ": -0.20315015
                    },
                    {
                        "als": -6.396884e-05
                    },
                    {
                        "\")": -0.0045515364
                    },
                    {
                        "\n": -0.001721148
                    },
                    {
                        "   ": -0.0022834549
                    },
                    {
                        " .": -0.033468522
                    },
                    {
                        "add": -0.00072697556
                    },
                    {
                        "(\"": -0.000648005
                    },
                    {
                        "to": -0.012347888
                    },
                    {
                        "String": -0.00014408647
                    },
                    {
                        "\")": -0.0012803064
                    },
                    {
                        "\n": -0.0013466117
                    },
                    {
                        "   ": -0.003492811
                    },
                    {
                        " .": -0.029577259
                    },
                    {
                        "add": -0.00047088155
                    },
                    {
                        "(\"": -0.00046312832
                    },
                    {
                        "get": -0.0056599933
                    },
                    {
                        "Class": -0.0003659939
                    },
                    {
                        "\")": -0.0005893778
                    },
                    {
                        "\n": -0.0023460046
                    },
                    {
                        "<|endoftext|>": -0.12078522
                    },
                    {
                        "package": -1.4681067
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    370,
                    375,
                    377,
                    378,
                    381,
                    383,
                    386,
                    388,
                    392,
                    396,
                    398,
                    399,
                    402,
                    404,
                    407,
                    409,
                    412,
                    415,
                    418,
                    420,
                    421,
                    424,
                    426,
                    431,
                    434,
                    436,
                    437,
                    439,
                    444,
                    445,
                    446,
                    453,
                    460,
                    466,
                    470,
                    471,
                    477,
                    478,
                    482,
                    485,
                    487,
                    488,
                    489,
                    492,
                    494,
                    496,
                    498,
                    502,
                    508,
                    511,
                    513,
                    519,
                    520,
                    528,
                    530,
                    531,
                    534,
                    536,
                    539,
                    541,
                    546,
                    548,
                    549,
                    552,
                    554,
                    557,
                    559,
                    563,
                    565,
                    566,
                    569,
                    571,
                    574,
                    576,
                    579,
                    582,
                    584,
                    585,
                    588,
                    590,
                    593,
                    595,
                    598,
                    601,
                    603,
                    604,
                    607,
                    609,
                    612,
                    614,
                    616,
                    622,
                    624,
                    625,
                    628,
                    630,
                    633,
                    635,
                    638,
                    643,
                    645,
                    646,
                    646
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    "include",
                    " \""
                ],
                "token_logprobs": [
                    -0.0030707368,
                    -0.086806715,
                    -0.034984924,
                    -0.010587776,
                    -0.0099804485,
                    -0.690287,
                    -0.01183629,
                    -0.42546222,
                    -0.08369348,
                    -0.11706273,
                    -0.08060883,
                    -0.027718458,
                    -0.0011353506,
                    -0.6465008,
                    -6.158372e-05,
                    -0.0019558237,
                    -0.0046198578,
                    -0.14856882,
                    -0.029708527,
                    -0.0007112888,
                    -0.0007630648,
                    -0.37127906,
                    -0.0003278922,
                    -0.0008715718,
                    -0.0032996929,
                    -0.7378921,
                    -0.05067502,
                    -0.001330022,
                    -0.00057536183,
                    -0.50693095,
                    -0.0013163543,
                    -0.0012672929,
                    -0.005185476,
                    -0.15567753,
                    -2.2718573,
                    -1.09646,
                    -0.94720405
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030707368
                    },
                    {
                        "   ": -0.086806715
                    },
                    {
                        " .": -0.034984924
                    },
                    {
                        "add": -0.010587776
                    },
                    {
                        "(\"": -0.0099804485
                    },
                    {
                        "not": -0.690287
                    },
                    {
                        "ify": -0.01183629
                    },
                    {
                        "\")": -0.42546222
                    },
                    {
                        "\n": -0.08369348
                    },
                    {
                        "   ": -0.11706273
                    },
                    {
                        " .": -0.08060883
                    },
                    {
                        "add": -0.027718458
                    },
                    {
                        "(\"": -0.0011353506
                    },
                    {
                        "equ": -0.6465008
                    },
                    {
                        "als": -6.158372e-05
                    },
                    {
                        "\")": -0.0019558237
                    },
                    {
                        "\n": -0.0046198578
                    },
                    {
                        "   ": -0.14856882
                    },
                    {
                        " .": -0.029708527
                    },
                    {
                        "add": -0.0007112888
                    },
                    {
                        "(\"": -0.0007630648
                    },
                    {
                        "to": -0.37127906
                    },
                    {
                        "String": -0.0003278922
                    },
                    {
                        "\")": -0.0008715718
                    },
                    {
                        "\n": -0.0032996929
                    },
                    {
                        "<|endoftext|>": -0.6515311
                    },
                    {
                        " .": -0.05067502
                    },
                    {
                        "add": -0.001330022
                    },
                    {
                        "(\"": -0.00057536183
                    },
                    {
                        "final": -0.50693095
                    },
                    {
                        "ize": -0.0013163543
                    },
                    {
                        "\")": -0.0012672929
                    },
                    {
                        "\n": -0.005185476
                    },
                    {
                        "<|endoftext|>": -0.15567753
                    },
                    {
                        "package": -1.4691219
                    },
                    {
                        "include": -1.09646
                    },
                    {
                        " <": -0.70515394
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    372,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 89,
        "completion_tokens": 620,
        "total_tokens": 709
    },
    "validation_result": [
        {
            "patch": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val CONFINED_ROUTINES = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val RESTRICTED_METHODS = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"toString\")\n    .add(\"equals\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"toString\")\n    .add(\"equals\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"getClass\")\n    .add(\"toString\")\n",
            "correctness": "test_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"getClass\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val CONFINED_ROUTINES = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val RESTRICTED_METHODS = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Java \nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Java \nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        }
    ]
}