{
    "id": "cmpl-6lml713jiE9X1SZDXIFlryzBuRpZ3",
    "object": "text_completion",
    "created": 1676846865,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -0.6909008,
                    -0.0116711045,
                    -0.42620265,
                    -0.08398601,
                    -0.11896454,
                    -0.08065574,
                    -0.027761167,
                    -0.0011317086,
                    -0.6461108,
                    -6.170386e-05,
                    -0.0019573774,
                    -0.0046132114,
                    -1.9874504,
                    -1.4620923,
                    -0.7084984,
                    -0.0013938849
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ify": -0.0116711045
                    },
                    {
                        "\")": -0.42620265
                    },
                    {
                        "\n": -0.08398601
                    },
                    {
                        "   ": -0.11896454
                    },
                    {
                        " .": -0.08065574
                    },
                    {
                        "add": -0.027761167
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6461108
                    },
                    {
                        "als": -6.170386e-05
                    },
                    {
                        "\")": -0.0019573774
                    },
                    {
                        "\n": -0.0046132114
                    },
                    {
                        "   ": -0.14799003
                    },
                    {
                        "package": -1.4620923
                    },
                    {
                        " com": -0.7084984
                    },
                    {
                        ".": -0.0013938849
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    336,
                    336,
                    336
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -1.7508087,
                    -8.078007e-05,
                    -0.0042761397,
                    -0.0086192945,
                    -0.2375873,
                    -0.052824307,
                    -0.00076437515,
                    -0.0006849259,
                    -0.58795226,
                    -0.0004197157,
                    -0.0011469278,
                    -0.0036911746,
                    -0.7200862,
                    -0.09446408,
                    -0.0036741833,
                    -0.0005754811,
                    -0.47008306,
                    -0.0015037174,
                    -0.0013957351,
                    -0.006501108,
                    -0.17572707,
                    -1.4682221,
                    -0.70851725,
                    -0.0014108961
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "als": -8.078007e-05
                    },
                    {
                        "\")": -0.0042761397
                    },
                    {
                        "\n": -0.0086192945
                    },
                    {
                        "   ": -0.2375873
                    },
                    {
                        " .": -0.052824307
                    },
                    {
                        "add": -0.00076437515
                    },
                    {
                        "(\"": -0.0006849259
                    },
                    {
                        "to": -0.58795226
                    },
                    {
                        "String": -0.0004197157
                    },
                    {
                        "\")": -0.0011469278
                    },
                    {
                        "\n": -0.0036911746
                    },
                    {
                        "<|endoftext|>": -0.6687136
                    },
                    {
                        " .": -0.09446408
                    },
                    {
                        "add": -0.0036741833
                    },
                    {
                        "(\"": -0.0005754811
                    },
                    {
                        "final": -0.47008306
                    },
                    {
                        "ize": -0.0015037174
                    },
                    {
                        "\")": -0.0013957351
                    },
                    {
                        "\n": -0.006501108
                    },
                    {
                        "<|endoftext|>": -0.17572707
                    },
                    {
                        "package": -1.4682221
                    },
                    {
                        " com": -0.70851725
                    },
                    {
                        ".": -0.0014108961
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    329,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    353,
                    356,
                    358,
                    359,
                    359,
                    359,
                    359
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notify\")\n    .add(\"toString\")\n    .build();\n\n// Kotlin\nprivate val CONFINED_ROUTINES = setOf(\n    \"clone\",\n    \"wait\",\n    \"notify\",\n    \"wait\",\n    \"equals\",\n    \"finalize\",\n    \"getClass\",\n    \"hashCode\",\n    \"notifyAll\",\n    \"toString\"\n)\n\n// Guava\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .add(\"toString\")\n    .build();\n\n// Guava, with lambda\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Kot",
                    "lin",
                    "\n",
                    "private",
                    " val",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " set",
                    "Of",
                    "(",
                    "\n",
                    "   ",
                    " \"",
                    "clone",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "wait",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "not",
                    "ify",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "wait",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "equ",
                    "als",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "final",
                    "ize",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "get",
                    "Class",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "hash",
                    "Code",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "not",
                    "ify",
                    "All",
                    "\",",
                    "\n",
                    "   ",
                    " \"",
                    "to",
                    "String",
                    "\"",
                    "\n",
                    ")",
                    "\n",
                    "\n",
                    "//",
                    " Gu",
                    "ava",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Gu",
                    "ava",
                    ",",
                    " with",
                    " lambda",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -2.776327,
                    -0.34212655,
                    -0.0325412,
                    -0.09299918,
                    -0.043127306,
                    -0.0061709587,
                    -0.0015801301,
                    -0.84462404,
                    -7.601266e-05,
                    -0.0017135639,
                    -0.0048046093,
                    -0.14165816,
                    -0.033641107,
                    -0.0008377485,
                    -0.0011171491,
                    -1.6016418,
                    -0.0016195308,
                    -0.0007936066,
                    -0.002884932,
                    -0.1326686,
                    -0.027103825,
                    -0.00088756083,
                    -0.0004266345,
                    -0.44768003,
                    -0.0028073443,
                    -0.0007352056,
                    -0.0024629922,
                    -0.48146698,
                    -0.023753947,
                    -0.00021813008,
                    -0.00071689725,
                    -0.10233966,
                    -0.009379928,
                    -0.0009539038,
                    -0.0020859668,
                    -0.01127667,
                    -0.007483018,
                    -0.00018188405,
                    -0.00021443368,
                    -0.16304217,
                    -0.0006805105,
                    -0.46315244,
                    -0.012550068,
                    -0.2797021,
                    -0.042773202,
                    -0.05142593,
                    -0.0011317086,
                    -0.35464483,
                    -0.0002818626,
                    -0.0027027468,
                    -0.011367275,
                    -0.116070986,
                    -0.114559986,
                    -0.19603623,
                    -0.003789713,
                    -0.14827323,
                    -0.23971725,
                    -0.17458004,
                    -2.1808414,
                    -0.0019186824,
                    -0.38571596,
                    -0.13055328,
                    -0.0656642,
                    -0.05458438,
                    -0.0018737144,
                    -0.00014110812,
                    -0.0027877388,
                    -0.020497985,
                    -0.00028973413,
                    -0.0016066956,
                    -0.00016376152,
                    -0.18025553,
                    -1.3253253,
                    -0.0024776314,
                    -0.332724,
                    -0.016684212,
                    -0.25121617,
                    -0.06256766,
                    -0.41756764,
                    -0.008671542,
                    -0.21870765,
                    -0.002474167,
                    -0.019055618,
                    -0.2583355,
                    -0.011463197,
                    -0.02103625,
                    -0.009530354,
                    -0.3702055,
                    -0.6034647,
                    -0.00035335214,
                    -0.1122672,
                    -0.017892664,
                    -0.0011544465,
                    -0.00957037,
                    -0.9830439,
                    -0.010407496,
                    -0.0061296374,
                    -0.00037565167,
                    -0.0026995188,
                    -0.048972607,
                    -1.4139594e-05,
                    -0.000696139,
                    -0.001805161,
                    -0.00042675465,
                    -0.0029387898,
                    -0.030782701,
                    -0.00039139285,
                    -0.0017517791,
                    -0.001564309,
                    -0.0006728154,
                    -0.0050648735,
                    -0.054886702,
                    -0.0014372787,
                    -0.0021673234,
                    -0.0014258779,
                    -0.0011941908,
                    -0.0017023413,
                    -0.011503291,
                    -0.00032204814,
                    -0.0025643383,
                    -0.0011342157,
                    -0.00051876775,
                    -0.0014529193,
                    -0.01792064,
                    -0.00012250594,
                    -0.7296951,
                    -0.009038783,
                    -0.0026792,
                    -0.0011722865,
                    -0.00069172354,
                    -0.018872045,
                    -7.720381e-05,
                    -0.22088431,
                    -0.0037286868,
                    -0.1112636,
                    -0.07675194,
                    -0.034536764,
                    -0.048002727,
                    -1.5574964,
                    -0.002014834,
                    -0.17163135,
                    -0.0747841,
                    -0.15528563,
                    -0.013029422,
                    -0.7394039,
                    -0.002946024,
                    -0.0021905615,
                    -0.0001101101,
                    -0.00626956,
                    -0.00036134195,
                    -4.1320116e-05,
                    -0.00022754945,
                    -0.0033905965,
                    -7.24364e-05,
                    -0.0010335548,
                    -3.655083e-05,
                    -0.004857316,
                    -0.13407919,
                    -4.179789e-05,
                    -0.000990237,
                    -0.14114302,
                    -0.0011457329,
                    -0.0001319253,
                    -0.04630229,
                    -0.004002434,
                    -0.0011819554,
                    -0.0028985022,
                    -0.005772212,
                    -0.00013526501,
                    -0.0009994846,
                    -0.017583726,
                    -0.0026305516,
                    -0.00075775385,
                    -0.00079002563,
                    -0.005948719,
                    -5.693833e-05,
                    -0.00022927843,
                    -0.010746038,
                    -0.0021494036,
                    -0.0018305402,
                    -0.0026469873,
                    -0.16080622,
                    -0.00022433081,
                    -0.00035359056,
                    -0.027416026,
                    -5.3242864e-05,
                    -0.015617053,
                    -0.0017822307,
                    -0.0007989137,
                    -0.008254671,
                    -0.00017496901,
                    -8.650302e-05,
                    -0.055966787,
                    -0.00227712,
                    -0.0005802513,
                    -0.00017019878,
                    -0.0008429984,
                    -2.3912831e-05,
                    -3.7028603e-05,
                    -0.0065686028,
                    -4.1232483e-06,
                    -0.0001821234,
                    -0.00017007865,
                    -8.00667e-05,
                    -0.0009783021,
                    -2.462996e-05,
                    -4.8233283e-05,
                    -0.0024833675,
                    -0.0001064137,
                    -0.00019643032,
                    -0.00017234455,
                    -0.00023190197,
                    -0.0006666147,
                    -4.29881e-05,
                    -5.20489e-05,
                    -0.003682021,
                    -0.000106773194,
                    -0.0002513358,
                    -0.00020763783,
                    -1.3895898,
                    -0.0078685535,
                    -0.0003931819,
                    -0.00014980942,
                    -0.07002137,
                    -0.00017258391,
                    -0.00014515934,
                    -0.00035025176,
                    -0.014410445,
                    -0.0073909634,
                    -0.00012477185,
                    -0.00017818765,
                    -0.008405829,
                    -5.9321566e-05,
                    -0.117292665,
                    -0.00037410008,
                    -0.0006261147,
                    -0.00053164794,
                    -0.0012171653,
                    -0.0054202476,
                    -5.1930627e-05,
                    -0.0012510036,
                    -3.6074933e-05,
                    -0.0016204864,
                    -0.0006519426,
                    -0.0018776549,
                    -0.0008710941,
                    -0.0019959004,
                    -0.004907208,
                    -0.06445058,
                    -0.060422372,
                    -0.064788185,
                    -1.3711993,
                    -0.0037797813,
                    -3.5946603,
                    -2.9521272,
                    -3.7226455,
                    -0.35701224,
                    -0.060603473,
                    -0.038390897,
                    -0.009210092,
                    -0.059273504,
                    -0.001897421,
                    -0.008681342,
                    -0.00017127168,
                    -0.021570725,
                    -0.0012332771,
                    -8.244993e-05,
                    -0.0003266982,
                    -0.0048862454,
                    -2.7133337e-05,
                    -0.0012377517,
                    -3.237946e-05,
                    -0.01189305,
                    -0.17422444,
                    -0.0001835511,
                    -0.0027777571,
                    -0.34809348,
                    -0.0031522315,
                    -0.00030893143,
                    -0.04261589,
                    -0.027312072,
                    -0.0018380017,
                    -0.009338894,
                    -0.009824293,
                    -0.0022175608,
                    -0.2294644,
                    -0.06136562,
                    -0.03873471,
                    -0.0020851304,
                    -0.0038384167,
                    -0.007621928,
                    -0.0030951896,
                    -0.036883906,
                    -0.016666759,
                    -0.04231588,
                    -0.0046377643,
                    -0.004573571,
                    -0.043315265,
                    -0.0029734056,
                    -0.11843243,
                    -0.012040779,
                    -6.718934e-05,
                    -0.02315908,
                    -0.0037783452,
                    -0.0017744672,
                    -0.006335061,
                    -0.002996301,
                    -0.031604603,
                    -0.01848241,
                    -0.010609704,
                    -0.0008060728,
                    -0.002135367,
                    -0.002965453,
                    -0.0022882936,
                    -0.024119625,
                    -0.009054842,
                    -5.0778563e-06,
                    -0.014890444,
                    -0.000639177,
                    -0.001834599,
                    -0.0024304297,
                    -0.0020619598,
                    -0.009245825,
                    -0.004237351,
                    -7.493791e-05,
                    -0.0025492194,
                    -0.00029843824,
                    -0.0010378519,
                    -0.0019816274,
                    -0.0036729863,
                    -0.0069267903,
                    -0.003759678,
                    -9.0198504e-05,
                    -0.0009042069,
                    -0.00036157944,
                    -0.130933
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "\")": -0.34212655
                    },
                    {
                        "\n": -0.0325412
                    },
                    {
                        "   ": -0.09299918
                    },
                    {
                        " .": -0.043127306
                    },
                    {
                        "add": -0.0061709587
                    },
                    {
                        "(\"": -0.0015801301
                    },
                    {
                        "equ": -0.84462404
                    },
                    {
                        "als": -7.601266e-05
                    },
                    {
                        "\")": -0.0017135639
                    },
                    {
                        "\n": -0.0048046093
                    },
                    {
                        "   ": -0.14165816
                    },
                    {
                        " .": -0.033641107
                    },
                    {
                        "add": -0.0008377485
                    },
                    {
                        "(\"": -0.0011171491
                    },
                    {
                        "to": -0.4937754
                    },
                    {
                        "ize": -0.0016195308
                    },
                    {
                        "\")": -0.0007936066
                    },
                    {
                        "\n": -0.002884932
                    },
                    {
                        "   ": -0.1326686
                    },
                    {
                        " .": -0.027103825
                    },
                    {
                        "add": -0.00088756083
                    },
                    {
                        "(\"": -0.0004266345
                    },
                    {
                        "get": -0.44768003
                    },
                    {
                        "Class": -0.0028073443
                    },
                    {
                        "\")": -0.0007352056
                    },
                    {
                        "\n": -0.0024629922
                    },
                    {
                        "   ": -0.48146698
                    },
                    {
                        " .": -0.023753947
                    },
                    {
                        "add": -0.00021813008
                    },
                    {
                        "(\"": -0.00071689725
                    },
                    {
                        "hash": -0.10233966
                    },
                    {
                        "Code": -0.009379928
                    },
                    {
                        "\")": -0.0009539038
                    },
                    {
                        "\n": -0.0020859668
                    },
                    {
                        "   ": -0.01127667
                    },
                    {
                        " .": -0.007483018
                    },
                    {
                        "add": -0.00018188405
                    },
                    {
                        "(\"": -0.00021443368
                    },
                    {
                        "not": -0.16304217
                    },
                    {
                        "ify": -0.0006805105
                    },
                    {
                        "\")": -0.46315244
                    },
                    {
                        "\n": -0.012550068
                    },
                    {
                        "   ": -0.2797021
                    },
                    {
                        " .": -0.042773202
                    },
                    {
                        "add": -0.05142593
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "to": -0.35464483
                    },
                    {
                        "String": -0.0002818626
                    },
                    {
                        "\")": -0.0027027468
                    },
                    {
                        "\n": -0.011367275
                    },
                    {
                        "   ": -0.116070986
                    },
                    {
                        " .": -0.114559986
                    },
                    {
                        "build": -0.19603623
                    },
                    {
                        "();": -0.003789713
                    },
                    {
                        "\n": -0.14827323
                    },
                    {
                        "\n": -0.23971725
                    },
                    {
                        "//": -0.17458004
                    },
                    {
                        " Scala": -1.5586939
                    },
                    {
                        "lin": -0.0019186824
                    },
                    {
                        "\n": -0.38571596
                    },
                    {
                        "private": -0.13055328
                    },
                    {
                        " val": -0.0656642
                    },
                    {
                        " CON": -0.05458438
                    },
                    {
                        "FIN": -0.0018737144
                    },
                    {
                        "ED": -0.00014110812
                    },
                    {
                        "_": -0.0027877388
                    },
                    {
                        "R": -0.020497985
                    },
                    {
                        "OUT": -0.00028973413
                    },
                    {
                        "IN": -0.0016066956
                    },
                    {
                        "ES": -0.00016376152
                    },
                    {
                        " =": -0.18025553
                    },
                    {
                        " Imm": -0.574979
                    },
                    {
                        "Of": -0.0024776314
                    },
                    {
                        "(": -0.332724
                    },
                    {
                        "\n": -0.016684212
                    },
                    {
                        "   ": -0.25121617
                    },
                    {
                        " \"": -0.06256766
                    },
                    {
                        "clone": -0.41756764
                    },
                    {
                        "\",": -0.008671542
                    },
                    {
                        "\n": -0.21870765
                    },
                    {
                        "   ": -0.002474167
                    },
                    {
                        " \"": -0.019055618
                    },
                    {
                        "wait": -0.2583355
                    },
                    {
                        "\",": -0.011463197
                    },
                    {
                        "\n": -0.02103625
                    },
                    {
                        "   ": -0.009530354
                    },
                    {
                        " \"": -0.3702055
                    },
                    {
                        "not": -0.6034647
                    },
                    {
                        "ify": -0.00035335214
                    },
                    {
                        "\",": -0.1122672
                    },
                    {
                        "\n": -0.017892664
                    },
                    {
                        "   ": -0.0011544465
                    },
                    {
                        " \"": -0.00957037
                    },
                    {
                        "wait": -0.9830439
                    },
                    {
                        "\",": -0.010407496
                    },
                    {
                        "\n": -0.0061296374
                    },
                    {
                        "   ": -0.00037565167
                    },
                    {
                        " \"": -0.0026995188
                    },
                    {
                        "equ": -0.048972607
                    },
                    {
                        "als": -1.4139594e-05
                    },
                    {
                        "\",": -0.000696139
                    },
                    {
                        "\n": -0.001805161
                    },
                    {
                        "   ": -0.00042675465
                    },
                    {
                        " \"": -0.0029387898
                    },
                    {
                        "final": -0.030782701
                    },
                    {
                        "ize": -0.00039139285
                    },
                    {
                        "\",": -0.0017517791
                    },
                    {
                        "\n": -0.001564309
                    },
                    {
                        "   ": -0.0006728154
                    },
                    {
                        " \"": -0.0050648735
                    },
                    {
                        "get": -0.054886702
                    },
                    {
                        "Class": -0.0014372787
                    },
                    {
                        "\",": -0.0021673234
                    },
                    {
                        "\n": -0.0014258779
                    },
                    {
                        "   ": -0.0011941908
                    },
                    {
                        " \"": -0.0017023413
                    },
                    {
                        "hash": -0.011503291
                    },
                    {
                        "Code": -0.00032204814
                    },
                    {
                        "\",": -0.0025643383
                    },
                    {
                        "\n": -0.0011342157
                    },
                    {
                        "   ": -0.00051876775
                    },
                    {
                        " \"": -0.0014529193
                    },
                    {
                        "not": -0.01792064
                    },
                    {
                        "ify": -0.00012250594
                    },
                    {
                        "\",": -0.6666209
                    },
                    {
                        "\",": -0.009038783
                    },
                    {
                        "\n": -0.0026792
                    },
                    {
                        "   ": -0.0011722865
                    },
                    {
                        " \"": -0.00069172354
                    },
                    {
                        "to": -0.018872045
                    },
                    {
                        "String": -7.720381e-05
                    },
                    {
                        "\"": -0.22088431
                    },
                    {
                        "\n": -0.0037286868
                    },
                    {
                        ")": -0.1112636
                    },
                    {
                        "\n": -0.07675194
                    },
                    {
                        "\n": -0.034536764
                    },
                    {
                        "//": -0.048002727
                    },
                    {
                        " Java": -1.2601075
                    },
                    {
                        "ava": -0.002014834
                    },
                    {
                        "\n": -0.17163135
                    },
                    {
                        "private": -0.0747841
                    },
                    {
                        " static": -0.15528563
                    },
                    {
                        " final": -0.013029422
                    },
                    {
                        " Imm": -0.6658412
                    },
                    {
                        "<": -0.002946024
                    },
                    {
                        "String": -0.0021905615
                    },
                    {
                        ">": -0.0001101101
                    },
                    {
                        " CON": -0.00626956
                    },
                    {
                        "FIN": -0.00036134195
                    },
                    {
                        "ED": -4.1320116e-05
                    },
                    {
                        "_": -0.00022754945
                    },
                    {
                        "R": -0.0033905965
                    },
                    {
                        "OUT": -7.24364e-05
                    },
                    {
                        "IN": -0.0010335548
                    },
                    {
                        "ES": -3.655083e-05
                    },
                    {
                        " =": -0.004857316
                    },
                    {
                        " Imm": -0.13407919
                    },
                    {
                        "utable": -4.179789e-05
                    },
                    {
                        "Set": -0.000990237
                    },
                    {
                        ".<": -0.14114302
                    },
                    {
                        "String": -0.0011457329
                    },
                    {
                        ">": -0.0001319253
                    },
                    {
                        " builder": -0.04630229
                    },
                    {
                        "()": -0.004002434
                    },
                    {
                        "\n": -0.0011819554
                    },
                    {
                        "   ": -0.0028985022
                    },
                    {
                        " .": -0.005772212
                    },
                    {
                        "add": -0.00013526501
                    },
                    {
                        "(\"": -0.0009994846
                    },
                    {
                        "clone": -0.017583726
                    },
                    {
                        "\")": -0.0026305516
                    },
                    {
                        "\n": -0.00075775385
                    },
                    {
                        "   ": -0.00079002563
                    },
                    {
                        " .": -0.005948719
                    },
                    {
                        "add": -5.693833e-05
                    },
                    {
                        "(\"": -0.00022927843
                    },
                    {
                        "wait": -0.010746038
                    },
                    {
                        "\")": -0.0021494036
                    },
                    {
                        "\n": -0.0018305402
                    },
                    {
                        "   ": -0.0026469873
                    },
                    {
                        " .": -0.16080622
                    },
                    {
                        "add": -0.00022433081
                    },
                    {
                        "(\"": -0.00035359056
                    },
                    {
                        "not": -0.027416026
                    },
                    {
                        "ify": -5.3242864e-05
                    },
                    {
                        "\")": -0.015617053
                    },
                    {
                        "\n": -0.0017822307
                    },
                    {
                        "   ": -0.0007989137
                    },
                    {
                        " .": -0.008254671
                    },
                    {
                        "add": -0.00017496901
                    },
                    {
                        "(\"": -8.650302e-05
                    },
                    {
                        "wait": -0.055966787
                    },
                    {
                        "\")": -0.00227712
                    },
                    {
                        "\n": -0.0005802513
                    },
                    {
                        "   ": -0.00017019878
                    },
                    {
                        " .": -0.0008429984
                    },
                    {
                        "add": -2.3912831e-05
                    },
                    {
                        "(\"": -3.7028603e-05
                    },
                    {
                        "equ": -0.0065686028
                    },
                    {
                        "als": -4.1232483e-06
                    },
                    {
                        "\")": -0.0001821234
                    },
                    {
                        "\n": -0.00017007865
                    },
                    {
                        "   ": -8.00667e-05
                    },
                    {
                        " .": -0.0009783021
                    },
                    {
                        "add": -2.462996e-05
                    },
                    {
                        "(\"": -4.8233283e-05
                    },
                    {
                        "final": -0.0024833675
                    },
                    {
                        "ize": -0.0001064137
                    },
                    {
                        "\")": -0.00019643032
                    },
                    {
                        "\n": -0.00017234455
                    },
                    {
                        "   ": -0.00023190197
                    },
                    {
                        " .": -0.0006666147
                    },
                    {
                        "add": -4.29881e-05
                    },
                    {
                        "(\"": -5.20489e-05
                    },
                    {
                        "get": -0.003682021
                    },
                    {
                        "Class": -0.000106773194
                    },
                    {
                        "\")": -0.0002513358
                    },
                    {
                        "\n": -0.00020763783
                    },
                    {
                        "<|endoftext|>": -0.28691912
                    },
                    {
                        " .": -0.0078685535
                    },
                    {
                        "add": -0.0003931819
                    },
                    {
                        "(\"": -0.00014980942
                    },
                    {
                        "hash": -0.07002137
                    },
                    {
                        "Code": -0.00017258391
                    },
                    {
                        "\")": -0.00014515934
                    },
                    {
                        "\n": -0.00035025176
                    },
                    {
                        "   ": -0.014410445
                    },
                    {
                        " .": -0.0073909634
                    },
                    {
                        "add": -0.00012477185
                    },
                    {
                        "(\"": -0.00017818765
                    },
                    {
                        "not": -0.008405829
                    },
                    {
                        "ify": -5.9321566e-05
                    },
                    {
                        "All": -0.117292665
                    },
                    {
                        "\")": -0.00037410008
                    },
                    {
                        "\n": -0.0006261147
                    },
                    {
                        "   ": -0.00053164794
                    },
                    {
                        " .": -0.0012171653
                    },
                    {
                        "add": -0.0054202476
                    },
                    {
                        "(\"": -5.1930627e-05
                    },
                    {
                        "to": -0.0012510036
                    },
                    {
                        "String": -3.6074933e-05
                    },
                    {
                        "\")": -0.0016204864
                    },
                    {
                        "\n": -0.0006519426
                    },
                    {
                        "   ": -0.0018776549
                    },
                    {
                        " .": -0.0008710941
                    },
                    {
                        "build": -0.0019959004
                    },
                    {
                        "();": -0.004907208
                    },
                    {
                        "\n": -0.06445058
                    },
                    {
                        "\n": -0.060422372
                    },
                    {
                        "//": -0.064788185
                    },
                    {
                        " Gu": -1.3711993
                    },
                    {
                        "ava": -0.0037797813
                    },
                    {
                        "\n": -1.3761001
                    },
                    {
                        " Java": -2.3936548
                    },
                    {
                        " Java": -2.819567
                    },
                    {
                        "\n": -0.35701224
                    },
                    {
                        "private": -0.060603473
                    },
                    {
                        " static": -0.038390897
                    },
                    {
                        " final": -0.009210092
                    },
                    {
                        " Set": -0.059273504
                    },
                    {
                        "<": -0.001897421
                    },
                    {
                        "String": -0.008681342
                    },
                    {
                        ">": -0.00017127168
                    },
                    {
                        " CON": -0.021570725
                    },
                    {
                        "FIN": -0.0012332771
                    },
                    {
                        "ED": -8.244993e-05
                    },
                    {
                        "_": -0.0003266982
                    },
                    {
                        "R": -0.0048862454
                    },
                    {
                        "OUT": -2.7133337e-05
                    },
                    {
                        "IN": -0.0012377517
                    },
                    {
                        "ES": -3.237946e-05
                    },
                    {
                        " =": -0.01189305
                    },
                    {
                        " Imm": -0.17422444
                    },
                    {
                        "utable": -0.0001835511
                    },
                    {
                        "Set": -0.0027777571
                    },
                    {
                        ".<": -0.34809348
                    },
                    {
                        "String": -0.0031522315
                    },
                    {
                        ">": -0.00030893143
                    },
                    {
                        " builder": -0.04261589
                    },
                    {
                        "()": -0.027312072
                    },
                    {
                        "\n": -0.0018380017
                    },
                    {
                        "   ": -0.009338894
                    },
                    {
                        " .": -0.009824293
                    },
                    {
                        "add": -0.0022175608
                    },
                    {
                        "(\"": -0.2294644
                    },
                    {
                        "clone": -0.06136562
                    },
                    {
                        "\")": -0.03873471
                    },
                    {
                        "\n": -0.0020851304
                    },
                    {
                        "   ": -0.0038384167
                    },
                    {
                        " .": -0.007621928
                    },
                    {
                        "add": -0.0030951896
                    },
                    {
                        "(\"": -0.036883906
                    },
                    {
                        "wait": -0.016666759
                    },
                    {
                        "\")": -0.04231588
                    },
                    {
                        "\n": -0.0046377643
                    },
                    {
                        "   ": -0.004573571
                    },
                    {
                        " .": -0.043315265
                    },
                    {
                        "add": -0.0029734056
                    },
                    {
                        "(\"": -0.11843243
                    },
                    {
                        "not": -0.012040779
                    },
                    {
                        "ify": -6.718934e-05
                    },
                    {
                        "\")": -0.02315908
                    },
                    {
                        "\n": -0.0037783452
                    },
                    {
                        "   ": -0.0017744672
                    },
                    {
                        " .": -0.006335061
                    },
                    {
                        "add": -0.002996301
                    },
                    {
                        "(\"": -0.031604603
                    },
                    {
                        "wait": -0.01848241
                    },
                    {
                        "\")": -0.010609704
                    },
                    {
                        "\n": -0.0008060728
                    },
                    {
                        "   ": -0.002135367
                    },
                    {
                        " .": -0.002965453
                    },
                    {
                        "add": -0.0022882936
                    },
                    {
                        "(\"": -0.024119625
                    },
                    {
                        "equ": -0.009054842
                    },
                    {
                        "als": -5.0778563e-06
                    },
                    {
                        "\")": -0.014890444
                    },
                    {
                        "\n": -0.000639177
                    },
                    {
                        "   ": -0.001834599
                    },
                    {
                        " .": -0.0024304297
                    },
                    {
                        "add": -0.0020619598
                    },
                    {
                        "(\"": -0.009245825
                    },
                    {
                        "final": -0.004237351
                    },
                    {
                        "ize": -7.493791e-05
                    },
                    {
                        "\")": -0.0025492194
                    },
                    {
                        "\n": -0.00029843824
                    },
                    {
                        "   ": -0.0010378519
                    },
                    {
                        " .": -0.0019816274
                    },
                    {
                        "add": -0.0036729863
                    },
                    {
                        "(\"": -0.0069267903
                    },
                    {
                        "get": -0.003759678
                    },
                    {
                        "Class": -9.0198504e-05
                    },
                    {
                        "\")": -0.0009042069
                    },
                    {
                        "\n": -0.00036157944
                    },
                    {
                        "<|endoftext|>": -0.130933
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    312,
                    314,
                    315,
                    318,
                    320,
                    323,
                    325,
                    328,
                    331,
                    333,
                    334,
                    337,
                    339,
                    342,
                    344,
                    349,
                    352,
                    354,
                    355,
                    358,
                    360,
                    363,
                    365,
                    368,
                    373,
                    375,
                    376,
                    379,
                    381,
                    384,
                    386,
                    390,
                    394,
                    396,
                    397,
                    400,
                    402,
                    405,
                    407,
                    410,
                    413,
                    415,
                    416,
                    419,
                    421,
                    424,
                    426,
                    428,
                    434,
                    436,
                    437,
                    440,
                    442,
                    447,
                    450,
                    451,
                    452,
                    454,
                    458,
                    461,
                    462,
                    469,
                    473,
                    477,
                    480,
                    482,
                    483,
                    484,
                    487,
                    489,
                    491,
                    493,
                    497,
                    499,
                    500,
                    501,
                    504,
                    506,
                    511,
                    513,
                    514,
                    517,
                    519,
                    523,
                    525,
                    526,
                    529,
                    531,
                    534,
                    537,
                    539,
                    540,
                    543,
                    545,
                    549,
                    551,
                    552,
                    555,
                    557,
                    560,
                    563,
                    565,
                    566,
                    569,
                    571,
                    576,
                    579,
                    581,
                    582,
                    585,
                    587,
                    590,
                    595,
                    597,
                    598,
                    601,
                    603,
                    607,
                    611,
                    613,
                    614,
                    617,
                    619,
                    622,
                    625,
                    628,
                    630,
                    631,
                    634,
                    636,
                    638,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    651,
                    654,
                    657,
                    658,
                    665,
                    672,
                    678,
                    682,
                    683,
                    689,
                    690,
                    694,
                    697,
                    699,
                    700,
                    701,
                    704,
                    706,
                    708,
                    710,
                    714,
                    720,
                    723,
                    725,
                    731,
                    732,
                    740,
                    742,
                    743,
                    746,
                    748,
                    751,
                    753,
                    758,
                    760,
                    761,
                    764,
                    766,
                    769,
                    771,
                    775,
                    777,
                    778,
                    781,
                    783,
                    786,
                    788,
                    791,
                    794,
                    796,
                    797,
                    800,
                    802,
                    805,
                    807,
                    811,
                    813,
                    814,
                    817,
                    819,
                    822,
                    824,
                    827,
                    830,
                    832,
                    833,
                    836,
                    838,
                    841,
                    843,
                    848,
                    851,
                    853,
                    854,
                    857,
                    859,
                    862,
                    864,
                    867,
                    872,
                    874,
                    875,
                    878,
                    880,
                    883,
                    885,
                    889,
                    893,
                    895,
                    896,
                    899,
                    901,
                    904,
                    906,
                    909,
                    912,
                    915,
                    917,
                    918,
                    921,
                    923,
                    926,
                    928,
                    930,
                    936,
                    938,
                    939,
                    942,
                    944,
                    949,
                    952,
                    953,
                    954,
                    956,
                    959,
                    962,
                    963,
                    968,
                    975,
                    976,
                    983,
                    990,
                    996,
                    1000,
                    1001,
                    1007,
                    1008,
                    1012,
                    1015,
                    1017,
                    1018,
                    1019,
                    1022,
                    1024,
                    1026,
                    1028,
                    1032,
                    1038,
                    1041,
                    1043,
                    1049,
                    1050,
                    1058,
                    1060,
                    1061,
                    1064,
                    1066,
                    1069,
                    1071,
                    1076,
                    1078,
                    1079,
                    1082,
                    1084,
                    1087,
                    1089,
                    1093,
                    1095,
                    1096,
                    1099,
                    1101,
                    1104,
                    1106,
                    1109,
                    1112,
                    1114,
                    1115,
                    1118,
                    1120,
                    1123,
                    1125,
                    1129,
                    1131,
                    1132,
                    1135,
                    1137,
                    1140,
                    1142,
                    1145,
                    1148,
                    1150,
                    1151,
                    1154,
                    1156,
                    1159,
                    1161,
                    1166,
                    1169,
                    1171,
                    1172,
                    1175,
                    1177,
                    1180,
                    1182,
                    1185,
                    1190,
                    1192,
                    1193
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -0.6909008,
                    -0.0116711045,
                    -0.42620265,
                    -0.08398601,
                    -0.11896454,
                    -0.08065574,
                    -0.027761167,
                    -0.0011317086,
                    -0.6461108,
                    -6.170386e-05,
                    -0.0019573774,
                    -0.0046132114,
                    -0.14799003,
                    -0.029769622,
                    -0.000699718,
                    -0.00077117566,
                    -0.3700665,
                    -0.0003287257,
                    -0.0008707374,
                    -0.0032916209,
                    -0.6554572,
                    -1.4653188,
                    -0.7084062,
                    -0.0013981229
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ify": -0.0116711045
                    },
                    {
                        "\")": -0.42620265
                    },
                    {
                        "\n": -0.08398601
                    },
                    {
                        "   ": -0.11896454
                    },
                    {
                        " .": -0.08065574
                    },
                    {
                        "add": -0.027761167
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6461108
                    },
                    {
                        "als": -6.170386e-05
                    },
                    {
                        "\")": -0.0019573774
                    },
                    {
                        "\n": -0.0046132114
                    },
                    {
                        "   ": -0.14799003
                    },
                    {
                        " .": -0.029769622
                    },
                    {
                        "add": -0.000699718
                    },
                    {
                        "(\"": -0.00077117566
                    },
                    {
                        "to": -0.3700665
                    },
                    {
                        "String": -0.0003287257
                    },
                    {
                        "\")": -0.0008707374
                    },
                    {
                        "\n": -0.0032916209
                    },
                    {
                        "<|endoftext|>": -0.6554572
                    },
                    {
                        "package": -1.4653188
                    },
                    {
                        " com": -0.7084062
                    },
                    {
                        ".": -0.0013981229
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Kotlin \nprivate val CONFINED_ROUTINES = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n\n",
                    "\n",
                    "//",
                    " Kot",
                    "lin",
                    " ",
                    "\n",
                    "private",
                    " val",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".",
                    "builder",
                    "<",
                    "String",
                    ">",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com"
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -0.6909008,
                    -0.0116711045,
                    -0.42620265,
                    -0.08398601,
                    -0.11896454,
                    -0.08065574,
                    -0.027761167,
                    -0.0011317086,
                    -3.0886176,
                    -0.018652918,
                    -0.003152111,
                    -0.0050622383,
                    -0.03162017,
                    -0.023885367,
                    -0.036994554,
                    -0.0005323031,
                    -1.1109403,
                    -0.00043891673,
                    -0.0056186337,
                    -0.003293772,
                    -0.0032181856,
                    -0.0040350505,
                    -0.025386548,
                    -0.13645151,
                    -0.0057371436,
                    -1.9433414,
                    -0.1423657,
                    -0.2613337,
                    -2.281089,
                    -0.0018589646,
                    -1.405022,
                    -0.0046939347,
                    -0.1486388,
                    -0.0654846,
                    -0.028870808,
                    -0.0011423923,
                    -9.162713e-05,
                    -0.0013932897,
                    -0.008642803,
                    -0.00026361804,
                    -0.0010861811,
                    -4.1678675e-05,
                    -0.26375195,
                    -0.08476793,
                    -0.00014492373,
                    -0.0013953774,
                    -0.042745214,
                    -0.021765634,
                    -0.014659792,
                    -0.0042766193,
                    -0.0029239678,
                    -0.0100141,
                    -0.0076706386,
                    -0.004414426,
                    -0.0045324345,
                    -0.00048370167,
                    -0.0012515995,
                    -0.012736168,
                    -0.0010901208,
                    -0.0008991363,
                    -0.00064883946,
                    -0.0021051415,
                    -4.1678675e-05,
                    -0.00017687635,
                    -0.0025097183,
                    -0.0009864176,
                    -0.0062327334,
                    -0.03271683,
                    -0.57421374,
                    -0.032024167,
                    -9.2941234e-05,
                    -0.017610902,
                    -0.14620723,
                    -0.0013251869,
                    -0.011811081,
                    -0.0014141193,
                    -0.028466286,
                    -0.0013668461,
                    -0.0056264265,
                    -0.0031122307,
                    -0.00054148876,
                    -0.006019536,
                    -0.027496403,
                    -0.0017109356,
                    -0.012585016,
                    -0.008750004,
                    -0.0013627865,
                    -0.00515384,
                    -0.049961638,
                    -0.00027315848,
                    -0.003809696,
                    -0.005102136,
                    -0.006344779,
                    -0.007106742,
                    -0.004415625,
                    -0.0005023067,
                    -0.0013126532,
                    -0.0020636306,
                    -0.00024775858,
                    -0.0053277826,
                    -0.0030269725,
                    -0.041784,
                    -1.4619901,
                    -0.70974463
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ify": -0.0116711045
                    },
                    {
                        "\")": -0.42620265
                    },
                    {
                        "\n": -0.08398601
                    },
                    {
                        "   ": -0.11896454
                    },
                    {
                        " .": -0.08065574
                    },
                    {
                        "add": -0.027761167
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6461108
                    },
                    {
                        "Code": -0.018652918
                    },
                    {
                        "\")": -0.003152111
                    },
                    {
                        "\n": -0.0050622383
                    },
                    {
                        "   ": -0.03162017
                    },
                    {
                        " .": -0.023885367
                    },
                    {
                        "add": -0.036994554
                    },
                    {
                        "(\"": -0.0005323031
                    },
                    {
                        "not": -1.1109403
                    },
                    {
                        "ify": -0.00043891673
                    },
                    {
                        "All": -0.0056186337
                    },
                    {
                        "\")": -0.003293772
                    },
                    {
                        "\n": -0.0032181856
                    },
                    {
                        "   ": -0.0040350505
                    },
                    {
                        " .": -0.025386548
                    },
                    {
                        "build": -0.13645151
                    },
                    {
                        "();": -0.0057371436
                    },
                    {
                        "\n": -0.17635448
                    },
                    {
                        "\n": -0.1423657
                    },
                    {
                        "//": -0.2613337
                    },
                    {
                        " Java": -1.829859
                    },
                    {
                        "lin": -0.0018589646
                    },
                    {
                        "\n": -0.35874397
                    },
                    {
                        "\n": -0.0046939347
                    },
                    {
                        "private": -0.1486388
                    },
                    {
                        " val": -0.0654846
                    },
                    {
                        " CON": -0.028870808
                    },
                    {
                        "FIN": -0.0011423923
                    },
                    {
                        "ED": -9.162713e-05
                    },
                    {
                        "_": -0.0013932897
                    },
                    {
                        "R": -0.008642803
                    },
                    {
                        "OUT": -0.00026361804
                    },
                    {
                        "IN": -0.0010861811
                    },
                    {
                        "ES": -4.1678675e-05
                    },
                    {
                        " =": -0.26375195
                    },
                    {
                        " Imm": -0.08476793
                    },
                    {
                        "utable": -0.00014492373
                    },
                    {
                        "Set": -0.0013953774
                    },
                    {
                        ".": -0.042745214
                    },
                    {
                        "builder": -0.021765634
                    },
                    {
                        "<": -0.014659792
                    },
                    {
                        "String": -0.0042766193
                    },
                    {
                        ">": -0.0029239678
                    },
                    {
                        "()": -0.0100141
                    },
                    {
                        "\n": -0.0076706386
                    },
                    {
                        "   ": -0.004414426
                    },
                    {
                        " .": -0.0045324345
                    },
                    {
                        "add": -0.00048370167
                    },
                    {
                        "(\"": -0.0012515995
                    },
                    {
                        "clone": -0.012736168
                    },
                    {
                        "\")": -0.0010901208
                    },
                    {
                        "\n": -0.0008991363
                    },
                    {
                        "   ": -0.00064883946
                    },
                    {
                        " .": -0.0021051415
                    },
                    {
                        "add": -4.1678675e-05
                    },
                    {
                        "(\"": -0.00017687635
                    },
                    {
                        "wait": -0.0025097183
                    },
                    {
                        "\")": -0.0009864176
                    },
                    {
                        "\n": -0.0062327334
                    },
                    {
                        "   ": -0.03271683
                    },
                    {
                        " /*": -0.57421374
                    },
                    {
                        " B": -0.032024167
                    },
                    {
                        "UG": -9.2941234e-05
                    },
                    {
                        ":": -0.017610902
                    },
                    {
                        " ": -0.14620723
                    },
                    {
                        "\n": -0.0013251869
                    },
                    {
                        "    ": -0.011811081
                    },
                    {
                        " *": -0.0014141193
                    },
                    {
                        " .": -0.028466286
                    },
                    {
                        "add": -0.0013668461
                    },
                    {
                        "(\"": -0.0056264265
                    },
                    {
                        "not": -0.0031122307
                    },
                    {
                        "ify": -0.00054148876
                    },
                    {
                        "\")": -0.006019536
                    },
                    {
                        "\n": -0.027496403
                    },
                    {
                        "    ": -0.0017109356
                    },
                    {
                        " *": -0.012585016
                    },
                    {
                        " FIX": -0.008750004
                    },
                    {
                        "ED": -0.0013627865
                    },
                    {
                        ":": -0.00515384
                    },
                    {
                        " ": -0.049961638
                    },
                    {
                        "\n": -0.00027315848
                    },
                    {
                        "    ": -0.003809696
                    },
                    {
                        " */": -0.005102136
                    },
                    {
                        "\n": -0.006344779
                    },
                    {
                        "   ": -0.007106742
                    },
                    {
                        " .": -0.004415625
                    },
                    {
                        "add": -0.0005023067
                    },
                    {
                        "(\"": -0.0013126532
                    },
                    {
                        "not": -0.0020636306
                    },
                    {
                        "ify": -0.00024775858
                    },
                    {
                        "\")": -0.0053277826
                    },
                    {
                        "\n": -0.0030269725
                    },
                    {
                        "<|endoftext|>": -0.041784
                    },
                    {
                        "package": -1.4619901
                    },
                    {
                        " com": -0.70974463
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    331,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    354,
                    357,
                    359,
                    360,
                    363,
                    365,
                    370,
                    373,
                    375,
                    376,
                    378,
                    382,
                    385,
                    386,
                    387,
                    394,
                    398,
                    402,
                    405,
                    407,
                    408,
                    409,
                    412,
                    414,
                    416,
                    418,
                    422,
                    428,
                    431,
                    432,
                    439,
                    440,
                    446,
                    447,
                    449,
                    450,
                    453,
                    455,
                    458,
                    460,
                    465,
                    467,
                    468,
                    471,
                    473,
                    476,
                    478,
                    482,
                    484,
                    485,
                    488,
                    491,
                    493,
                    495,
                    496,
                    497,
                    498,
                    502,
                    504,
                    506,
                    509,
                    511,
                    514,
                    517,
                    519,
                    520,
                    524,
                    526,
                    530,
                    532,
                    533,
                    534,
                    535,
                    539,
                    542,
                    543,
                    546,
                    548,
                    551,
                    553,
                    556,
                    559,
                    561,
                    562,
                    562,
                    562
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"finalize\")\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "bytes:\\xef",
                    "bytes:\\xbb",
                    "bytes:\\xbf"
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -0.6909008,
                    -0.0116711045,
                    -0.42620265,
                    -0.08398601,
                    -0.11896454,
                    -0.08065574,
                    -0.027761167,
                    -0.0011317086,
                    -1.5354196,
                    -0.0005279506,
                    -0.0012015902,
                    -0.0041734832,
                    -0.1421836,
                    -0.039295476,
                    -0.00086053705,
                    -0.0006340482,
                    -0.25191647,
                    -5.8010275e-05,
                    -0.0014724367,
                    -0.0043989224,
                    -0.68420374,
                    -0.052834615,
                    -0.0004441657,
                    -0.00071462855,
                    -0.7863416,
                    -0.0010818259,
                    -0.00081502006,
                    -0.003987892,
                    -0.2752782,
                    -2.5245857,
                    -2.5225998e-05,
                    -1.8841804e-07
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ify": -0.0116711045
                    },
                    {
                        "\")": -0.42620265
                    },
                    {
                        "\n": -0.08398601
                    },
                    {
                        "   ": -0.11896454
                    },
                    {
                        " .": -0.08065574
                    },
                    {
                        "add": -0.027761167
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6461108
                    },
                    {
                        "String": -0.0005279506
                    },
                    {
                        "\")": -0.0012015902
                    },
                    {
                        "\n": -0.0041734832
                    },
                    {
                        "   ": -0.1421836
                    },
                    {
                        " .": -0.039295476
                    },
                    {
                        "add": -0.00086053705
                    },
                    {
                        "(\"": -0.0006340482
                    },
                    {
                        "equ": -0.25191647
                    },
                    {
                        "als": -5.8010275e-05
                    },
                    {
                        "\")": -0.0014724367
                    },
                    {
                        "\n": -0.0043989224
                    },
                    {
                        "   ": -0.68420374
                    },
                    {
                        " .": -0.052834615
                    },
                    {
                        "add": -0.0004441657
                    },
                    {
                        "(\"": -0.00071462855
                    },
                    {
                        "final": -0.7863416
                    },
                    {
                        "ize": -0.0010818259
                    },
                    {
                        "\")": -0.00081502006
                    },
                    {
                        "\n": -0.003987892
                    },
                    {
                        "<|endoftext|>": -0.2752782
                    },
                    {
                        "package": -1.4674711
                    },
                    {
                        "bytes:\\xbb": -2.5225998e-05
                    },
                    {
                        "bytes:\\xbf": -1.8841804e-07
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    329,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    372,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " {",
                    " Ng"
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -0.6909008,
                    -0.0116711045,
                    -0.42620265,
                    -0.08398601,
                    -0.11896454,
                    -0.08065574,
                    -0.027761167,
                    -0.0011317086,
                    -1.5354196,
                    -0.0005279506,
                    -0.0012015902,
                    -0.0041734832,
                    -0.1421836,
                    -0.039295476,
                    -0.00086053705,
                    -0.0006340482,
                    -0.25191647,
                    -5.8010275e-05,
                    -0.0014724367,
                    -0.0043989224,
                    -0.7035194,
                    -2.1435447,
                    -1.2577245,
                    -2.776741
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ify": -0.0116711045
                    },
                    {
                        "\")": -0.42620265
                    },
                    {
                        "\n": -0.08398601
                    },
                    {
                        "   ": -0.11896454
                    },
                    {
                        " .": -0.08065574
                    },
                    {
                        "add": -0.027761167
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6461108
                    },
                    {
                        "String": -0.0005279506
                    },
                    {
                        "\")": -0.0012015902
                    },
                    {
                        "\n": -0.0041734832
                    },
                    {
                        "   ": -0.1421836
                    },
                    {
                        " .": -0.039295476
                    },
                    {
                        "add": -0.00086053705
                    },
                    {
                        "(\"": -0.0006340482
                    },
                    {
                        "equ": -0.25191647
                    },
                    {
                        "als": -5.8010275e-05
                    },
                    {
                        "\")": -0.0014724367
                    },
                    {
                        "\n": -0.0043989224
                    },
                    {
                        "   ": -0.68420374
                    },
                    {
                        "package": -1.4677949
                    },
                    {
                        " React": -1.222019
                    },
                    {
                        " Component": -1.563037
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    329,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -0.6909008,
                    -0.0116711045,
                    -0.42620265,
                    -0.08398601,
                    -0.11896454,
                    -0.08065574,
                    -0.027761167,
                    -0.0011317086,
                    -0.6461108,
                    -6.170386e-05,
                    -0.0019573774,
                    -0.0046132114,
                    -0.14799003,
                    -0.029769622,
                    -0.000699718,
                    -0.00077117566,
                    -0.3700665,
                    -0.0003287257,
                    -0.0008707374,
                    -0.0032916209,
                    -0.6554572,
                    -1.4653188,
                    -0.7084062,
                    -0.0013981229
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ify": -0.0116711045
                    },
                    {
                        "\")": -0.42620265
                    },
                    {
                        "\n": -0.08398601
                    },
                    {
                        "   ": -0.11896454
                    },
                    {
                        " .": -0.08065574
                    },
                    {
                        "add": -0.027761167
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6461108
                    },
                    {
                        "als": -6.170386e-05
                    },
                    {
                        "\")": -0.0019573774
                    },
                    {
                        "\n": -0.0046132114
                    },
                    {
                        "   ": -0.14799003
                    },
                    {
                        " .": -0.029769622
                    },
                    {
                        "add": -0.000699718
                    },
                    {
                        "(\"": -0.00077117566
                    },
                    {
                        "to": -0.3700665
                    },
                    {
                        "String": -0.0003287257
                    },
                    {
                        "\")": -0.0008707374
                    },
                    {
                        "\n": -0.0032916209
                    },
                    {
                        "<|endoftext|>": -0.6554572
                    },
                    {
                        "package": -1.4653188
                    },
                    {
                        " com": -0.7084062
                    },
                    {
                        ".": -0.0013981229
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"finalize\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "<?",
                    "php",
                    "\n"
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -2.991741,
                    -0.0032109495,
                    -0.0031342937,
                    -0.013587609,
                    -0.07670045,
                    -0.05489823,
                    -0.002137338,
                    -0.0011659628,
                    -1.5564902,
                    -0.0009080253,
                    -0.0018956291,
                    -0.003788995,
                    -0.20434135,
                    -0.05525034,
                    -0.00058251905,
                    -0.00077368284,
                    -0.30403864,
                    -8.5549356e-05,
                    -0.0016995348,
                    -0.005875213,
                    -0.1084973,
                    -2.4137223,
                    -0.02591589,
                    -0.15622452
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ize": -0.0032109495
                    },
                    {
                        "\")": -0.0031342937
                    },
                    {
                        "\n": -0.013587609
                    },
                    {
                        "   ": -0.07670045
                    },
                    {
                        " .": -0.05489823
                    },
                    {
                        "add": -0.002137338
                    },
                    {
                        "(\"": -0.0011659628
                    },
                    {
                        "equ": -1.0356305
                    },
                    {
                        "String": -0.0009080253
                    },
                    {
                        "\")": -0.0018956291
                    },
                    {
                        "\n": -0.003788995
                    },
                    {
                        "   ": -0.20434135
                    },
                    {
                        " .": -0.05525034
                    },
                    {
                        "add": -0.00058251905
                    },
                    {
                        "(\"": -0.00077368284
                    },
                    {
                        "equ": -0.30403864
                    },
                    {
                        "als": -8.5549356e-05
                    },
                    {
                        "\")": -0.0016995348
                    },
                    {
                        "\n": -0.005875213
                    },
                    {
                        "<|endoftext|>": -0.1084973
                    },
                    {
                        "package": -1.4693598
                    },
                    {
                        "php": -0.02591589
                    },
                    {
                        "\n": -0.15622452
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    313,
                    316,
                    318,
                    319,
                    322,
                    324,
                    327,
                    329,
                    331,
                    337,
                    339,
                    340,
                    343,
                    345,
                    348,
                    350,
                    353,
                    356,
                    358,
                    359,
                    359,
                    359,
                    359
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030560903,
                    -0.0866953,
                    -0.035186794,
                    -0.010558981,
                    -0.0099380035,
                    -0.6909008,
                    -0.0116711045,
                    -0.42620265,
                    -0.08398601,
                    -0.11896454,
                    -0.08065574,
                    -0.027761167,
                    -0.0011317086,
                    -0.6461108,
                    -6.170386e-05,
                    -0.0019573774,
                    -0.0046132114,
                    -0.14799003,
                    -0.029769622,
                    -0.000699718,
                    -0.00077117566,
                    -0.3700665,
                    -0.0003287257,
                    -0.0008707374,
                    -0.0032916209,
                    -0.73362607,
                    -0.048262063,
                    -0.0013063267,
                    -0.00056438905,
                    -0.5048193,
                    -0.0013170695,
                    -0.0012592984,
                    -0.0052209445,
                    -0.15364304,
                    -1.4692756,
                    -0.70776707,
                    -0.0013836197
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030560903
                    },
                    {
                        "   ": -0.0866953
                    },
                    {
                        " .": -0.035186794
                    },
                    {
                        "add": -0.010558981
                    },
                    {
                        "(\"": -0.0099380035
                    },
                    {
                        "not": -0.6909008
                    },
                    {
                        "ify": -0.0116711045
                    },
                    {
                        "\")": -0.42620265
                    },
                    {
                        "\n": -0.08398601
                    },
                    {
                        "   ": -0.11896454
                    },
                    {
                        " .": -0.08065574
                    },
                    {
                        "add": -0.027761167
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6461108
                    },
                    {
                        "als": -6.170386e-05
                    },
                    {
                        "\")": -0.0019573774
                    },
                    {
                        "\n": -0.0046132114
                    },
                    {
                        "   ": -0.14799003
                    },
                    {
                        " .": -0.029769622
                    },
                    {
                        "add": -0.000699718
                    },
                    {
                        "(\"": -0.00077117566
                    },
                    {
                        "to": -0.3700665
                    },
                    {
                        "String": -0.0003287257
                    },
                    {
                        "\")": -0.0008707374
                    },
                    {
                        "\n": -0.0032916209
                    },
                    {
                        "<|endoftext|>": -0.6554572
                    },
                    {
                        " .": -0.048262063
                    },
                    {
                        "add": -0.0013063267
                    },
                    {
                        "(\"": -0.00056438905
                    },
                    {
                        "final": -0.5048193
                    },
                    {
                        "ize": -0.0013170695
                    },
                    {
                        "\")": -0.0012592984
                    },
                    {
                        "\n": -0.0052209445
                    },
                    {
                        "<|endoftext|>": -0.15364304
                    },
                    {
                        "package": -1.4692756
                    },
                    {
                        " com": -0.70776707
                    },
                    {
                        ".": -0.0013836197
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    372,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 89,
        "completion_tokens": 654,
        "total_tokens": 743
    },
    "validation_result": [
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n"
        },
        {
            "patch": "    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notify\")\n    .add(\"toString\")\n    .build();\n\n// Kotlin\nprivate val CONFINED_ROUTINES = setOf(\n    \"clone\",\n    \"wait\",\n    \"notify\",\n    \"wait\",\n    \"equals\",\n    \"finalize\",\n    \"getClass\",\n    \"hashCode\",\n    \"notifyAll\",\n    \"toString\"\n)\n\n// Guava\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .add(\"toString\")\n    .build();\n\n// Guava, with lambda\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notify\")\n    .add(\"toString\")\n    .build();\n\n// Kotlin\nprivate val RESTRICTED_METHODS = setOf(\n    \"clone\",\n    \"wait\",\n    \"notify\",\n    \"wait\",\n    \"equals\",\n    \"finalize\",\n    \"getClass\",\n    \"hashCode\",\n    \"notifyAll\",\n    \"toString\"\n)\n\n// Guava\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .add(\"toString\")\n    .build();\n\n// Guava, with lambda\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Kotlin \nprivate val CONFINED_ROUTINES = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Kotlin \nprivate val RESTRICTED_METHODS = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"finalize\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"finalize\")\n    .add(\"toString\")\n    .add(\"equals\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        }
    ]
}