{
    "id": "cmpl-6lhbLos6DILGFeRuAtWdj849Et5SL",
    "object": "text_completion",
    "created": 1676827039,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "//",
                    "\n",
                    "//",
                    " "
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -0.40147743,
                    -0.084532,
                    -0.12667267,
                    -0.08106035,
                    -0.02725143,
                    -0.0010708455,
                    -0.64372665,
                    -5.979934e-05,
                    -0.0019219066,
                    -0.004506869,
                    -0.13267349,
                    -0.029246219,
                    -0.00065468537,
                    -0.000757874,
                    -0.3904035,
                    -0.0003214502,
                    -0.00083977694,
                    -0.0032615997,
                    -0.67321813,
                    -2.717363,
                    -0.78959054,
                    -0.001861114,
                    -0.09959152
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\n": -0.084532
                    },
                    {
                        "   ": -0.12667267
                    },
                    {
                        " .": -0.08106035
                    },
                    {
                        "add": -0.02725143
                    },
                    {
                        "(\"": -0.0010708455
                    },
                    {
                        "equ": -0.64372665
                    },
                    {
                        "als": -5.979934e-05
                    },
                    {
                        "\")": -0.0019219066
                    },
                    {
                        "\n": -0.004506869
                    },
                    {
                        "   ": -0.13267349
                    },
                    {
                        " .": -0.029246219
                    },
                    {
                        "add": -0.00065468537
                    },
                    {
                        "(\"": -0.000757874
                    },
                    {
                        "to": -0.3904035
                    },
                    {
                        "String": -0.0003214502
                    },
                    {
                        "\")": -0.00083977694
                    },
                    {
                        "\n": -0.0032615997
                    },
                    {
                        "<|endoftext|>": -0.67321813
                    },
                    {
                        "package": -1.464834
                    },
                    {
                        "\n": -0.78959054
                    },
                    {
                        "//": -0.001861114
                    },
                    {
                        " ": -0.09959152
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .build();\n\n// Groovy\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .build();\n\n// Scala\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Gro",
                    "ovy",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Scala",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " React"
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -0.40147743,
                    -0.084532,
                    -0.12667267,
                    -0.08106035,
                    -0.02725143,
                    -0.0010708455,
                    -0.64372665,
                    -5.979934e-05,
                    -0.0019219066,
                    -0.004506869,
                    -0.13267349,
                    -0.029246219,
                    -0.00065468537,
                    -0.000757874,
                    -0.3904035,
                    -0.0003214502,
                    -0.00083977694,
                    -0.0032615997,
                    -0.7147067,
                    -0.050273288,
                    -0.0011191785,
                    -0.0005609273,
                    -2.0452766,
                    -0.045221537,
                    -0.0030827546,
                    -0.003413205,
                    -0.016650818,
                    -0.02038185,
                    -0.048176188,
                    -0.00041291988,
                    -0.7059043,
                    -0.0038809602,
                    -0.0010188171,
                    -0.009520185,
                    -0.14985476,
                    -0.0839851,
                    -0.52730983,
                    -0.0032942507,
                    -1.2106752,
                    -0.018442156,
                    -0.006017796,
                    -0.067041904,
                    -0.1532191,
                    -0.0028668798,
                    -0.00043593463,
                    -0.44705853,
                    -0.00023834205,
                    -0.3254411,
                    -0.0020990497,
                    -0.040084943,
                    -0.010168116,
                    -0.0017785287,
                    -0.0003123885,
                    -0.3729995,
                    -0.00031131558,
                    -0.0071544084,
                    -0.002384063,
                    -0.00479263,
                    -0.025439983,
                    -0.033012733,
                    -0.16372058,
                    -0.004156486,
                    -0.17627892,
                    -0.26544297,
                    -0.20929007,
                    -2.102003,
                    -0.0033364121,
                    -0.39567313,
                    -0.15668105,
                    -0.02987985,
                    -0.020820849,
                    -0.027133653,
                    -0.0061082887,
                    -0.0028039962,
                    -0.00051983976,
                    -0.021490457,
                    -0.00066780584,
                    -8.423619e-05,
                    -0.0007863274,
                    -0.013742237,
                    -0.00015827699,
                    -0.00065635337,
                    -3.529076e-06,
                    -0.007148766,
                    -0.048440605,
                    -5.1930627e-05,
                    -0.0009178089,
                    -0.015132709,
                    -0.0007288838,
                    -0.0008300526,
                    -0.040093195,
                    -0.005287814,
                    -0.004742682,
                    -0.011473567,
                    -0.066346064,
                    -0.0005407735,
                    -0.002647344,
                    -0.94296825,
                    -0.0017427023,
                    -0.0056231297,
                    -0.0029103975,
                    -0.0368468,
                    -0.0006200332,
                    -0.0007075915,
                    -0.34191912,
                    -0.0023187622,
                    -0.005346299,
                    -0.0063898866,
                    -0.30080342,
                    -0.00052186626,
                    -0.0005314086,
                    -0.2352123,
                    -0.0001086796,
                    -0.0223481,
                    -0.0068494915,
                    -0.0041934163,
                    -0.02280729,
                    -0.000826832,
                    -0.00061836146,
                    -0.27263647,
                    -1.1753544e-05,
                    -0.0011565931,
                    -0.0013479257,
                    -0.0027729755,
                    -0.011518365,
                    -0.00015338662,
                    -0.00026361804,
                    -0.05975409,
                    -9.151261e-05,
                    -0.0002502629,
                    -0.0010886884,
                    -0.52211154,
                    -0.027859226,
                    -0.0010843911,
                    -0.0006604102,
                    -0.899932,
                    -0.0015262233,
                    -0.00039652258,
                    -0.0015908738,
                    -0.0017990109,
                    -0.01089854,
                    -0.011397359,
                    -0.00040224646,
                    -0.104500785,
                    -0.018892756,
                    -0.00063762726,
                    -0.0023201955,
                    -0.005777908,
                    -0.00728733,
                    -0.012114622,
                    -0.00044547606,
                    -0.08077695,
                    -0.0020402758,
                    -0.00068194285,
                    -0.0017154749,
                    -0.0051979376,
                    -0.00021884627,
                    -0.00013800588,
                    -0.01125756,
                    -7.8038276e-05,
                    -0.007306482,
                    -0.0011670357,
                    -0.092348516,
                    -0.008155093,
                    -0.0022623644,
                    -0.00022373382,
                    -0.01262081,
                    -4.0126153e-05,
                    -0.0009271156,
                    -0.0010268707,
                    -0.0033056713,
                    -0.0052100397,
                    -0.015690492,
                    -0.08695398,
                    -0.0029166755,
                    -0.0644165,
                    -0.051315743,
                    -0.015037348,
                    -0.6322467,
                    -0.123980895,
                    -0.0860434,
                    -0.15886487,
                    -0.08243383,
                    -0.029566944,
                    -0.07579608,
                    -0.0005231795,
                    -0.00062552054,
                    -0.005968028,
                    -0.00022528353,
                    -3.5717305e-05,
                    -0.00023214132,
                    -0.0013284085,
                    -3.7386224e-05,
                    -0.00034226198,
                    -8.0580685e-06,
                    -0.0069443155,
                    -0.040379003,
                    -1.9765537e-06,
                    -0.0006422783,
                    -0.0066733044,
                    -0.00053957955,
                    -0.0005685613,
                    -0.012496957,
                    -0.0017326127,
                    -0.0024991427,
                    -0.0046464466,
                    -0.026214011,
                    -0.00030916795,
                    -0.0013361082,
                    -0.23628165,
                    -0.002907528,
                    -0.0019452574,
                    -0.0013094299,
                    -0.009665639,
                    -0.00057786715,
                    -0.00029223657,
                    -2.9581916,
                    -0.00024787875,
                    -0.12960553,
                    -0.0025003385,
                    -0.0020349612,
                    -0.013620056,
                    -0.00021944042,
                    -0.000323718,
                    -1.0296714,
                    -4.361666e-06,
                    -0.00083148497,
                    -0.0006181249,
                    -0.0030929784,
                    -0.0027282678,
                    -0.00012429406,
                    -0.00013025544,
                    -0.22319323,
                    -5.3477528e-05,
                    -0.00038089874,
                    -0.0007751142,
                    -0.63813704,
                    -2.138365,
                    -1.2192751
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\n": -0.084532
                    },
                    {
                        "   ": -0.12667267
                    },
                    {
                        " .": -0.08106035
                    },
                    {
                        "add": -0.02725143
                    },
                    {
                        "(\"": -0.0010708455
                    },
                    {
                        "equ": -0.64372665
                    },
                    {
                        "als": -5.979934e-05
                    },
                    {
                        "\")": -0.0019219066
                    },
                    {
                        "\n": -0.004506869
                    },
                    {
                        "   ": -0.13267349
                    },
                    {
                        " .": -0.029246219
                    },
                    {
                        "add": -0.00065468537
                    },
                    {
                        "(\"": -0.000757874
                    },
                    {
                        "to": -0.3904035
                    },
                    {
                        "String": -0.0003214502
                    },
                    {
                        "\")": -0.00083977694
                    },
                    {
                        "\n": -0.0032615997
                    },
                    {
                        "<|endoftext|>": -0.67321813
                    },
                    {
                        " .": -0.050273288
                    },
                    {
                        "add": -0.0011191785
                    },
                    {
                        "(\"": -0.0005609273
                    },
                    {
                        "final": -0.50847447
                    },
                    {
                        "Code": -0.045221537
                    },
                    {
                        "\")": -0.0030827546
                    },
                    {
                        "\n": -0.003413205
                    },
                    {
                        "   ": -0.016650818
                    },
                    {
                        " .": -0.02038185
                    },
                    {
                        "add": -0.048176188
                    },
                    {
                        "(\"": -0.00041291988
                    },
                    {
                        "get": -0.7059043
                    },
                    {
                        "Class": -0.0038809602
                    },
                    {
                        "\")": -0.0010188171
                    },
                    {
                        "\n": -0.009520185
                    },
                    {
                        "   ": -0.14985476
                    },
                    {
                        " .": -0.0839851
                    },
                    {
                        "add": -0.52730983
                    },
                    {
                        "(\"": -0.0032942507
                    },
                    {
                        "wait": -1.2106752
                    },
                    {
                        "\")": -0.018442156
                    },
                    {
                        "\n": -0.006017796
                    },
                    {
                        "   ": -0.067041904
                    },
                    {
                        " .": -0.1532191
                    },
                    {
                        "add": -0.0028668798
                    },
                    {
                        "(\"": -0.00043593463
                    },
                    {
                        "not": -0.44705853
                    },
                    {
                        "ify": -0.00023834205
                    },
                    {
                        "\")": -0.3254411
                    },
                    {
                        "\n": -0.0020990497
                    },
                    {
                        "   ": -0.040084943
                    },
                    {
                        " .": -0.010168116
                    },
                    {
                        "add": -0.0017785287
                    },
                    {
                        "(\"": -0.0003123885
                    },
                    {
                        "not": -0.3729995
                    },
                    {
                        "ify": -0.00031131558
                    },
                    {
                        "All": -0.0071544084
                    },
                    {
                        "\")": -0.002384063
                    },
                    {
                        "\n": -0.00479263
                    },
                    {
                        "   ": -0.025439983
                    },
                    {
                        " .": -0.033012733
                    },
                    {
                        "build": -0.16372058
                    },
                    {
                        "();": -0.004156486
                    },
                    {
                        "\n": -0.17627892
                    },
                    {
                        "\n": -0.26544297
                    },
                    {
                        "//": -0.20929007
                    },
                    {
                        " Scala": -1.241228
                    },
                    {
                        "ovy": -0.0033364121
                    },
                    {
                        "\n": -0.39567313
                    },
                    {
                        "private": -0.15668105
                    },
                    {
                        " static": -0.02987985
                    },
                    {
                        " final": -0.020820849
                    },
                    {
                        " Set": -0.027133653
                    },
                    {
                        "<": -0.0061082887
                    },
                    {
                        "String": -0.0028039962
                    },
                    {
                        ">": -0.00051983976
                    },
                    {
                        " CON": -0.021490457
                    },
                    {
                        "FIN": -0.00066780584
                    },
                    {
                        "ED": -8.423619e-05
                    },
                    {
                        "_": -0.0007863274
                    },
                    {
                        "R": -0.013742237
                    },
                    {
                        "OUT": -0.00015827699
                    },
                    {
                        "IN": -0.00065635337
                    },
                    {
                        "ES": -3.529076e-06
                    },
                    {
                        " =": -0.007148766
                    },
                    {
                        " Imm": -0.048440605
                    },
                    {
                        "utable": -5.1930627e-05
                    },
                    {
                        "Set": -0.0009178089
                    },
                    {
                        ".<": -0.015132709
                    },
                    {
                        "String": -0.0007288838
                    },
                    {
                        ">": -0.0008300526
                    },
                    {
                        " builder": -0.040093195
                    },
                    {
                        "()": -0.005287814
                    },
                    {
                        "\n": -0.004742682
                    },
                    {
                        "   ": -0.011473567
                    },
                    {
                        " .": -0.066346064
                    },
                    {
                        "add": -0.0005407735
                    },
                    {
                        "(\"": -0.002647344
                    },
                    {
                        "clone": -0.94296825
                    },
                    {
                        "\")": -0.0017427023
                    },
                    {
                        "\n": -0.0056231297
                    },
                    {
                        "   ": -0.0029103975
                    },
                    {
                        " .": -0.0368468
                    },
                    {
                        "add": -0.0006200332
                    },
                    {
                        "(\"": -0.0007075915
                    },
                    {
                        "wait": -0.34191912
                    },
                    {
                        "\")": -0.0023187622
                    },
                    {
                        "\n": -0.005346299
                    },
                    {
                        "   ": -0.0063898866
                    },
                    {
                        " .": -0.30080342
                    },
                    {
                        "add": -0.00052186626
                    },
                    {
                        "(\"": -0.0005314086
                    },
                    {
                        "not": -0.2352123
                    },
                    {
                        "ify": -0.0001086796
                    },
                    {
                        "\")": -0.0223481
                    },
                    {
                        "\n": -0.0068494915
                    },
                    {
                        "   ": -0.0041934163
                    },
                    {
                        " .": -0.02280729
                    },
                    {
                        "add": -0.000826832
                    },
                    {
                        "(\"": -0.00061836146
                    },
                    {
                        "equ": -0.27263647
                    },
                    {
                        "als": -1.1753544e-05
                    },
                    {
                        "\")": -0.0011565931
                    },
                    {
                        "\n": -0.0013479257
                    },
                    {
                        "   ": -0.0027729755
                    },
                    {
                        " .": -0.011518365
                    },
                    {
                        "add": -0.00015338662
                    },
                    {
                        "(\"": -0.00026361804
                    },
                    {
                        "to": -0.05975409
                    },
                    {
                        "String": -9.151261e-05
                    },
                    {
                        "\")": -0.0002502629
                    },
                    {
                        "\n": -0.0010886884
                    },
                    {
                        "   ": -0.52211154
                    },
                    {
                        " .": -0.027859226
                    },
                    {
                        "add": -0.0010843911
                    },
                    {
                        "(\"": -0.0006604102
                    },
                    {
                        "get": -0.7887164
                    },
                    {
                        "Code": -0.0015262233
                    },
                    {
                        "\")": -0.00039652258
                    },
                    {
                        "\n": -0.0015908738
                    },
                    {
                        "   ": -0.0017990109
                    },
                    {
                        " .": -0.01089854
                    },
                    {
                        "add": -0.011397359
                    },
                    {
                        "(\"": -0.00040224646
                    },
                    {
                        "get": -0.104500785
                    },
                    {
                        "Class": -0.018892756
                    },
                    {
                        "\")": -0.00063762726
                    },
                    {
                        "\n": -0.0023201955
                    },
                    {
                        "   ": -0.005777908
                    },
                    {
                        " .": -0.00728733
                    },
                    {
                        "add": -0.012114622
                    },
                    {
                        "(\"": -0.00044547606
                    },
                    {
                        "wait": -0.08077695
                    },
                    {
                        "\")": -0.0020402758
                    },
                    {
                        "\n": -0.00068194285
                    },
                    {
                        "   ": -0.0017154749
                    },
                    {
                        " .": -0.0051979376
                    },
                    {
                        "add": -0.00021884627
                    },
                    {
                        "(\"": -0.00013800588
                    },
                    {
                        "not": -0.01125756
                    },
                    {
                        "ify": -7.8038276e-05
                    },
                    {
                        "\")": -0.007306482
                    },
                    {
                        "\n": -0.0011670357
                    },
                    {
                        "   ": -0.092348516
                    },
                    {
                        " .": -0.008155093
                    },
                    {
                        "add": -0.0022623644
                    },
                    {
                        "(\"": -0.00022373382
                    },
                    {
                        "not": -0.01262081
                    },
                    {
                        "ify": -4.0126153e-05
                    },
                    {
                        "All": -0.0009271156
                    },
                    {
                        "\")": -0.0010268707
                    },
                    {
                        "\n": -0.0033056713
                    },
                    {
                        "   ": -0.0052100397
                    },
                    {
                        " .": -0.015690492
                    },
                    {
                        "build": -0.08695398
                    },
                    {
                        "();": -0.0029166755
                    },
                    {
                        "\n": -0.0644165
                    },
                    {
                        "\n": -0.051315743
                    },
                    {
                        "//": -0.015037348
                    },
                    {
                        " Scala": -0.6322467
                    },
                    {
                        "\n": -0.123980895
                    },
                    {
                        "private": -0.0860434
                    },
                    {
                        " static": -0.15886487
                    },
                    {
                        " final": -0.08243383
                    },
                    {
                        " Set": -0.029566944
                    },
                    {
                        "<": -0.07579608
                    },
                    {
                        "String": -0.0005231795
                    },
                    {
                        ">": -0.00062552054
                    },
                    {
                        " CON": -0.005968028
                    },
                    {
                        "FIN": -0.00022528353
                    },
                    {
                        "ED": -3.5717305e-05
                    },
                    {
                        "_": -0.00023214132
                    },
                    {
                        "R": -0.0013284085
                    },
                    {
                        "OUT": -3.7386224e-05
                    },
                    {
                        "IN": -0.00034226198
                    },
                    {
                        "ES": -8.0580685e-06
                    },
                    {
                        " =": -0.0069443155
                    },
                    {
                        " Imm": -0.040379003
                    },
                    {
                        "utable": -1.9765537e-06
                    },
                    {
                        "Set": -0.0006422783
                    },
                    {
                        ".<": -0.0066733044
                    },
                    {
                        "String": -0.00053957955
                    },
                    {
                        ">": -0.0005685613
                    },
                    {
                        " builder": -0.012496957
                    },
                    {
                        "()": -0.0017326127
                    },
                    {
                        "\n": -0.0024991427
                    },
                    {
                        "   ": -0.0046464466
                    },
                    {
                        " .": -0.026214011
                    },
                    {
                        "add": -0.00030916795
                    },
                    {
                        "(\"": -0.0013361082
                    },
                    {
                        "clone": -0.23628165
                    },
                    {
                        "\")": -0.002907528
                    },
                    {
                        "\n": -0.0019452574
                    },
                    {
                        "   ": -0.0013094299
                    },
                    {
                        " .": -0.009665639
                    },
                    {
                        "add": -0.00057786715
                    },
                    {
                        "(\"": -0.00029223657
                    },
                    {
                        "wait": -0.23926337
                    },
                    {
                        "ify": -0.00024787875
                    },
                    {
                        "\")": -0.12960553
                    },
                    {
                        "\n": -0.0025003385
                    },
                    {
                        "   ": -0.0020349612
                    },
                    {
                        " .": -0.013620056
                    },
                    {
                        "add": -0.00021944042
                    },
                    {
                        "(\"": -0.000323718
                    },
                    {
                        "equ": -1.0296714
                    },
                    {
                        "als": -4.361666e-06
                    },
                    {
                        "\")": -0.00083148497
                    },
                    {
                        "\n": -0.0006181249
                    },
                    {
                        "   ": -0.0030929784
                    },
                    {
                        " .": -0.0027282678
                    },
                    {
                        "add": -0.00012429406
                    },
                    {
                        "(\"": -0.00013025544
                    },
                    {
                        "to": -0.22319323
                    },
                    {
                        "String": -5.3477528e-05
                    },
                    {
                        "\")": -0.00038089874
                    },
                    {
                        "\n": -0.0007751142
                    },
                    {
                        "<|endoftext|>": -0.63813704
                    },
                    {
                        "package": -1.4641708
                    },
                    {
                        " React": -1.2192751
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    371,
                    375,
                    377,
                    378,
                    381,
                    383,
                    386,
                    388,
                    391,
                    396,
                    398,
                    399,
                    402,
                    404,
                    407,
                    409,
                    413,
                    415,
                    416,
                    419,
                    421,
                    424,
                    426,
                    429,
                    432,
                    434,
                    435,
                    438,
                    440,
                    443,
                    445,
                    448,
                    451,
                    454,
                    456,
                    457,
                    460,
                    462,
                    467,
                    470,
                    471,
                    472,
                    474,
                    478,
                    481,
                    482,
                    489,
                    496,
                    502,
                    506,
                    507,
                    513,
                    514,
                    518,
                    521,
                    523,
                    524,
                    525,
                    528,
                    530,
                    532,
                    534,
                    538,
                    544,
                    547,
                    549,
                    555,
                    556,
                    564,
                    566,
                    567,
                    570,
                    572,
                    575,
                    577,
                    582,
                    584,
                    585,
                    588,
                    590,
                    593,
                    595,
                    599,
                    601,
                    602,
                    605,
                    607,
                    610,
                    612,
                    615,
                    618,
                    620,
                    621,
                    624,
                    626,
                    629,
                    631,
                    634,
                    637,
                    639,
                    640,
                    643,
                    645,
                    648,
                    650,
                    652,
                    658,
                    660,
                    661,
                    664,
                    666,
                    669,
                    671,
                    675,
                    679,
                    681,
                    682,
                    685,
                    687,
                    690,
                    692,
                    695,
                    700,
                    702,
                    703,
                    706,
                    708,
                    711,
                    713,
                    717,
                    719,
                    720,
                    723,
                    725,
                    728,
                    730,
                    733,
                    736,
                    738,
                    739,
                    742,
                    744,
                    747,
                    749,
                    752,
                    755,
                    758,
                    760,
                    761,
                    764,
                    766,
                    771,
                    774,
                    775,
                    776,
                    778,
                    784,
                    785,
                    792,
                    799,
                    805,
                    809,
                    810,
                    816,
                    817,
                    821,
                    824,
                    826,
                    827,
                    828,
                    831,
                    833,
                    835,
                    837,
                    841,
                    847,
                    850,
                    852,
                    858,
                    859,
                    867,
                    869,
                    870,
                    873,
                    875,
                    878,
                    880,
                    885,
                    887,
                    888,
                    891,
                    893,
                    896,
                    898,
                    901,
                    904,
                    906,
                    907,
                    910,
                    912,
                    915,
                    917,
                    920,
                    923,
                    925,
                    926,
                    929,
                    931,
                    934,
                    936,
                    938,
                    944,
                    946,
                    947,
                    947,
                    947
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example"
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -0.40147743,
                    -0.084532,
                    -0.12667267,
                    -0.08106035,
                    -0.02725143,
                    -0.0010708455,
                    -0.64372665,
                    -5.979934e-05,
                    -0.0019219066,
                    -0.004506869,
                    -0.13267349,
                    -0.029246219,
                    -0.00065468537,
                    -0.000757874,
                    -1.7058474,
                    -0.0013442237,
                    -0.00068766857,
                    -0.0027569567,
                    -0.090157,
                    -0.023713605,
                    -0.0010497823,
                    -0.00046229383,
                    -0.8433836,
                    -0.0019108577,
                    -0.0005362389,
                    -0.0026363477,
                    -1.1511098,
                    -1.4624294,
                    -0.70914245,
                    -0.0014060009,
                    -2.1015406
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\n": -0.084532
                    },
                    {
                        "   ": -0.12667267
                    },
                    {
                        " .": -0.08106035
                    },
                    {
                        "add": -0.02725143
                    },
                    {
                        "(\"": -0.0010708455
                    },
                    {
                        "equ": -0.64372665
                    },
                    {
                        "als": -5.979934e-05
                    },
                    {
                        "\")": -0.0019219066
                    },
                    {
                        "\n": -0.004506869
                    },
                    {
                        "   ": -0.13267349
                    },
                    {
                        " .": -0.029246219
                    },
                    {
                        "add": -0.00065468537
                    },
                    {
                        "(\"": -0.000757874
                    },
                    {
                        "to": -0.3904035
                    },
                    {
                        "ize": -0.0013442237
                    },
                    {
                        "\")": -0.00068766857
                    },
                    {
                        "\n": -0.0027569567
                    },
                    {
                        "   ": -0.090157
                    },
                    {
                        " .": -0.023713605
                    },
                    {
                        "add": -0.0010497823
                    },
                    {
                        "(\"": -0.00046229383
                    },
                    {
                        "to": -0.6566104
                    },
                    {
                        "Class": -0.0019108577
                    },
                    {
                        "\")": -0.0005362389
                    },
                    {
                        "\n": -0.0026363477
                    },
                    {
                        "   ": -0.380972
                    },
                    {
                        "package": -1.4624294
                    },
                    {
                        " com": -0.70914245
                    },
                    {
                        ".": -0.0014060009
                    },
                    {
                        "example": -2.1015406
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    351,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    370,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " {",
                    " Component",
                    " }"
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -0.40147743,
                    -0.084532,
                    -0.12667267,
                    -0.08106035,
                    -0.02725143,
                    -0.0010708455,
                    -0.64372665,
                    -5.979934e-05,
                    -0.0019219066,
                    -0.004506869,
                    -0.13267349,
                    -0.029246219,
                    -0.00065468537,
                    -0.000757874,
                    -0.3904035,
                    -0.0003214502,
                    -0.00083977694,
                    -0.0032615997,
                    -0.67321813,
                    -2.143091,
                    -1.2558745,
                    -1.5670006,
                    -1.6327451
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\n": -0.084532
                    },
                    {
                        "   ": -0.12667267
                    },
                    {
                        " .": -0.08106035
                    },
                    {
                        "add": -0.02725143
                    },
                    {
                        "(\"": -0.0010708455
                    },
                    {
                        "equ": -0.64372665
                    },
                    {
                        "als": -5.979934e-05
                    },
                    {
                        "\")": -0.0019219066
                    },
                    {
                        "\n": -0.004506869
                    },
                    {
                        "   ": -0.13267349
                    },
                    {
                        " .": -0.029246219
                    },
                    {
                        "add": -0.00065468537
                    },
                    {
                        "(\"": -0.000757874
                    },
                    {
                        "to": -0.3904035
                    },
                    {
                        "String": -0.0003214502
                    },
                    {
                        "\")": -0.00083977694
                    },
                    {
                        "\n": -0.0032615997
                    },
                    {
                        "<|endoftext|>": -0.67321813
                    },
                    {
                        "package": -1.464834
                    },
                    {
                        " React": -1.2236966
                    },
                    {
                        " Component": -1.5670006
                    },
                    {
                        ",": -0.23611869
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example"
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -2.9676752,
                    -0.0031451164,
                    -0.0031286138,
                    -0.01383252,
                    -0.08303513,
                    -0.056504656,
                    -0.0019281176,
                    -0.0011468077,
                    -1.345191,
                    -0.0060609104,
                    -0.0015208486,
                    -0.0046529714,
                    -1.2068858,
                    -1.4647963,
                    -0.7090002,
                    -0.0013732346,
                    -2.098759
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ize": -0.0031451164
                    },
                    {
                        "\")": -0.0031286138
                    },
                    {
                        "\n": -0.01383252
                    },
                    {
                        "   ": -0.08303513
                    },
                    {
                        " .": -0.056504656
                    },
                    {
                        "add": -0.0019281176
                    },
                    {
                        "(\"": -0.0011468077
                    },
                    {
                        "equ": -0.99465466
                    },
                    {
                        "Class": -0.0060609104
                    },
                    {
                        "\")": -0.0015208486
                    },
                    {
                        "\n": -0.0046529714
                    },
                    {
                        "   ": -0.35758176
                    },
                    {
                        "package": -1.4647963
                    },
                    {
                        " com": -0.7090002
                    },
                    {
                        ".": -0.0013732346
                    },
                    {
                        "example": -2.098759
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    313,
                    316,
                    318,
                    319,
                    322,
                    324,
                    327,
                    329,
                    332,
                    337,
                    339,
                    340,
                    340,
                    340,
                    340,
                    340
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify()\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "()",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -2.447086,
                    -0.23460844,
                    -0.09771668,
                    -0.108083904,
                    -0.10677528,
                    -0.01742159,
                    -0.00075083325,
                    -0.6652972,
                    -5.6340414e-05,
                    -0.008303833,
                    -0.0041271583,
                    -0.18585105,
                    -0.03176738,
                    -0.0010360611,
                    -0.00082158216,
                    -0.42197016,
                    -0.00032753454,
                    -0.0049944264,
                    -0.0030079598,
                    -0.7493409,
                    -0.05319487,
                    -0.001217047,
                    -0.0006982875,
                    -0.46579003,
                    -0.0010513348,
                    -0.001950573,
                    -0.004991429,
                    -0.19016515,
                    -1.4643048,
                    -0.7087433,
                    -0.0014036149
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\")": -0.23460844
                    },
                    {
                        "\n": -0.09771668
                    },
                    {
                        "   ": -0.108083904
                    },
                    {
                        " .": -0.10677528
                    },
                    {
                        "add": -0.01742159
                    },
                    {
                        "(\"": -0.00075083325
                    },
                    {
                        "equ": -0.6652972
                    },
                    {
                        "als": -5.6340414e-05
                    },
                    {
                        "\")": -0.008303833
                    },
                    {
                        "\n": -0.0041271583
                    },
                    {
                        "   ": -0.18585105
                    },
                    {
                        " .": -0.03176738
                    },
                    {
                        "add": -0.0010360611
                    },
                    {
                        "(\"": -0.00082158216
                    },
                    {
                        "to": -0.42197016
                    },
                    {
                        "String": -0.00032753454
                    },
                    {
                        "\")": -0.0049944264
                    },
                    {
                        "\n": -0.0030079598
                    },
                    {
                        "<|endoftext|>": -0.6410417
                    },
                    {
                        " .": -0.05319487
                    },
                    {
                        "add": -0.001217047
                    },
                    {
                        "(\"": -0.0006982875
                    },
                    {
                        "final": -0.46579003
                    },
                    {
                        "ize": -0.0010513348
                    },
                    {
                        "\")": -0.001950573
                    },
                    {
                        "\n": -0.004991429
                    },
                    {
                        "<|endoftext|>": -0.19016515
                    },
                    {
                        "package": -1.4643048
                    },
                    {
                        " com": -0.7087433
                    },
                    {
                        ".": -0.0014036149
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    318,
                    319,
                    322,
                    324,
                    327,
                    329,
                    332,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    350,
                    356,
                    358,
                    359,
                    362,
                    364,
                    367,
                    369,
                    374,
                    377,
                    379,
                    380,
                    380,
                    380,
                    380
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\") \n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    " ",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -0.40147743,
                    -2.9619281,
                    -0.02506502,
                    -0.09979897,
                    -0.07153894,
                    -0.01988753,
                    -0.001006884,
                    -0.6971542,
                    -5.24084e-05,
                    -0.002068947,
                    -0.021601176,
                    -0.1496546,
                    -0.015245091,
                    -0.0010840317,
                    -0.00068516337,
                    -0.38715765,
                    -0.0002824577,
                    -0.00075655995,
                    -0.007781761,
                    -0.7301895,
                    -0.03582254,
                    -0.0010733526,
                    -0.0005168586,
                    -0.47479644,
                    -0.0011551618,
                    -0.0010559285,
                    -0.010595428,
                    -0.1717782,
                    -1.4690018,
                    -0.7080934,
                    -0.0013983622
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\n": -0.084532
                    },
                    {
                        "\n": -0.02506502
                    },
                    {
                        "   ": -0.09979897
                    },
                    {
                        " .": -0.07153894
                    },
                    {
                        "add": -0.01988753
                    },
                    {
                        "(\"": -0.001006884
                    },
                    {
                        "equ": -0.6971542
                    },
                    {
                        "als": -5.24084e-05
                    },
                    {
                        "\")": -0.002068947
                    },
                    {
                        "\n": -0.021601176
                    },
                    {
                        "   ": -0.1496546
                    },
                    {
                        " .": -0.015245091
                    },
                    {
                        "add": -0.0010840317
                    },
                    {
                        "(\"": -0.00068516337
                    },
                    {
                        "to": -0.38715765
                    },
                    {
                        "String": -0.0002824577
                    },
                    {
                        "\")": -0.00075655995
                    },
                    {
                        "\n": -0.007781761
                    },
                    {
                        "<|endoftext|>": -0.6585533
                    },
                    {
                        " .": -0.03582254
                    },
                    {
                        "add": -0.0010733526
                    },
                    {
                        "(\"": -0.0005168586
                    },
                    {
                        "final": -0.47479644
                    },
                    {
                        "ize": -0.0011551618
                    },
                    {
                        "\")": -0.0010559285
                    },
                    {
                        "\n": -0.010595428
                    },
                    {
                        "<|endoftext|>": -0.1717782
                    },
                    {
                        "package": -1.4690018
                    },
                    {
                        " com": -0.7080934
                    },
                    {
                        ".": -0.0013983622
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    331,
                    334,
                    336,
                    337,
                    340,
                    342,
                    345,
                    347,
                    349,
                    355,
                    357,
                    358,
                    361,
                    363,
                    366,
                    368,
                    373,
                    376,
                    378,
                    379,
                    379,
                    379,
                    379
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "bytes:\\xef",
                    "bytes:\\xbb",
                    "bytes:\\xbf",
                    "using"
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -1.7837212,
                    -7.56541e-05,
                    -0.0041109384,
                    -0.008595306,
                    -0.24588217,
                    -0.053290613,
                    -0.0006863573,
                    -0.00069172354,
                    -0.58120966,
                    -0.0004164971,
                    -0.0011366637,
                    -0.0037185757,
                    -0.6303529,
                    -2.5239604,
                    -2.6773841e-05,
                    -1.8841804e-07,
                    -0.29087132
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "als": -7.56541e-05
                    },
                    {
                        "\")": -0.0041109384
                    },
                    {
                        "\n": -0.008595306
                    },
                    {
                        "   ": -0.24588217
                    },
                    {
                        " .": -0.053290613
                    },
                    {
                        "add": -0.0006863573
                    },
                    {
                        "(\"": -0.00069172354
                    },
                    {
                        "to": -0.58120966
                    },
                    {
                        "String": -0.0004164971
                    },
                    {
                        "\")": -0.0011366637
                    },
                    {
                        "\n": -0.0037185757
                    },
                    {
                        "<|endoftext|>": -0.6303529
                    },
                    {
                        "package": -1.4674207
                    },
                    {
                        "bytes:\\xbb": -2.6773841e-05
                    },
                    {
                        "bytes:\\xbf": -1.8841804e-07
                    },
                    {
                        "using": -0.29087132
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    329,
                    335,
                    337,
                    338,
                    338,
                    338,
                    338,
                    338
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    /* BUG: \n     * .add(\"equals\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    "!/"
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -0.40147743,
                    -0.084532,
                    -0.12667267,
                    -2.7664564,
                    -0.30393785,
                    -0.0004253241,
                    -0.044856977,
                    -0.28118336,
                    -0.003274756,
                    -0.007092638,
                    -0.0043097828,
                    -0.049887013,
                    -0.0042016166,
                    -0.011827304,
                    -0.99417114,
                    -0.001047873,
                    -0.020154973,
                    -0.073483415,
                    -0.002773215,
                    -0.02902174,
                    -0.08917809,
                    -0.0018446904,
                    -0.008959873,
                    -0.15336847,
                    -0.0005012338,
                    -0.0020504312,
                    -0.00680178,
                    -0.015622079,
                    -0.008654765,
                    -0.0045424933,
                    -0.00024406594,
                    -0.0009956652,
                    -0.021176875,
                    -6.9573514e-05,
                    -0.0049223024,
                    -0.014053918,
                    -0.1538251,
                    -0.42831826,
                    -0.0033964585,
                    -0.00094053923,
                    -0.535894,
                    -0.0006215829,
                    -0.0014273111,
                    -0.004499445,
                    -0.39617038,
                    -0.4254339,
                    -0.001777454,
                    -0.0005604514,
                    -0.87213385,
                    -0.0020344828,
                    -0.001155999,
                    -0.0050182645,
                    -0.5918887,
                    -2.2663963,
                    -1.6339467
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\n": -0.084532
                    },
                    {
                        "   ": -0.12667267
                    },
                    {
                        " .": -0.08106035
                    },
                    {
                        " B": -0.30393785
                    },
                    {
                        "UG": -0.0004253241
                    },
                    {
                        ":": -0.044856977
                    },
                    {
                        " ": -0.28118336
                    },
                    {
                        "\n": -0.003274756
                    },
                    {
                        "    ": -0.007092638
                    },
                    {
                        " *": -0.0043097828
                    },
                    {
                        " .": -0.049887013
                    },
                    {
                        "add": -0.0042016166
                    },
                    {
                        "(\"": -0.011827304
                    },
                    {
                        "equ": -0.99417114
                    },
                    {
                        "als": -0.001047873
                    },
                    {
                        "\")": -0.020154973
                    },
                    {
                        "\n": -0.073483415
                    },
                    {
                        "    ": -0.002773215
                    },
                    {
                        " *": -0.02902174
                    },
                    {
                        " FIX": -0.08917809
                    },
                    {
                        "ED": -0.0018446904
                    },
                    {
                        ":": -0.008959873
                    },
                    {
                        " ": -0.15336847
                    },
                    {
                        "\n": -0.0005012338
                    },
                    {
                        "    ": -0.0020504312
                    },
                    {
                        " */": -0.00680178
                    },
                    {
                        "\n": -0.015622079
                    },
                    {
                        "   ": -0.008654765
                    },
                    {
                        " .": -0.0045424933
                    },
                    {
                        "add": -0.00024406594
                    },
                    {
                        "(\"": -0.0009956652
                    },
                    {
                        "equ": -0.021176875
                    },
                    {
                        "als": -6.9573514e-05
                    },
                    {
                        "\")": -0.0049223024
                    },
                    {
                        "\n": -0.014053918
                    },
                    {
                        "   ": -0.1538251
                    },
                    {
                        " .": -0.42831826
                    },
                    {
                        "add": -0.0033964585
                    },
                    {
                        "(\"": -0.00094053923
                    },
                    {
                        "to": -0.535894
                    },
                    {
                        "String": -0.0006215829
                    },
                    {
                        "\")": -0.0014273111
                    },
                    {
                        "\n": -0.004499445
                    },
                    {
                        "   ": -0.39617038
                    },
                    {
                        " .": -0.4254339
                    },
                    {
                        "add": -0.001777454
                    },
                    {
                        "(\"": -0.0005604514
                    },
                    {
                        "final": -0.87213385
                    },
                    {
                        "ize": -0.0020344828
                    },
                    {
                        "\")": -0.001155999
                    },
                    {
                        "\n": -0.0050182645
                    },
                    {
                        "<|endoftext|>": -0.5918887
                    },
                    {
                        "package": -1.4643178
                    },
                    {
                        "include": -1.101187
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    323,
                    325,
                    327,
                    328,
                    329,
                    330,
                    334,
                    336,
                    338,
                    341,
                    343,
                    346,
                    349,
                    351,
                    352,
                    356,
                    358,
                    362,
                    364,
                    365,
                    366,
                    367,
                    371,
                    374,
                    375,
                    378,
                    380,
                    383,
                    385,
                    388,
                    391,
                    393,
                    394,
                    397,
                    399,
                    402,
                    404,
                    406,
                    412,
                    414,
                    415,
                    418,
                    420,
                    423,
                    425,
                    430,
                    433,
                    435,
                    436,
                    436,
                    436
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example"
                ],
                "token_logprobs": [
                    -0.0030305597,
                    -0.092364274,
                    -0.034298696,
                    -0.008868524,
                    -0.009254971,
                    -0.6691324,
                    -0.011405257,
                    -0.40147743,
                    -0.084532,
                    -0.12667267,
                    -0.08106035,
                    -0.02725143,
                    -0.0010708455,
                    -0.64372665,
                    -5.979934e-05,
                    -0.0019219066,
                    -0.004506869,
                    -0.13267349,
                    -0.029246219,
                    -0.00065468537,
                    -0.000757874,
                    -0.3904035,
                    -0.0003214502,
                    -0.00083977694,
                    -0.0032615997,
                    -0.67321813,
                    -1.464834,
                    -0.70850503,
                    -0.0013941242,
                    -2.1008537
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030305597
                    },
                    {
                        "   ": -0.092364274
                    },
                    {
                        " .": -0.034298696
                    },
                    {
                        "add": -0.008868524
                    },
                    {
                        "(\"": -0.009254971
                    },
                    {
                        "not": -0.6691324
                    },
                    {
                        "ify": -0.011405257
                    },
                    {
                        "\")": -0.40147743
                    },
                    {
                        "\n": -0.084532
                    },
                    {
                        "   ": -0.12667267
                    },
                    {
                        " .": -0.08106035
                    },
                    {
                        "add": -0.02725143
                    },
                    {
                        "(\"": -0.0010708455
                    },
                    {
                        "equ": -0.64372665
                    },
                    {
                        "als": -5.979934e-05
                    },
                    {
                        "\")": -0.0019219066
                    },
                    {
                        "\n": -0.004506869
                    },
                    {
                        "   ": -0.13267349
                    },
                    {
                        " .": -0.029246219
                    },
                    {
                        "add": -0.00065468537
                    },
                    {
                        "(\"": -0.000757874
                    },
                    {
                        "to": -0.3904035
                    },
                    {
                        "String": -0.0003214502
                    },
                    {
                        "\")": -0.00083977694
                    },
                    {
                        "\n": -0.0032615997
                    },
                    {
                        "<|endoftext|>": -0.67321813
                    },
                    {
                        "package": -1.464834
                    },
                    {
                        " com": -0.70850503
                    },
                    {
                        ".": -0.0013941242
                    },
                    {
                        "example": -2.1008537
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 89,
        "completion_tokens": 512,
        "total_tokens": 601
    },
    "validation_result": [
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .build();\n\n// Groovy\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .build();\n\n// Scala\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .build();\n\n// Groovy\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .build();\n\n// Scala\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "test_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "test_success",
            "translated": "    .add(\"finalize\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"notify()\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify()\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"notify\") \n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\") \n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"equals\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    /* BUG: \n     * .add(\"equals\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\")\n    /* BUG: \n     * .add(\"equals\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n"
        }
    ]
}