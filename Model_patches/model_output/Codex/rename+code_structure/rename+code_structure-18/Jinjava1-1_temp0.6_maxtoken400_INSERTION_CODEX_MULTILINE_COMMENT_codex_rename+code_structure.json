{
    "id": "cmpl-6loVyjVCu3LKKtcfQl8AgFT6S6RfV",
    "object": "text_completion",
    "created": 1676853614,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"wait\")\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    "."
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -2.4898038,
                    -0.0017861723,
                    -0.002904241,
                    -0.00780543,
                    -0.19375336,
                    -0.06172497,
                    -0.000524134,
                    -0.0009975744,
                    -0.36661303,
                    -6.850158e-05,
                    -0.0020474435,
                    -0.0043345657,
                    -0.84295475,
                    -0.07857323,
                    -0.00084645924,
                    -0.0009678652,
                    -0.7021577,
                    -0.0043904814,
                    -0.0006610081,
                    -0.0044373563,
                    -0.88618666,
                    -0.09826765,
                    -0.00091721094,
                    -0.0012383496,
                    -1.9005716,
                    -0.050742302,
                    -0.010359375,
                    -0.63235664,
                    -0.13111408,
                    -0.0004170931,
                    -0.00064657355,
                    -1.480002,
                    -0.00858755,
                    -0.0058659804,
                    -0.73837805,
                    -1.4649122,
                    -0.708689,
                    -0.0014125668,
                    -2.095126,
                    -0.010208943
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "String": -0.0017861723
                    },
                    {
                        "\")": -0.002904241
                    },
                    {
                        "\n": -0.00780543
                    },
                    {
                        "   ": -0.19375336
                    },
                    {
                        " .": -0.06172497
                    },
                    {
                        "add": -0.000524134
                    },
                    {
                        "(\"": -0.0009975744
                    },
                    {
                        "equ": -0.36661303
                    },
                    {
                        "als": -6.850158e-05
                    },
                    {
                        "\")": -0.0020474435
                    },
                    {
                        "\n": -0.0043345657
                    },
                    {
                        "<|endoftext|>": -0.5645524
                    },
                    {
                        " .": -0.07857323
                    },
                    {
                        "add": -0.00084645924
                    },
                    {
                        "(\"": -0.0009678652
                    },
                    {
                        "get": -0.7021577
                    },
                    {
                        "Class": -0.0043904814
                    },
                    {
                        "\")": -0.0006610081
                    },
                    {
                        "\n": -0.0044373563
                    },
                    {
                        "<|endoftext|>": -0.5329972
                    },
                    {
                        " .": -0.09826765
                    },
                    {
                        "add": -0.00091721094
                    },
                    {
                        "(\"": -0.0012383496
                    },
                    {
                        "hash": -0.539092
                    },
                    {
                        "\")": -0.050742302
                    },
                    {
                        "\n": -0.010359375
                    },
                    {
                        "   ": -0.63235664
                    },
                    {
                        " .": -0.13111408
                    },
                    {
                        "add": -0.0004170931
                    },
                    {
                        "(\"": -0.00064657355
                    },
                    {
                        "hash": -0.7938564
                    },
                    {
                        "\")": -0.00858755
                    },
                    {
                        "\n": -0.0058659804
                    },
                    {
                        "   ": -0.6519731
                    },
                    {
                        "package": -1.4649122
                    },
                    {
                        " com": -0.708689
                    },
                    {
                        ".": -0.0014125668
                    },
                    {
                        "example": -2.095126
                    },
                    {
                        ".": -0.010208943
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    310,
                    316,
                    318,
                    319,
                    322,
                    324,
                    327,
                    329,
                    332,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    356,
                    358,
                    359,
                    362,
                    364,
                    367,
                    369,
                    373,
                    375,
                    376,
                    379,
                    381,
                    384,
                    386,
                    390,
                    392,
                    393,
                    393,
                    393,
                    393,
                    393,
                    393
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Java\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"equals\")\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Java",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -0.6892133,
                    -0.011825194,
                    -0.4264719,
                    -0.08404351,
                    -0.117576204,
                    -0.080940455,
                    -0.027837776,
                    -0.0011317086,
                    -2.6847792,
                    -0.0018287484,
                    -0.0015486083,
                    -0.007297475,
                    -0.087320045,
                    -0.044862214,
                    -0.0046298592,
                    -0.0009917896,
                    -1.3803742,
                    -0.008019836,
                    -0.0013375415,
                    -0.004259918,
                    -0.326556,
                    -0.04712725,
                    -0.0010936997,
                    -0.0010609428,
                    -0.49407718,
                    -5.9201422e-05,
                    -0.0015308762,
                    -0.003611549,
                    -0.13046554,
                    -0.022233577,
                    -0.00088553247,
                    -0.00044380713,
                    -2.3190682,
                    -0.024923421,
                    -0.0032195016,
                    -0.0021670857,
                    -0.007734188,
                    -0.00940243,
                    -0.0005418436,
                    -0.00026683856,
                    -0.8861638,
                    -0.0002818626,
                    -0.00968207,
                    -0.0025664906,
                    -0.003196957,
                    -0.0035632153,
                    -0.016430845,
                    -0.06772631,
                    -0.005752551,
                    -0.1685371,
                    -0.19561349,
                    -0.08477092,
                    -2.1963062,
                    -1.5793167,
                    -0.23832448,
                    -0.04044715,
                    -0.019114792,
                    -0.069049306,
                    -0.004607044,
                    -0.020705955,
                    -0.0008892307,
                    -0.031190801,
                    -0.0016096797,
                    -0.00018343095,
                    -0.00081692834,
                    -0.02017182,
                    -0.00020883085,
                    -0.0019811485,
                    -8.924483e-05,
                    -0.021128537,
                    -0.08257196,
                    -9.0558e-05,
                    -0.0041071074,
                    -0.04463937,
                    -0.004537404,
                    -0.0005845466,
                    -0.0726105,
                    -0.015478784,
                    -0.007090176,
                    -0.015349794,
                    -0.062345214,
                    -0.0011659628,
                    -0.011909758,
                    -0.09173323,
                    -0.007969065,
                    -0.0037119347,
                    -0.0021220464,
                    -0.0157883,
                    -0.0007918175,
                    -0.0010435778,
                    -0.009840366,
                    -0.0037705074,
                    -0.009248353,
                    -0.013089569,
                    -0.5954938,
                    -0.0075394693,
                    -0.006550005,
                    -0.09725561,
                    -0.00070365384,
                    -0.028546624,
                    -0.023396093,
                    -0.0071213893,
                    -0.07010448,
                    -0.0045446493,
                    -0.0009939353,
                    -1.7956805,
                    -0.0014948226,
                    -0.11706514,
                    -0.004160314,
                    -0.01359196,
                    -0.0054489537,
                    -0.023077771,
                    -0.03707991,
                    -0.0004256799,
                    -0.035806354,
                    -8.9960085e-05,
                    -0.0008858901,
                    -0.0017527346,
                    -0.0008431185,
                    -0.0099992305,
                    -0.0044112536,
                    -0.00028722888,
                    -0.012607831,
                    -0.00016662253,
                    -0.0003372524,
                    -0.0011509847,
                    -0.0020709764,
                    -0.005983199,
                    -0.0018590828,
                    -0.00027554267,
                    -0.008009442,
                    -9.251094e-06,
                    -0.00036515848,
                    -0.0011910858,
                    -0.18639313,
                    -1.464497
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "ify": -0.011825194
                    },
                    {
                        "\")": -0.4264719
                    },
                    {
                        "\n": -0.08404351
                    },
                    {
                        "   ": -0.117576204
                    },
                    {
                        " .": -0.080940455
                    },
                    {
                        "add": -0.027837776
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6458606
                    },
                    {
                        "ize": -0.0018287484
                    },
                    {
                        "\")": -0.0015486083
                    },
                    {
                        "\n": -0.007297475
                    },
                    {
                        "   ": -0.087320045
                    },
                    {
                        " .": -0.044862214
                    },
                    {
                        "add": -0.0046298592
                    },
                    {
                        "(\"": -0.0009917896
                    },
                    {
                        "equ": -0.910806
                    },
                    {
                        "Class": -0.008019836
                    },
                    {
                        "\")": -0.0013375415
                    },
                    {
                        "\n": -0.004259918
                    },
                    {
                        "   ": -0.326556
                    },
                    {
                        " .": -0.04712725
                    },
                    {
                        "add": -0.0010936997
                    },
                    {
                        "(\"": -0.0010609428
                    },
                    {
                        "equ": -0.49407718
                    },
                    {
                        "als": -5.9201422e-05
                    },
                    {
                        "\")": -0.0015308762
                    },
                    {
                        "\n": -0.003611549
                    },
                    {
                        "   ": -0.13046554
                    },
                    {
                        " .": -0.022233577
                    },
                    {
                        "add": -0.00088553247
                    },
                    {
                        "(\"": -0.00044380713
                    },
                    {
                        "to": -0.14063564
                    },
                    {
                        "Code": -0.024923421
                    },
                    {
                        "\")": -0.0032195016
                    },
                    {
                        "\n": -0.0021670857
                    },
                    {
                        "   ": -0.007734188
                    },
                    {
                        " .": -0.00940243
                    },
                    {
                        "add": -0.0005418436
                    },
                    {
                        "(\"": -0.00026683856
                    },
                    {
                        "to": -0.59136194
                    },
                    {
                        "ify": -0.0002818626
                    },
                    {
                        "All": -0.00968207
                    },
                    {
                        "\")": -0.0025664906
                    },
                    {
                        "\n": -0.003196957
                    },
                    {
                        "   ": -0.0035632153
                    },
                    {
                        " .": -0.016430845
                    },
                    {
                        "build": -0.06772631
                    },
                    {
                        "();": -0.005752551
                    },
                    {
                        "\n": -0.1685371
                    },
                    {
                        "\n": -0.19561349
                    },
                    {
                        "//": -0.08477092
                    },
                    {
                        " Scala": -1.3526791
                    },
                    {
                        " ": -1.3647544
                    },
                    {
                        "private": -0.23832448
                    },
                    {
                        " static": -0.04044715
                    },
                    {
                        " final": -0.019114792
                    },
                    {
                        " Set": -0.069049306
                    },
                    {
                        "<": -0.004607044
                    },
                    {
                        "String": -0.020705955
                    },
                    {
                        ">": -0.0008892307
                    },
                    {
                        " CON": -0.031190801
                    },
                    {
                        "FIN": -0.0016096797
                    },
                    {
                        "ED": -0.00018343095
                    },
                    {
                        "_": -0.00081692834
                    },
                    {
                        "R": -0.02017182
                    },
                    {
                        "OUT": -0.00020883085
                    },
                    {
                        "IN": -0.0019811485
                    },
                    {
                        "ES": -8.924483e-05
                    },
                    {
                        " =": -0.021128537
                    },
                    {
                        " Imm": -0.08257196
                    },
                    {
                        "utable": -9.0558e-05
                    },
                    {
                        "Set": -0.0041071074
                    },
                    {
                        ".<": -0.04463937
                    },
                    {
                        "String": -0.004537404
                    },
                    {
                        ">": -0.0005845466
                    },
                    {
                        " builder": -0.0726105
                    },
                    {
                        "()": -0.015478784
                    },
                    {
                        "\n": -0.007090176
                    },
                    {
                        "   ": -0.015349794
                    },
                    {
                        " .": -0.062345214
                    },
                    {
                        "add": -0.0011659628
                    },
                    {
                        "(\"": -0.011909758
                    },
                    {
                        "clone": -0.09173323
                    },
                    {
                        "\")": -0.007969065
                    },
                    {
                        "\n": -0.0037119347
                    },
                    {
                        "   ": -0.0021220464
                    },
                    {
                        " .": -0.0157883
                    },
                    {
                        "add": -0.0007918175
                    },
                    {
                        "(\"": -0.0010435778
                    },
                    {
                        "wait": -0.009840366
                    },
                    {
                        "\")": -0.0037705074
                    },
                    {
                        "\n": -0.009248353
                    },
                    {
                        "   ": -0.013089569
                    },
                    {
                        " .": -0.5954938
                    },
                    {
                        "add": -0.0075394693
                    },
                    {
                        "(\"": -0.006550005
                    },
                    {
                        "not": -0.09725561
                    },
                    {
                        "ify": -0.00070365384
                    },
                    {
                        "\")": -0.028546624
                    },
                    {
                        "\n": -0.023396093
                    },
                    {
                        "   ": -0.0071213893
                    },
                    {
                        " .": -0.07010448
                    },
                    {
                        "add": -0.0045446493
                    },
                    {
                        "(\"": -0.0009939353
                    },
                    {
                        "final": -0.22925808
                    },
                    {
                        "ify": -0.0014948226
                    },
                    {
                        "All": -0.11706514
                    },
                    {
                        "\")": -0.004160314
                    },
                    {
                        "\n": -0.01359196
                    },
                    {
                        "   ": -0.0054489537
                    },
                    {
                        " .": -0.023077771
                    },
                    {
                        "add": -0.03707991
                    },
                    {
                        "(\"": -0.0004256799
                    },
                    {
                        "final": -0.035806354
                    },
                    {
                        "ize": -8.9960085e-05
                    },
                    {
                        "\")": -0.0008858901
                    },
                    {
                        "\n": -0.0017527346
                    },
                    {
                        "   ": -0.0008431185
                    },
                    {
                        " .": -0.0099992305
                    },
                    {
                        "add": -0.0044112536
                    },
                    {
                        "(\"": -0.00028722888
                    },
                    {
                        "get": -0.012607831
                    },
                    {
                        "Class": -0.00016662253
                    },
                    {
                        "\")": -0.0003372524
                    },
                    {
                        "\n": -0.0011509847
                    },
                    {
                        "   ": -0.0020709764
                    },
                    {
                        " .": -0.005983199
                    },
                    {
                        "add": -0.0018590828
                    },
                    {
                        "(\"": -0.00027554267
                    },
                    {
                        "equ": -0.008009442
                    },
                    {
                        "als": -9.251094e-06
                    },
                    {
                        "\")": -0.00036515848
                    },
                    {
                        "\n": -0.0011910858
                    },
                    {
                        "<|endoftext|>": -0.18639313
                    },
                    {
                        "package": -1.464497
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    332,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    356,
                    358,
                    359,
                    362,
                    364,
                    367,
                    369,
                    372,
                    375,
                    377,
                    378,
                    381,
                    383,
                    386,
                    388,
                    392,
                    396,
                    398,
                    399,
                    402,
                    404,
                    407,
                    409,
                    412,
                    415,
                    418,
                    420,
                    421,
                    424,
                    426,
                    431,
                    434,
                    435,
                    436,
                    438,
                    443,
                    444,
                    451,
                    458,
                    464,
                    468,
                    469,
                    475,
                    476,
                    480,
                    483,
                    485,
                    486,
                    487,
                    490,
                    492,
                    494,
                    496,
                    500,
                    506,
                    509,
                    511,
                    517,
                    518,
                    526,
                    528,
                    529,
                    532,
                    534,
                    537,
                    539,
                    544,
                    546,
                    547,
                    550,
                    552,
                    555,
                    557,
                    561,
                    563,
                    564,
                    567,
                    569,
                    572,
                    574,
                    577,
                    580,
                    582,
                    583,
                    586,
                    588,
                    591,
                    593,
                    596,
                    599,
                    602,
                    604,
                    605,
                    608,
                    610,
                    613,
                    615,
                    620,
                    623,
                    625,
                    626,
                    629,
                    631,
                    634,
                    636,
                    639,
                    644,
                    646,
                    647,
                    650,
                    652,
                    655,
                    657,
                    660,
                    663,
                    665,
                    666,
                    666
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Groovy\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Scala\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n\n",
                    "\n",
                    "//",
                    " Gro",
                    "ovy",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n\n",
                    "\n",
                    "//",
                    " Scala",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "l"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -0.6892133,
                    -0.011825194,
                    -0.4264719,
                    -0.08404351,
                    -0.117576204,
                    -0.080940455,
                    -0.027837776,
                    -0.0011317086,
                    -0.6458606,
                    -6.158372e-05,
                    -0.0019595276,
                    -0.004618002,
                    -0.15143746,
                    -0.029572038,
                    -0.00086781447,
                    -0.0007811977,
                    -3.5090067,
                    -0.04956395,
                    -0.003777507,
                    -0.004024818,
                    -0.017405093,
                    -0.019520292,
                    -0.030225845,
                    -0.00036980762,
                    -1.1302902,
                    -0.00027625792,
                    -0.010134396,
                    -0.0026404113,
                    -0.003170231,
                    -0.004013684,
                    -0.01942232,
                    -0.11249456,
                    -0.004359829,
                    -1.8277715,
                    -0.13578318,
                    -0.27484676,
                    -2.390501,
                    -0.0026598957,
                    -0.4303371,
                    -0.2690122,
                    -0.035994235,
                    -0.026976144,
                    -0.033474628,
                    -0.012381324,
                    -0.0028306555,
                    -0.00019654672,
                    -0.008877846,
                    -0.00045752362,
                    -3.881579e-05,
                    -0.00057691254,
                    -0.0044107744,
                    -7.291136e-05,
                    -0.00030809414,
                    -1.9028084e-05,
                    -0.0038088579,
                    -0.20820434,
                    -5.0500123e-05,
                    -0.001350492,
                    -0.060929615,
                    -0.0016264562,
                    -0.00031775475,
                    -0.037046697,
                    -0.011468622,
                    -0.0045573455,
                    -0.010221952,
                    -0.029275494,
                    -0.0009045636,
                    -0.025168253,
                    -0.050288394,
                    -0.0066189407,
                    -0.0023503676,
                    -0.0011676336,
                    -0.011299755,
                    -0.0003059484,
                    -0.001818059,
                    -0.009075891,
                    -0.0022162457,
                    -0.0074060354,
                    -0.013165301,
                    -0.7604925,
                    -0.046008978,
                    -0.000111778085,
                    -0.018025443,
                    -0.15582705,
                    -0.0021140417,
                    -0.008131237,
                    -0.003438145,
                    -0.033273354,
                    -0.0013449409,
                    -0.0041255406,
                    -0.011188241,
                    -0.0006880262,
                    -0.0075706993,
                    -0.019334022,
                    -0.0013309766,
                    -0.017512146,
                    -0.011359858,
                    -0.0011788532,
                    -0.0037011055,
                    -0.047040783,
                    -0.00036205718,
                    -0.002468608,
                    -0.0071554887,
                    -0.007562292,
                    -0.0050922506,
                    -0.007153928,
                    -0.00059772714,
                    -0.0021519708,
                    -0.0056873877,
                    -0.00018343095,
                    -0.0043454,
                    -0.004916852,
                    -0.0019653211,
                    -0.005402269,
                    -0.0005732152,
                    -0.00047362337,
                    -0.009751466,
                    -2.0098154e-05,
                    -0.00096034666,
                    -0.0013177866,
                    -1.4679738,
                    -0.015802592,
                    -0.0030180656,
                    -0.0005591391,
                    -0.015736874,
                    -0.00031417754,
                    -0.00066053035,
                    -0.00064740895,
                    -0.00081144,
                    -0.003651392,
                    -0.0008873215,
                    -0.00020739941,
                    -0.002505714,
                    -3.4642555e-05,
                    -0.0002850831,
                    -0.00065468537,
                    -0.00095294917,
                    -0.0007877598,
                    -0.0013627865,
                    -0.001760915,
                    -0.0063513764,
                    -0.3067937,
                    -0.016992142,
                    -0.051816065,
                    -0.5187338,
                    -0.15254274,
                    -0.07467954,
                    -0.10476439,
                    -0.04931557,
                    -0.014381662,
                    -0.06900537,
                    -0.0017696341,
                    -0.0007509534,
                    -0.0018668463,
                    -0.00010522067,
                    -5.4364154e-06,
                    -0.00034190435,
                    -0.00014611395,
                    -2.7133337e-05,
                    -5.0856816e-05,
                    -2.4543265e-06,
                    -0.002365124,
                    -0.006630101,
                    -8.5358415e-06,
                    -0.0001427761,
                    -0.007458399,
                    -0.0004841794,
                    -0.00024394579,
                    -0.0051180134,
                    -0.00197201,
                    -0.00091279834,
                    -0.0017189985,
                    -0.0049378173,
                    -0.00028877953,
                    -0.00038173224,
                    -0.0017865307,
                    -0.00045108353,
                    -0.00035156214,
                    -0.00021360109,
                    -0.0015086123,
                    -5.037998e-05,
                    -5.6102934e-05,
                    -0.000812037,
                    -0.00026361804,
                    -0.0012499288,
                    -0.002340508,
                    -0.030450096,
                    -0.00228925,
                    -8.5358415e-06,
                    -0.0014195521,
                    -0.0149055105,
                    -0.00016840879,
                    -0.0010933421,
                    -0.00044154216,
                    -0.0024966944,
                    -0.00016030073,
                    -0.00024251342,
                    -0.0004317614,
                    -7.028876e-05,
                    -0.00091995555,
                    -0.0016265763,
                    -0.00023786427,
                    -0.0026741792,
                    -0.0010202485,
                    -0.00010045139,
                    -0.000506004,
                    -0.0056023896,
                    -5.7177684e-05,
                    -0.0004950321,
                    -0.000970669,
                    -0.0016855649,
                    -0.00099489,
                    -0.0013631459,
                    -0.00015505555,
                    -0.00016447584,
                    -0.0005417281,
                    -4.5135734e-05,
                    -0.0012652673,
                    -0.00080404343,
                    -0.0006236113,
                    -0.00079807744,
                    -9.3535404e-05,
                    -5.8130416e-05,
                    -0.0014858679,
                    -8.5358415e-06,
                    -0.0002131233,
                    -0.00043414652,
                    -0.25202835,
                    -1.4658257,
                    -0.71526134,
                    -0.0014061212,
                    -4.376885
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "ify": -0.011825194
                    },
                    {
                        "\")": -0.4264719
                    },
                    {
                        "\n": -0.08404351
                    },
                    {
                        "   ": -0.117576204
                    },
                    {
                        " .": -0.080940455
                    },
                    {
                        "add": -0.027837776
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6458606
                    },
                    {
                        "als": -6.158372e-05
                    },
                    {
                        "\")": -0.0019595276
                    },
                    {
                        "\n": -0.004618002
                    },
                    {
                        "   ": -0.15143746
                    },
                    {
                        " .": -0.029572038
                    },
                    {
                        "add": -0.00086781447
                    },
                    {
                        "(\"": -0.0007811977
                    },
                    {
                        "to": -0.36202466
                    },
                    {
                        "Code": -0.04956395
                    },
                    {
                        "\")": -0.003777507
                    },
                    {
                        "\n": -0.004024818
                    },
                    {
                        "   ": -0.017405093
                    },
                    {
                        " .": -0.019520292
                    },
                    {
                        "add": -0.030225845
                    },
                    {
                        "(\"": -0.00036980762
                    },
                    {
                        "to": -0.6084529
                    },
                    {
                        "ify": -0.00027625792
                    },
                    {
                        "All": -0.010134396
                    },
                    {
                        "\")": -0.0026404113
                    },
                    {
                        "\n": -0.003170231
                    },
                    {
                        "   ": -0.004013684
                    },
                    {
                        " .": -0.01942232
                    },
                    {
                        "build": -0.11249456
                    },
                    {
                        "();": -0.004359829
                    },
                    {
                        "\n": -0.19717364
                    },
                    {
                        "\n": -0.13578318
                    },
                    {
                        "//": -0.27484676
                    },
                    {
                        " Kot": -1.9215448
                    },
                    {
                        "ovy": -0.0026598957
                    },
                    {
                        "\n": -0.4303371
                    },
                    {
                        "private": -0.2690122
                    },
                    {
                        " static": -0.035994235
                    },
                    {
                        " final": -0.026976144
                    },
                    {
                        " Set": -0.033474628
                    },
                    {
                        "<": -0.012381324
                    },
                    {
                        "String": -0.0028306555
                    },
                    {
                        ">": -0.00019654672
                    },
                    {
                        " CON": -0.008877846
                    },
                    {
                        "FIN": -0.00045752362
                    },
                    {
                        "ED": -3.881579e-05
                    },
                    {
                        "_": -0.00057691254
                    },
                    {
                        "R": -0.0044107744
                    },
                    {
                        "OUT": -7.291136e-05
                    },
                    {
                        "IN": -0.00030809414
                    },
                    {
                        "ES": -1.9028084e-05
                    },
                    {
                        " =": -0.0038088579
                    },
                    {
                        " Imm": -0.20820434
                    },
                    {
                        "utable": -5.0500123e-05
                    },
                    {
                        "Set": -0.001350492
                    },
                    {
                        ".<": -0.060929615
                    },
                    {
                        "String": -0.0016264562
                    },
                    {
                        ">": -0.00031775475
                    },
                    {
                        " builder": -0.037046697
                    },
                    {
                        "()": -0.011468622
                    },
                    {
                        "\n": -0.0045573455
                    },
                    {
                        "   ": -0.010221952
                    },
                    {
                        " .": -0.029275494
                    },
                    {
                        "add": -0.0009045636
                    },
                    {
                        "(\"": -0.025168253
                    },
                    {
                        "clone": -0.050288394
                    },
                    {
                        "\")": -0.0066189407
                    },
                    {
                        "\n": -0.0023503676
                    },
                    {
                        "   ": -0.0011676336
                    },
                    {
                        " .": -0.011299755
                    },
                    {
                        "add": -0.0003059484
                    },
                    {
                        "(\"": -0.001818059
                    },
                    {
                        "wait": -0.009075891
                    },
                    {
                        "\")": -0.0022162457
                    },
                    {
                        "\n": -0.0074060354
                    },
                    {
                        "   ": -0.013165301
                    },
                    {
                        " /*": -0.7604925
                    },
                    {
                        " B": -0.046008978
                    },
                    {
                        "UG": -0.000111778085
                    },
                    {
                        ":": -0.018025443
                    },
                    {
                        " ": -0.15582705
                    },
                    {
                        "\n": -0.0021140417
                    },
                    {
                        "    ": -0.008131237
                    },
                    {
                        " *": -0.003438145
                    },
                    {
                        " .": -0.033273354
                    },
                    {
                        "add": -0.0013449409
                    },
                    {
                        "(\"": -0.0041255406
                    },
                    {
                        "not": -0.011188241
                    },
                    {
                        "ify": -0.0006880262
                    },
                    {
                        "\")": -0.0075706993
                    },
                    {
                        "\n": -0.019334022
                    },
                    {
                        "    ": -0.0013309766
                    },
                    {
                        " *": -0.017512146
                    },
                    {
                        " FIX": -0.011359858
                    },
                    {
                        "ED": -0.0011788532
                    },
                    {
                        ":": -0.0037011055
                    },
                    {
                        " ": -0.047040783
                    },
                    {
                        "\n": -0.00036205718
                    },
                    {
                        "    ": -0.002468608
                    },
                    {
                        " */": -0.0071554887
                    },
                    {
                        "\n": -0.007562292
                    },
                    {
                        "   ": -0.0050922506
                    },
                    {
                        " .": -0.007153928
                    },
                    {
                        "add": -0.00059772714
                    },
                    {
                        "(\"": -0.0021519708
                    },
                    {
                        "not": -0.0056873877
                    },
                    {
                        "ify": -0.00018343095
                    },
                    {
                        "\")": -0.0043454
                    },
                    {
                        "\n": -0.004916852
                    },
                    {
                        "   ": -0.0019653211
                    },
                    {
                        " .": -0.005402269
                    },
                    {
                        "add": -0.0005732152
                    },
                    {
                        "(\"": -0.00047362337
                    },
                    {
                        "equ": -0.009751466
                    },
                    {
                        "als": -2.0098154e-05
                    },
                    {
                        "\")": -0.00096034666
                    },
                    {
                        "\n": -0.0013177866
                    },
                    {
                        "<|endoftext|>": -0.26283476
                    },
                    {
                        " .": -0.015802592
                    },
                    {
                        "add": -0.0030180656
                    },
                    {
                        "(\"": -0.0005591391
                    },
                    {
                        "hash": -0.015736874
                    },
                    {
                        "Code": -0.00031417754
                    },
                    {
                        "\")": -0.00066053035
                    },
                    {
                        "\n": -0.00064740895
                    },
                    {
                        "   ": -0.00081144
                    },
                    {
                        " .": -0.003651392
                    },
                    {
                        "add": -0.0008873215
                    },
                    {
                        "(\"": -0.00020739941
                    },
                    {
                        "not": -0.002505714
                    },
                    {
                        "ify": -3.4642555e-05
                    },
                    {
                        "All": -0.0002850831
                    },
                    {
                        "\")": -0.00065468537
                    },
                    {
                        "\n": -0.00095294917
                    },
                    {
                        "   ": -0.0007877598
                    },
                    {
                        " .": -0.0013627865
                    },
                    {
                        "build": -0.001760915
                    },
                    {
                        "();": -0.0063513764
                    },
                    {
                        "\n\n": -0.3067937
                    },
                    {
                        "\n": -0.016992142
                    },
                    {
                        "//": -0.051816065
                    },
                    {
                        " Scala": -0.5187338
                    },
                    {
                        "\n": -0.15254274
                    },
                    {
                        "private": -0.07467954
                    },
                    {
                        " static": -0.10476439
                    },
                    {
                        " final": -0.04931557
                    },
                    {
                        " Set": -0.014381662
                    },
                    {
                        "<": -0.06900537
                    },
                    {
                        "String": -0.0017696341
                    },
                    {
                        ">": -0.0007509534
                    },
                    {
                        " CON": -0.0018668463
                    },
                    {
                        "FIN": -0.00010522067
                    },
                    {
                        "ED": -5.4364154e-06
                    },
                    {
                        "_": -0.00034190435
                    },
                    {
                        "R": -0.00014611395
                    },
                    {
                        "OUT": -2.7133337e-05
                    },
                    {
                        "IN": -5.0856816e-05
                    },
                    {
                        "ES": -2.4543265e-06
                    },
                    {
                        " =": -0.002365124
                    },
                    {
                        " Imm": -0.006630101
                    },
                    {
                        "utable": -8.5358415e-06
                    },
                    {
                        "Set": -0.0001427761
                    },
                    {
                        ".<": -0.007458399
                    },
                    {
                        "String": -0.0004841794
                    },
                    {
                        ">": -0.00024394579
                    },
                    {
                        " builder": -0.0051180134
                    },
                    {
                        "()": -0.00197201
                    },
                    {
                        "\n": -0.00091279834
                    },
                    {
                        "   ": -0.0017189985
                    },
                    {
                        " .": -0.0049378173
                    },
                    {
                        "add": -0.00028877953
                    },
                    {
                        "(\"": -0.00038173224
                    },
                    {
                        "clone": -0.0017865307
                    },
                    {
                        "\")": -0.00045108353
                    },
                    {
                        "\n": -0.00035156214
                    },
                    {
                        "   ": -0.00021360109
                    },
                    {
                        " .": -0.0015086123
                    },
                    {
                        "add": -5.037998e-05
                    },
                    {
                        "(\"": -5.6102934e-05
                    },
                    {
                        "wait": -0.000812037
                    },
                    {
                        "\")": -0.00026361804
                    },
                    {
                        "\n": -0.0012499288
                    },
                    {
                        "   ": -0.002340508
                    },
                    {
                        " /*": -0.030450096
                    },
                    {
                        " B": -0.00228925
                    },
                    {
                        "UG": -8.5358415e-06
                    },
                    {
                        ":": -0.0014195521
                    },
                    {
                        " ": -0.0149055105
                    },
                    {
                        "\n": -0.00016840879
                    },
                    {
                        "    ": -0.0010933421
                    },
                    {
                        " *": -0.00044154216
                    },
                    {
                        " .": -0.0024966944
                    },
                    {
                        "add": -0.00016030073
                    },
                    {
                        "(\"": -0.00024251342
                    },
                    {
                        "not": -0.0004317614
                    },
                    {
                        "ify": -7.028876e-05
                    },
                    {
                        "\")": -0.00091995555
                    },
                    {
                        "\n": -0.0016265763
                    },
                    {
                        "    ": -0.00023786427
                    },
                    {
                        " *": -0.0026741792
                    },
                    {
                        " FIX": -0.0010202485
                    },
                    {
                        "ED": -0.00010045139
                    },
                    {
                        ":": -0.000506004
                    },
                    {
                        " ": -0.0056023896
                    },
                    {
                        "\n": -5.7177684e-05
                    },
                    {
                        "    ": -0.0004950321
                    },
                    {
                        " */": -0.000970669
                    },
                    {
                        "\n": -0.0016855649
                    },
                    {
                        "   ": -0.00099489
                    },
                    {
                        " .": -0.0013631459
                    },
                    {
                        "add": -0.00015505555
                    },
                    {
                        "(\"": -0.00016447584
                    },
                    {
                        "not": -0.0005417281
                    },
                    {
                        "ify": -4.5135734e-05
                    },
                    {
                        "\")": -0.0012652673
                    },
                    {
                        "\n": -0.00080404343
                    },
                    {
                        "   ": -0.0006236113
                    },
                    {
                        " .": -0.00079807744
                    },
                    {
                        "add": -9.3535404e-05
                    },
                    {
                        "(\"": -5.8130416e-05
                    },
                    {
                        "equ": -0.0014858679
                    },
                    {
                        "als": -8.5358415e-06
                    },
                    {
                        "\")": -0.0002131233
                    },
                    {
                        "\n": -0.00043414652
                    },
                    {
                        "<|endoftext|>": -0.25202835
                    },
                    {
                        "package": -1.4658257
                    },
                    {
                        " com": -0.71526134
                    },
                    {
                        ".": -0.0014061212
                    },
                    {
                        "example": -2.0963414
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    350,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    370,
                    373,
                    376,
                    378,
                    379,
                    382,
                    384,
                    389,
                    392,
                    394,
                    395,
                    397,
                    401,
                    404,
                    405,
                    412,
                    419,
                    425,
                    429,
                    430,
                    436,
                    437,
                    441,
                    444,
                    446,
                    447,
                    448,
                    451,
                    453,
                    455,
                    457,
                    461,
                    467,
                    470,
                    472,
                    478,
                    479,
                    487,
                    489,
                    490,
                    493,
                    495,
                    498,
                    500,
                    505,
                    507,
                    508,
                    511,
                    513,
                    516,
                    518,
                    522,
                    524,
                    525,
                    528,
                    531,
                    533,
                    535,
                    536,
                    537,
                    538,
                    542,
                    544,
                    546,
                    549,
                    551,
                    554,
                    557,
                    559,
                    560,
                    564,
                    566,
                    570,
                    572,
                    573,
                    574,
                    575,
                    579,
                    582,
                    583,
                    586,
                    588,
                    591,
                    593,
                    596,
                    599,
                    601,
                    602,
                    605,
                    607,
                    610,
                    612,
                    615,
                    618,
                    620,
                    621,
                    624,
                    626,
                    629,
                    631,
                    635,
                    639,
                    641,
                    642,
                    645,
                    647,
                    650,
                    652,
                    655,
                    658,
                    661,
                    663,
                    664,
                    667,
                    669,
                    674,
                    677,
                    679,
                    680,
                    682,
                    688,
                    689,
                    696,
                    703,
                    709,
                    713,
                    714,
                    720,
                    721,
                    725,
                    728,
                    730,
                    731,
                    732,
                    735,
                    737,
                    739,
                    741,
                    745,
                    751,
                    754,
                    756,
                    762,
                    763,
                    771,
                    773,
                    774,
                    777,
                    779,
                    782,
                    784,
                    789,
                    791,
                    792,
                    795,
                    797,
                    800,
                    802,
                    806,
                    808,
                    809,
                    812,
                    815,
                    817,
                    819,
                    820,
                    821,
                    822,
                    826,
                    828,
                    830,
                    833,
                    835,
                    838,
                    841,
                    843,
                    844,
                    848,
                    850,
                    854,
                    856,
                    857,
                    858,
                    859,
                    863,
                    866,
                    867,
                    870,
                    872,
                    875,
                    877,
                    880,
                    883,
                    885,
                    886,
                    889,
                    891,
                    894,
                    896,
                    899,
                    902,
                    904,
                    905,
                    905,
                    905,
                    905,
                    905
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " {",
                    " Component"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -0.6892133,
                    -0.011825194,
                    -0.4264719,
                    -0.08404351,
                    -0.117576204,
                    -0.080940455,
                    -0.027837776,
                    -0.0011317086,
                    -0.6458606,
                    -6.158372e-05,
                    -0.0019595276,
                    -0.004618002,
                    -0.15143746,
                    -0.029572038,
                    -0.00086781447,
                    -0.0007811977,
                    -0.36202466,
                    -0.00032932175,
                    -0.0008661446,
                    -0.0032599252,
                    -0.7126843,
                    -0.04985957,
                    -0.0011977707,
                    -0.00053683587,
                    -0.4982871,
                    -0.001307639,
                    -0.0013002977,
                    -0.005233408,
                    -0.15199742,
                    -2.1460845,
                    -1.2568754,
                    -1.562441
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "ify": -0.011825194
                    },
                    {
                        "\")": -0.4264719
                    },
                    {
                        "\n": -0.08404351
                    },
                    {
                        "   ": -0.117576204
                    },
                    {
                        " .": -0.080940455
                    },
                    {
                        "add": -0.027837776
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6458606
                    },
                    {
                        "als": -6.158372e-05
                    },
                    {
                        "\")": -0.0019595276
                    },
                    {
                        "\n": -0.004618002
                    },
                    {
                        "   ": -0.15143746
                    },
                    {
                        " .": -0.029572038
                    },
                    {
                        "add": -0.00086781447
                    },
                    {
                        "(\"": -0.0007811977
                    },
                    {
                        "to": -0.36202466
                    },
                    {
                        "String": -0.00032932175
                    },
                    {
                        "\")": -0.0008661446
                    },
                    {
                        "\n": -0.0032599252
                    },
                    {
                        "<|endoftext|>": -0.6751954
                    },
                    {
                        " .": -0.04985957
                    },
                    {
                        "add": -0.0011977707
                    },
                    {
                        "(\"": -0.00053683587
                    },
                    {
                        "final": -0.4982871
                    },
                    {
                        "ize": -0.001307639
                    },
                    {
                        "\")": -0.0013002977
                    },
                    {
                        "\n": -0.005233408
                    },
                    {
                        "<|endoftext|>": -0.15199742
                    },
                    {
                        "package": -1.469276
                    },
                    {
                        " React": -1.222093
                    },
                    {
                        " Component": -1.562441
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    360,
                    362,
                    365,
                    367,
                    372,
                    375,
                    377,
                    378,
                    378,
                    378,
                    378
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"toString\")\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    "include",
                    " <"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -2.4898038,
                    -0.0017861723,
                    -0.002904241,
                    -0.00780543,
                    -1.7454569,
                    -2.2746904,
                    -1.1011899,
                    -0.7060426
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "String": -0.0017861723
                    },
                    {
                        "\")": -0.002904241
                    },
                    {
                        "\n": -0.00780543
                    },
                    {
                        "   ": -0.19375336
                    },
                    {
                        "package": -1.4678324
                    },
                    {
                        "include": -1.1011899
                    },
                    {
                        " <": -0.7060426
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    310,
                    316,
                    318,
                    319,
                    319,
                    319,
                    319
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// BUG: \n// private static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n//     .add(\"notify\")\n//     .add(\"wait\")\n//     .add(\"equals\")\n//     .add(\"finalize\")\n//     .add(\"getClass\")\n//     .add(\"hashCode\")\n//     .add(\"notifyAll\")\n//     .build();\n\n// FIXED: \nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "//",
                    " private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "//",
                    "    ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " CON",
                    "FIN",
                    "ED",
                    "_",
                    "R",
                    "OUT",
                    "IN",
                    "ES",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -1.7526686,
                    -8.065993e-05,
                    -0.0042909854,
                    -0.008601258,
                    -0.23661241,
                    -0.053135093,
                    -0.00076103635,
                    -0.00067842286,
                    -1.2952994,
                    -0.0016828775,
                    -0.00089257234,
                    -0.0033405984,
                    -0.14995855,
                    -0.042215776,
                    -0.00056963606,
                    -0.0003813765,
                    -0.6324411,
                    -0.0019871204,
                    -0.00059427,
                    -0.002745542,
                    -0.5568389,
                    -0.059976965,
                    -0.00037326562,
                    -0.00050373527,
                    -0.14107075,
                    -0.010987784,
                    -0.0010181,
                    -0.0019606035,
                    -0.0033282186,
                    -0.010671272,
                    -0.00038733694,
                    -0.00016042087,
                    -0.1358686,
                    -0.00030189528,
                    -0.34796372,
                    -0.0017827086,
                    -0.0026141168,
                    -0.0034873085,
                    -0.02073559,
                    -0.07842024,
                    -0.004713754,
                    -0.22299959,
                    -0.18454993,
                    -0.09245469,
                    -6.480352,
                    -0.13114996,
                    -0.28644451,
                    -1.5954094,
                    -0.023335325,
                    -0.5152855,
                    -0.95941514,
                    -0.048787337,
                    -0.023645248,
                    -0.056382757,
                    -0.010229837,
                    -0.016284833,
                    -0.0016579789,
                    -0.023360705,
                    -0.0021178648,
                    -0.00021324158,
                    -0.0011272951,
                    -0.006992153,
                    -0.000254913,
                    -0.001352282,
                    -0.0001097506,
                    -0.013263086,
                    -0.1085923,
                    -0.0005946267,
                    -0.0059640706,
                    -0.050154265,
                    -0.006716148,
                    -0.0014656343,
                    -0.07075444,
                    -0.06230804,
                    -0.008991089,
                    -0.032870498,
                    -0.5445339,
                    -0.015575279,
                    -0.0031413485,
                    -0.0046539297,
                    -3.6804752,
                    -0.0028143362,
                    -0.038889002,
                    -0.050886795,
                    -0.015897544,
                    -0.104024336,
                    -0.05069439,
                    -0.16471212,
                    -0.0022158881,
                    -1.6446788,
                    -0.0035811614,
                    -0.013587126,
                    -0.011796785,
                    -0.04925734,
                    -0.029569155,
                    -0.035251003,
                    -0.00064943644,
                    -0.99247175,
                    -2.9399247e-05,
                    -0.00055460737,
                    -0.0018081468,
                    -0.0005443507,
                    -0.0033284582,
                    -0.0020783804,
                    -0.0020574185,
                    -0.000109155495,
                    -0.099477954,
                    -0.00013335768,
                    -0.000249787,
                    -0.0009821214,
                    -0.00031751726,
                    -0.0021606935,
                    -0.0010129693,
                    -0.0016989396,
                    -0.00013383264,
                    -0.010812674,
                    -0.0001736549,
                    -0.00014623316,
                    -0.0015348166,
                    -0.00042150758,
                    -0.44520217,
                    -0.0024183004,
                    -0.006566503,
                    -0.00010760485,
                    -0.0077676456,
                    -0.00033868288,
                    -0.00012763379,
                    -0.0006139479,
                    -0.00013526501,
                    -0.0013951398,
                    -0.000722026,
                    -0.0050940495,
                    -5.4791635e-05,
                    -0.0045676436,
                    -3.869565e-05,
                    -0.0010727547,
                    -0.0016723684,
                    -0.0013497758,
                    -0.00089842005,
                    -0.00610427,
                    -0.0016069341,
                    -0.012039209,
                    -0.0023449308,
                    -0.06529083,
                    -0.39850605,
                    -0.02650512,
                    -0.116921894,
                    -0.021712886,
                    -0.03496511,
                    -0.245572,
                    -0.0015694434,
                    -0.17935394,
                    -0.004481721,
                    -0.001097399,
                    -0.0029200227,
                    -0.0003553787,
                    -0.0011671558,
                    -0.0006705523,
                    -0.004071975,
                    -0.0004844188,
                    -1.5448071e-05,
                    -7.9349564e-05,
                    -0.0017616312,
                    -1.676031e-05,
                    -0.00013371343,
                    -1.5094201e-05,
                    -0.0028988598,
                    -0.005211837,
                    -6.528106e-05,
                    -0.00063941634,
                    -0.0023003009,
                    -0.0006495566,
                    -0.00044392727,
                    -0.008342236,
                    -0.001298627,
                    -0.007843861,
                    -0.010370937,
                    -0.06349553,
                    -0.00036205718,
                    -0.0020809504,
                    -1.2924104,
                    -0.0020141178,
                    -0.0050596604,
                    -0.003035223,
                    -0.02043441,
                    -0.000116426294,
                    -0.00020012581,
                    -0.246853,
                    -0.00013276069,
                    -0.029454604,
                    -0.012725242,
                    -0.0036345215,
                    -0.004845216,
                    -0.00018760514,
                    -0.00011583212,
                    -0.15282542,
                    -1.7400124e-06,
                    -7.541475e-05,
                    -0.00028353152,
                    -7.636654e-05,
                    -0.0002463262,
                    -2.1529595e-05,
                    -1.8073477e-05,
                    -0.0053155595,
                    -1.6165199e-05,
                    -3.8217877e-05,
                    -0.0002660041,
                    -0.00019774071,
                    -0.00024835463,
                    -2.1171965e-05,
                    -3.583558e-05,
                    -0.0016263388,
                    -4.9308033e-05,
                    -6.170386e-05,
                    -0.0004442849,
                    -0.015461048
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "als": -8.065993e-05
                    },
                    {
                        "\")": -0.0042909854
                    },
                    {
                        "\n": -0.008601258
                    },
                    {
                        "   ": -0.23661241
                    },
                    {
                        " .": -0.053135093
                    },
                    {
                        "add": -0.00076103635
                    },
                    {
                        "(\"": -0.00067842286
                    },
                    {
                        "to": -0.5891217
                    },
                    {
                        "ize": -0.0016828775
                    },
                    {
                        "\")": -0.00089257234
                    },
                    {
                        "\n": -0.0033405984
                    },
                    {
                        "   ": -0.14995855
                    },
                    {
                        " .": -0.042215776
                    },
                    {
                        "add": -0.00056963606
                    },
                    {
                        "(\"": -0.0003813765
                    },
                    {
                        "get": -0.6324411
                    },
                    {
                        "Class": -0.0019871204
                    },
                    {
                        "\")": -0.00059427
                    },
                    {
                        "\n": -0.002745542
                    },
                    {
                        "   ": -0.5568389
                    },
                    {
                        " .": -0.059976965
                    },
                    {
                        "add": -0.00037326562
                    },
                    {
                        "(\"": -0.00050373527
                    },
                    {
                        "hash": -0.14107075
                    },
                    {
                        "Code": -0.010987784
                    },
                    {
                        "\")": -0.0010181
                    },
                    {
                        "\n": -0.0019606035
                    },
                    {
                        "   ": -0.0033282186
                    },
                    {
                        " .": -0.010671272
                    },
                    {
                        "add": -0.00038733694
                    },
                    {
                        "(\"": -0.00016042087
                    },
                    {
                        "not": -0.1358686
                    },
                    {
                        "ify": -0.00030189528
                    },
                    {
                        "All": -0.34796372
                    },
                    {
                        "\")": -0.0017827086
                    },
                    {
                        "\n": -0.0026141168
                    },
                    {
                        "   ": -0.0034873085
                    },
                    {
                        " .": -0.02073559
                    },
                    {
                        "build": -0.07842024
                    },
                    {
                        "();": -0.004713754
                    },
                    {
                        "\n": -0.22299959
                    },
                    {
                        "\n": -0.18454993
                    },
                    {
                        "//": -0.09245469
                    },
                    {
                        " Scala": -1.6636139
                    },
                    {
                        "UG": -0.13114996
                    },
                    {
                        ":": -0.28644451
                    },
                    {
                        " ": -1.5954094
                    },
                    {
                        "\n": -0.023335325
                    },
                    {
                        "//": -0.5152855
                    },
                    {
                        " private": -0.95941514
                    },
                    {
                        " static": -0.048787337
                    },
                    {
                        " final": -0.023645248
                    },
                    {
                        " Set": -0.056382757
                    },
                    {
                        "<": -0.010229837
                    },
                    {
                        "String": -0.016284833
                    },
                    {
                        ">": -0.0016579789
                    },
                    {
                        " CON": -0.023360705
                    },
                    {
                        "FIN": -0.0021178648
                    },
                    {
                        "ED": -0.00021324158
                    },
                    {
                        "_": -0.0011272951
                    },
                    {
                        "R": -0.006992153
                    },
                    {
                        "OUT": -0.000254913
                    },
                    {
                        "IN": -0.001352282
                    },
                    {
                        "ES": -0.0001097506
                    },
                    {
                        " =": -0.013263086
                    },
                    {
                        " Imm": -0.1085923
                    },
                    {
                        "utable": -0.0005946267
                    },
                    {
                        "Set": -0.0059640706
                    },
                    {
                        ".<": -0.050154265
                    },
                    {
                        "String": -0.006716148
                    },
                    {
                        ">": -0.0014656343
                    },
                    {
                        " builder": -0.07075444
                    },
                    {
                        "()": -0.06230804
                    },
                    {
                        "\n": -0.008991089
                    },
                    {
                        "//": -0.032870498
                    },
                    {
                        "    ": -0.5445339
                    },
                    {
                        " .": -0.015575279
                    },
                    {
                        "add": -0.0031413485
                    },
                    {
                        "(\"": -0.0046539297
                    },
                    {
                        "clone": -0.11415335
                    },
                    {
                        "ify": -0.0028143362
                    },
                    {
                        "\")": -0.038889002
                    },
                    {
                        "\n": -0.050886795
                    },
                    {
                        "//": -0.015897544
                    },
                    {
                        "    ": -0.104024336
                    },
                    {
                        " .": -0.05069439
                    },
                    {
                        "add": -0.16471212
                    },
                    {
                        "(\"": -0.0022158881
                    },
                    {
                        "clone": -0.39739972
                    },
                    {
                        "\")": -0.0035811614
                    },
                    {
                        "\n": -0.013587126
                    },
                    {
                        "//": -0.011796785
                    },
                    {
                        "    ": -0.04925734
                    },
                    {
                        " .": -0.029569155
                    },
                    {
                        "add": -0.035251003
                    },
                    {
                        "(\"": -0.00064943644
                    },
                    {
                        "clone": -0.5669956
                    },
                    {
                        "als": -2.9399247e-05
                    },
                    {
                        "\")": -0.00055460737
                    },
                    {
                        "\n": -0.0018081468
                    },
                    {
                        "//": -0.0005443507
                    },
                    {
                        "    ": -0.0033284582
                    },
                    {
                        " .": -0.0020783804
                    },
                    {
                        "add": -0.0020574185
                    },
                    {
                        "(\"": -0.000109155495
                    },
                    {
                        "final": -0.099477954
                    },
                    {
                        "ize": -0.00013335768
                    },
                    {
                        "\")": -0.000249787
                    },
                    {
                        "\n": -0.0009821214
                    },
                    {
                        "//": -0.00031751726
                    },
                    {
                        "    ": -0.0021606935
                    },
                    {
                        " .": -0.0010129693
                    },
                    {
                        "add": -0.0016989396
                    },
                    {
                        "(\"": -0.00013383264
                    },
                    {
                        "get": -0.010812674
                    },
                    {
                        "Class": -0.0001736549
                    },
                    {
                        "\")": -0.00014623316
                    },
                    {
                        "\n": -0.0015348166
                    },
                    {
                        "//": -0.00042150758
                    },
                    {
                        "    ": -0.44520217
                    },
                    {
                        " .": -0.0024183004
                    },
                    {
                        "add": -0.006566503
                    },
                    {
                        "(\"": -0.00010760485
                    },
                    {
                        "hash": -0.0077676456
                    },
                    {
                        "Code": -0.00033868288
                    },
                    {
                        "\")": -0.00012763379
                    },
                    {
                        "\n": -0.0006139479
                    },
                    {
                        "//": -0.00013526501
                    },
                    {
                        "    ": -0.0013951398
                    },
                    {
                        " .": -0.000722026
                    },
                    {
                        "add": -0.0050940495
                    },
                    {
                        "(\"": -5.4791635e-05
                    },
                    {
                        "not": -0.0045676436
                    },
                    {
                        "ify": -3.869565e-05
                    },
                    {
                        "All": -0.0010727547
                    },
                    {
                        "\")": -0.0016723684
                    },
                    {
                        "\n": -0.0013497758
                    },
                    {
                        "//": -0.00089842005
                    },
                    {
                        "    ": -0.00610427
                    },
                    {
                        " .": -0.0016069341
                    },
                    {
                        "build": -0.012039209
                    },
                    {
                        "();": -0.0023449308
                    },
                    {
                        "\n": -0.06529083
                    },
                    {
                        "\n": -0.39850605
                    },
                    {
                        "//": -0.02650512
                    },
                    {
                        " FIX": -0.116921894
                    },
                    {
                        "ED": -0.021712886
                    },
                    {
                        ":": -0.03496511
                    },
                    {
                        " ": -0.245572
                    },
                    {
                        "\n": -0.0015694434
                    },
                    {
                        "private": -0.17935394
                    },
                    {
                        " static": -0.004481721
                    },
                    {
                        " final": -0.001097399
                    },
                    {
                        " Set": -0.0029200227
                    },
                    {
                        "<": -0.0003553787
                    },
                    {
                        "String": -0.0011671558
                    },
                    {
                        ">": -0.0006705523
                    },
                    {
                        " CON": -0.004071975
                    },
                    {
                        "FIN": -0.0004844188
                    },
                    {
                        "ED": -1.5448071e-05
                    },
                    {
                        "_": -7.9349564e-05
                    },
                    {
                        "R": -0.0017616312
                    },
                    {
                        "OUT": -1.676031e-05
                    },
                    {
                        "IN": -0.00013371343
                    },
                    {
                        "ES": -1.5094201e-05
                    },
                    {
                        " =": -0.0028988598
                    },
                    {
                        " Imm": -0.005211837
                    },
                    {
                        "utable": -6.528106e-05
                    },
                    {
                        "Set": -0.00063941634
                    },
                    {
                        ".<": -0.0023003009
                    },
                    {
                        "String": -0.0006495566
                    },
                    {
                        ">": -0.00044392727
                    },
                    {
                        " builder": -0.008342236
                    },
                    {
                        "()": -0.001298627
                    },
                    {
                        "\n": -0.007843861
                    },
                    {
                        "   ": -0.010370937
                    },
                    {
                        " .": -0.06349553
                    },
                    {
                        "add": -0.00036205718
                    },
                    {
                        "(\"": -0.0020809504
                    },
                    {
                        "not": -0.4904857
                    },
                    {
                        "\")": -0.0020141178
                    },
                    {
                        "\n": -0.0050596604
                    },
                    {
                        "   ": -0.003035223
                    },
                    {
                        " .": -0.02043441
                    },
                    {
                        "add": -0.000116426294
                    },
                    {
                        "(\"": -0.00020012581
                    },
                    {
                        "not": -0.246853
                    },
                    {
                        "ify": -0.00013276069
                    },
                    {
                        "\")": -0.029454604
                    },
                    {
                        "\n": -0.012725242
                    },
                    {
                        "   ": -0.0036345215
                    },
                    {
                        " .": -0.004845216
                    },
                    {
                        "add": -0.00018760514
                    },
                    {
                        "(\"": -0.00011583212
                    },
                    {
                        "equ": -0.15282542
                    },
                    {
                        "als": -1.7400124e-06
                    },
                    {
                        "\")": -7.541475e-05
                    },
                    {
                        "\n": -0.00028353152
                    },
                    {
                        "   ": -7.636654e-05
                    },
                    {
                        " .": -0.0002463262
                    },
                    {
                        "add": -2.1529595e-05
                    },
                    {
                        "(\"": -1.8073477e-05
                    },
                    {
                        "final": -0.0053155595
                    },
                    {
                        "ize": -1.6165199e-05
                    },
                    {
                        "\")": -3.8217877e-05
                    },
                    {
                        "\n": -0.0002660041
                    },
                    {
                        "   ": -0.00019774071
                    },
                    {
                        " .": -0.00024835463
                    },
                    {
                        "add": -2.1171965e-05
                    },
                    {
                        "(\"": -3.583558e-05
                    },
                    {
                        "get": -0.0016263388
                    },
                    {
                        "Class": -4.9308033e-05
                    },
                    {
                        "\")": -6.170386e-05
                    },
                    {
                        "\n": -0.0004442849
                    },
                    {
                        "<|endoftext|>": -0.015461048
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    332,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    356,
                    358,
                    359,
                    362,
                    364,
                    367,
                    369,
                    373,
                    377,
                    379,
                    380,
                    383,
                    385,
                    388,
                    390,
                    393,
                    396,
                    399,
                    401,
                    402,
                    405,
                    407,
                    412,
                    415,
                    416,
                    417,
                    419,
                    421,
                    423,
                    424,
                    425,
                    426,
                    428,
                    436,
                    443,
                    449,
                    453,
                    454,
                    460,
                    461,
                    465,
                    468,
                    470,
                    471,
                    472,
                    475,
                    477,
                    479,
                    481,
                    485,
                    491,
                    494,
                    496,
                    502,
                    503,
                    511,
                    513,
                    514,
                    516,
                    520,
                    522,
                    525,
                    527,
                    530,
                    533,
                    535,
                    536,
                    538,
                    542,
                    544,
                    547,
                    549,
                    553,
                    555,
                    556,
                    558,
                    562,
                    564,
                    567,
                    569,
                    572,
                    575,
                    577,
                    578,
                    580,
                    584,
                    586,
                    589,
                    591,
                    596,
                    599,
                    601,
                    602,
                    604,
                    608,
                    610,
                    613,
                    615,
                    618,
                    623,
                    625,
                    626,
                    628,
                    632,
                    634,
                    637,
                    639,
                    643,
                    647,
                    649,
                    650,
                    652,
                    656,
                    658,
                    661,
                    663,
                    666,
                    669,
                    672,
                    674,
                    675,
                    677,
                    681,
                    683,
                    688,
                    691,
                    692,
                    693,
                    695,
                    699,
                    701,
                    702,
                    703,
                    704,
                    711,
                    718,
                    724,
                    728,
                    729,
                    735,
                    736,
                    740,
                    743,
                    745,
                    746,
                    747,
                    750,
                    752,
                    754,
                    756,
                    760,
                    766,
                    769,
                    771,
                    777,
                    778,
                    786,
                    788,
                    789,
                    792,
                    794,
                    797,
                    799,
                    803,
                    805,
                    806,
                    809,
                    811,
                    814,
                    816,
                    819,
                    822,
                    824,
                    825,
                    828,
                    830,
                    833,
                    835,
                    838,
                    841,
                    843,
                    844,
                    847,
                    849,
                    852,
                    854,
                    859,
                    862,
                    864,
                    865,
                    868,
                    870,
                    873,
                    875,
                    878,
                    883,
                    885,
                    886
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"toString\")\n    /* BUG: \n     * .add(\"equals\")\n     * FIXED: \n     */\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "<|endoftext|>",
                    "//"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -2.4898038,
                    -0.0017861723,
                    -0.002904241,
                    -0.00780543,
                    -0.19375336,
                    -2.9612553,
                    -0.09606308,
                    -0.00018832133,
                    -0.031561602,
                    -0.28293934,
                    -0.0016354709,
                    -0.0062574446,
                    -0.0017527346,
                    -0.03056931,
                    -0.0019091851,
                    -0.005095726,
                    -0.57486844,
                    -0.00020501523,
                    -0.009707828,
                    -0.075890094,
                    -0.0032526893,
                    -0.017445972,
                    -0.05291304,
                    -0.0011348127,
                    -0.016422968,
                    -0.17762409,
                    -0.00054232136,
                    -0.0037230025,
                    -0.017141903,
                    -0.012078001,
                    -0.276195,
                    -2.7109194
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "String": -0.0017861723
                    },
                    {
                        "\")": -0.002904241
                    },
                    {
                        "\n": -0.00780543
                    },
                    {
                        "   ": -0.19375336
                    },
                    {
                        " .": -0.06172497
                    },
                    {
                        " B": -0.09606308
                    },
                    {
                        "UG": -0.00018832133
                    },
                    {
                        ":": -0.031561602
                    },
                    {
                        " ": -0.28293934
                    },
                    {
                        "\n": -0.0016354709
                    },
                    {
                        "    ": -0.0062574446
                    },
                    {
                        " *": -0.0017527346
                    },
                    {
                        " .": -0.03056931
                    },
                    {
                        "add": -0.0019091851
                    },
                    {
                        "(\"": -0.005095726
                    },
                    {
                        "equ": -0.57486844
                    },
                    {
                        "als": -0.00020501523
                    },
                    {
                        "\")": -0.009707828
                    },
                    {
                        "\n": -0.075890094
                    },
                    {
                        "    ": -0.0032526893
                    },
                    {
                        " *": -0.017445972
                    },
                    {
                        " FIX": -0.05291304
                    },
                    {
                        "ED": -0.0011348127
                    },
                    {
                        ":": -0.016422968
                    },
                    {
                        " ": -0.17762409
                    },
                    {
                        "\n": -0.00054232136
                    },
                    {
                        "    ": -0.0037230025
                    },
                    {
                        " */": -0.017141903
                    },
                    {
                        "\n": -0.012078001
                    },
                    {
                        "<|endoftext|>": -0.276195
                    },
                    {
                        "package": -1.4660385
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    310,
                    316,
                    318,
                    319,
                    322,
                    325,
                    327,
                    329,
                    330,
                    331,
                    332,
                    336,
                    338,
                    340,
                    343,
                    345,
                    348,
                    351,
                    353,
                    354,
                    358,
                    360,
                    364,
                    366,
                    367,
                    368,
                    369,
                    373,
                    376,
                    377,
                    377
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    "."
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010605848,
                    -0.009946494,
                    -1.7526686,
                    -8.065993e-05,
                    -0.0042909854,
                    -0.008601258,
                    -0.23661241,
                    -0.053135093,
                    -0.00076103635,
                    -0.00067842286,
                    -0.5891217,
                    -0.00041840534,
                    -0.0011346935,
                    -0.0036922512,
                    -0.72200036,
                    -0.09071721,
                    -0.00385481,
                    -0.00056224136,
                    -1.6475676,
                    -0.008843626,
                    -0.0009759198,
                    -0.005457645,
                    -0.65908635,
                    -1.466219,
                    -0.7086421,
                    -0.0013883947
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010605848
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "als": -8.065993e-05
                    },
                    {
                        "\")": -0.0042909854
                    },
                    {
                        "\n": -0.008601258
                    },
                    {
                        "   ": -0.23661241
                    },
                    {
                        " .": -0.053135093
                    },
                    {
                        "add": -0.00076103635
                    },
                    {
                        "(\"": -0.00067842286
                    },
                    {
                        "to": -0.5891217
                    },
                    {
                        "String": -0.00041840534
                    },
                    {
                        "\")": -0.0011346935
                    },
                    {
                        "\n": -0.0036922512
                    },
                    {
                        "<|endoftext|>": -0.6669161
                    },
                    {
                        " .": -0.09071721
                    },
                    {
                        "add": -0.00385481
                    },
                    {
                        "(\"": -0.00056224136
                    },
                    {
                        "final": -0.46890813
                    },
                    {
                        "Class": -0.008843626
                    },
                    {
                        "\")": -0.0009759198
                    },
                    {
                        "\n": -0.005457645
                    },
                    {
                        "<|endoftext|>": -0.65908635
                    },
                    {
                        "package": -1.466219
                    },
                    {
                        " com": -0.7086421
                    },
                    {
                        ".": -0.0013883947
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    329,
                    335,
                    337,
                    338,
                    341,
                    343,
                    346,
                    348,
                    351,
                    356,
                    358,
                    359,
                    359,
                    359,
                    359
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "bytes:\\xef",
                    "bytes:\\xbb",
                    "bytes:\\xbf"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010600667,
                    -0.009946494,
                    -1.7526686,
                    -8.065993e-05,
                    -0.0042909854,
                    -0.008601258,
                    -0.23661241,
                    -0.053135093,
                    -0.00076103635,
                    -0.00067842286,
                    -0.5891217,
                    -0.00041840534,
                    -0.0011346935,
                    -0.0036922512,
                    -0.6669161,
                    -2.5241532,
                    -2.6773841e-05,
                    -1.8841804e-07
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010600667
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "als": -8.065993e-05
                    },
                    {
                        "\")": -0.0042909854
                    },
                    {
                        "\n": -0.008601258
                    },
                    {
                        "   ": -0.23661241
                    },
                    {
                        " .": -0.053135093
                    },
                    {
                        "add": -0.00076103635
                    },
                    {
                        "(\"": -0.00067842286
                    },
                    {
                        "to": -0.5891217
                    },
                    {
                        "String": -0.00041840534
                    },
                    {
                        "\")": -0.0011346935
                    },
                    {
                        "\n": -0.0036922512
                    },
                    {
                        "<|endoftext|>": -0.6669161
                    },
                    {
                        "package": -1.4674803
                    },
                    {
                        "bytes:\\xbb": -2.6773841e-05
                    },
                    {
                        "bytes:\\xbf": -1.8841804e-07
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    329,
                    335,
                    337,
                    338,
                    338,
                    338,
                    338
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "<?",
                    "php",
                    "\n"
                ],
                "token_logprobs": [
                    -0.0030574014,
                    -0.08668658,
                    -0.03546293,
                    -0.010600667,
                    -0.009946494,
                    -0.6892133,
                    -0.011825194,
                    -0.4264719,
                    -0.08404351,
                    -0.117576204,
                    -0.080940455,
                    -0.027837776,
                    -0.0011317086,
                    -0.6458606,
                    -6.158372e-05,
                    -0.0019595276,
                    -0.004618002,
                    -0.15143746,
                    -0.029572038,
                    -0.00086781447,
                    -0.0007811977,
                    -0.36202466,
                    -0.0003290824,
                    -0.0008707374,
                    -0.0032719448,
                    -0.67667675,
                    -2.4098446,
                    -0.025719306,
                    -0.15677328
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0030574014
                    },
                    {
                        "   ": -0.08668658
                    },
                    {
                        " .": -0.03546293
                    },
                    {
                        "add": -0.010600667
                    },
                    {
                        "(\"": -0.009946494
                    },
                    {
                        "not": -0.6892133
                    },
                    {
                        "ify": -0.011825194
                    },
                    {
                        "\")": -0.4264719
                    },
                    {
                        "\n": -0.08404351
                    },
                    {
                        "   ": -0.117576204
                    },
                    {
                        " .": -0.080940455
                    },
                    {
                        "add": -0.027837776
                    },
                    {
                        "(\"": -0.0011317086
                    },
                    {
                        "equ": -0.6458606
                    },
                    {
                        "als": -6.158372e-05
                    },
                    {
                        "\")": -0.0019595276
                    },
                    {
                        "\n": -0.004618002
                    },
                    {
                        "   ": -0.15143746
                    },
                    {
                        " .": -0.029572038
                    },
                    {
                        "add": -0.00086781447
                    },
                    {
                        "(\"": -0.0007811977
                    },
                    {
                        "to": -0.36202466
                    },
                    {
                        "String": -0.0003290824
                    },
                    {
                        "\")": -0.0008707374
                    },
                    {
                        "\n": -0.0032719448
                    },
                    {
                        "<|endoftext|>": -0.67667675
                    },
                    {
                        "package": -1.4652828
                    },
                    {
                        "php": -0.025719306
                    },
                    {
                        "\n": -0.15677328
                    }
                ],
                "text_offset": [
                    298,
                    298,
                    301,
                    303,
                    306,
                    308,
                    311,
                    314,
                    316,
                    317,
                    320,
                    322,
                    325,
                    327,
                    330,
                    333,
                    335,
                    336,
                    339,
                    341,
                    344,
                    346,
                    348,
                    354,
                    356,
                    357,
                    357,
                    357,
                    357
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 89,
        "completion_tokens": 774,
        "total_tokens": 863
    },
    "validation_result": [
        {
            "patch": "    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"wait\")\n",
            "correctness": "test_success",
            "translated": "    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"getClass\")\n    .add(\"wait\")\n    .add(\"wait\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Java\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"equals\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Java\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"notifyAll\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"equals\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Groovy\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Scala\nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Groovy\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n\n// Scala\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n"
        },
        {
            "patch": "    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// BUG: \n// private static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n//     .add(\"notify\")\n//     .add(\"wait\")\n//     .add(\"equals\")\n//     .add(\"finalize\")\n//     .add(\"getClass\")\n//     .add(\"hashCode\")\n//     .add(\"notifyAll\")\n//     .build();\n\n// FIXED: \nprivate static final Set<String> CONFINED_ROUTINES = ImmutableSet.<String> builder()\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// BUG: \n// private static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n//     .add(\"notify\")\n//     .add(\"wait\")\n//     .add(\"equals\")\n//     .add(\"finalize\")\n//     .add(\"getClass\")\n//     .add(\"hashCode\")\n//     .add(\"notifyAll\")\n//     .build();\n\n// FIXED: \nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"toString\")\n    /* BUG: \n     * .add(\"equals\")\n     * FIXED: \n     */\n",
            "correctness": "uncompilable",
            "translated": "    .add(\"toString\")\n    /* BUG: \n     * .add(\"equals\")\n     * FIXED: \n     */\n"
        },
        {
            "patch": "    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n",
            "correctness": "test_success",
            "translated": "    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"getClass\")\n"
        },
        {
            "patch": "    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"equals\")\n    .add(\"toString\")\n"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success",
            "translated": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n"
        }
    ]
}