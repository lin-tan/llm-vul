{
    "id": "cmpl-8HOiLlV9mqiKS9izanLq5zcZLiVDy",
    "object": "text_completion",
    "created": 1699157269,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861386,
                    -0.06597964,
                    -0.10277693,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382204,
                    -7.1958624e-05,
                    -0.589081,
                    -0.08120592,
                    -0.12836255,
                    -0.030770777,
                    -0.0028452403,
                    -2.0575926e-05,
                    -0.32407442,
                    -5.9085025e-05,
                    -0.0026368257,
                    -0.0014651567,
                    -0.32250127,
                    -0.07205459,
                    -0.2557223
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861386
                    },
                    {
                        " ||": -0.06597964
                    },
                    {
                        " (": -0.10277693
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382204
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.589081
                    },
                    {
                        " ||": -0.08120592
                    },
                    {
                        " (": -0.12836255
                    },
                    {
                        "point": -0.030770777
                    },
                    {
                        " instance": -0.0028452403
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Que": -0.32407442
                    },
                    {
                        "ue": -5.9085025e-05
                    },
                    {
                        ".": -0.0026368257
                    },
                    {
                        "Task": -0.0014651567
                    },
                    {
                        "))": -0.32250127
                    },
                    {
                        " {": -0.07205459
                    },
                    {
                        "\n": -0.2557223
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6761,
                    6764,
                    6766,
                    6771,
                    6780,
                    6782,
                    6786,
                    6788,
                    6789,
                    6793,
                    6795,
                    6797
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861386,
                    -0.06597964,
                    -0.10277693,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382204,
                    -7.1958624e-05,
                    -0.589081,
                    -0.08120592,
                    -0.12836255,
                    -0.030770777,
                    -0.0028452403,
                    -2.0575926e-05,
                    -0.32407442,
                    -5.9085025e-05,
                    -0.0026368257,
                    -0.0014651567,
                    -0.32250127,
                    -0.07205459,
                    -0.2557223
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861386
                    },
                    {
                        " ||": -0.06597964
                    },
                    {
                        " (": -0.10277693
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382204
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.589081
                    },
                    {
                        " ||": -0.08120592
                    },
                    {
                        " (": -0.12836255
                    },
                    {
                        "point": -0.030770777
                    },
                    {
                        " instance": -0.0028452403
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Que": -0.32407442
                    },
                    {
                        "ue": -5.9085025e-05
                    },
                    {
                        ".": -0.0026368257
                    },
                    {
                        "Task": -0.0014651567
                    },
                    {
                        "))": -0.32250127
                    },
                    {
                        " {": -0.07205459
                    },
                    {
                        "\n": -0.2557223
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6761,
                    6764,
                    6766,
                    6771,
                    6780,
                    6782,
                    6786,
                    6788,
                    6789,
                    6793,
                    6795,
                    6797
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            if (measure.acquireDelay() && !(point instanceof Occupation)) {\n                throw new AbortException(\"Delaying the build trigger for non-job items is not supported\");\n            }\n\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "           ",
                    " if",
                    " (",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " &&",
                    " !",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    "))",
                    " {",
                    "\n",
                    "               ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "Del",
                    "aying",
                    " the",
                    " build",
                    " trigger",
                    " for",
                    " non",
                    "-",
                    "job",
                    " items",
                    " is",
                    " not",
                    " supported",
                    "\");",
                    "\n",
                    "           ",
                    " }",
                    "\n\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861196,
                    -0.06597989,
                    -0.10277666,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382234,
                    -7.1958624e-05,
                    -0.58908206,
                    -0.08120592,
                    -0.12836242,
                    -0.030770777,
                    -0.0028452403,
                    -2.0575926e-05,
                    -0.32407424,
                    -5.9085025e-05,
                    -0.0026368257,
                    -0.0014651567,
                    -0.3225003,
                    -0.07205439,
                    -0.2557226,
                    -0.8498493,
                    -1.9441372,
                    -0.6766985,
                    -0.9164538,
                    -0.00026397567,
                    -0.0018878675,
                    -0.12510477,
                    -0.00015469792,
                    -0.2524519,
                    -0.0010530055,
                    -1.4243841,
                    -0.18066603,
                    -0.8202209,
                    -0.2936248,
                    -0.068197764,
                    -0.0052458714,
                    -4.721163e-06,
                    -0.28382042,
                    -0.00017937786,
                    -0.24369265,
                    -0.04191595,
                    -0.01751239,
                    -0.031481147,
                    -1.1499954,
                    -0.0007420062,
                    -0.03909005,
                    -2.4866502e-05,
                    -0.00020203409,
                    -0.12830076,
                    -1.7795454,
                    -1.5790043,
                    -2.2356224,
                    -0.28467554,
                    -3.0380623,
                    -2.3501976,
                    -0.5008367,
                    -0.027759759,
                    -0.6815571,
                    -0.089824855,
                    -0.07503136,
                    -0.045014955,
                    -0.094476335,
                    -0.26728216,
                    -0.01275724,
                    -0.004117701,
                    -0.0003067838,
                    -1.1742741
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861196
                    },
                    {
                        " ||": -0.06597989
                    },
                    {
                        " (": -0.10277666
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382234
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.58908206
                    },
                    {
                        " ||": -0.08120592
                    },
                    {
                        " (": -0.12836242
                    },
                    {
                        "point": -0.030770777
                    },
                    {
                        " instance": -0.0028452403
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Que": -0.32407424
                    },
                    {
                        "ue": -5.9085025e-05
                    },
                    {
                        ".": -0.0026368257
                    },
                    {
                        "Task": -0.0014651567
                    },
                    {
                        "))": -0.3225003
                    },
                    {
                        " {": -0.07205439
                    },
                    {
                        "\n": -0.2557226
                    },
                    {
                        "<|endoftext|>": -0.7631422
                    },
                    {
                        " /*": -1.7365566
                    },
                    {
                        " (": -0.6766985
                    },
                    {
                        "me": -0.9164538
                    },
                    {
                        "asure": -0.00026397567
                    },
                    {
                        ".": -0.0018878675
                    },
                    {
                        "ac": -0.12510477
                    },
                    {
                        "quire": -0.00015469792
                    },
                    {
                        "Del": -0.2524519
                    },
                    {
                        "ay": -0.0010530055
                    },
                    {
                        "())": -0.27711585
                    },
                    {
                        " &&": -0.18066603
                    },
                    {
                        " !": -0.8202209
                    },
                    {
                        "(": -0.2936248
                    },
                    {
                        "point": -0.068197764
                    },
                    {
                        " instance": -0.0052458714
                    },
                    {
                        "of": -4.721163e-06
                    },
                    {
                        " Occup": -0.28382042
                    },
                    {
                        "ation": -0.00017937786
                    },
                    {
                        "))": -0.24369265
                    },
                    {
                        " {": -0.04191595
                    },
                    {
                        "\n": -0.01751239
                    },
                    {
                        "               ": -0.031481147
                    },
                    {
                        " throw": -1.1499954
                    },
                    {
                        " new": -0.0007420062
                    },
                    {
                        " Ab": -0.03909005
                    },
                    {
                        "ort": -2.4866502e-05
                    },
                    {
                        "Exception": -0.00020203409
                    },
                    {
                        "(\"": -0.12830076
                    },
                    {
                        "The": -1.7343335
                    },
                    {
                        "ay": -0.94145197
                    },
                    {
                        " builds": -1.6747645
                    },
                    {
                        " build": -0.28467554
                    },
                    {
                        " of": -0.43134263
                    },
                    {
                        " is": -0.9402998
                    },
                    {
                        " non": -0.5008367
                    },
                    {
                        "-": -0.027759759
                    },
                    {
                        "job": -0.6815571
                    },
                    {
                        " items": -0.089824855
                    },
                    {
                        " is": -0.07503136
                    },
                    {
                        " not": -0.045014955
                    },
                    {
                        " supported": -0.094476335
                    },
                    {
                        "\");": -0.26728216
                    },
                    {
                        "\n": -0.01275724
                    },
                    {
                        "           ": -0.004117701
                    },
                    {
                        " }": -0.0003067838
                    },
                    {
                        "\n": -0.42519826
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6761,
                    6764,
                    6766,
                    6771,
                    6780,
                    6782,
                    6786,
                    6788,
                    6789,
                    6793,
                    6795,
                    6797,
                    6798,
                    6809,
                    6812,
                    6814,
                    6816,
                    6821,
                    6822,
                    6824,
                    6829,
                    6832,
                    6834,
                    6836,
                    6839,
                    6841,
                    6842,
                    6847,
                    6856,
                    6858,
                    6864,
                    6869,
                    6871,
                    6873,
                    6874,
                    6889,
                    6895,
                    6899,
                    6902,
                    6905,
                    6914,
                    6916,
                    6919,
                    6924,
                    6928,
                    6934,
                    6942,
                    6946,
                    6950,
                    6951,
                    6954,
                    6960,
                    6963,
                    6967,
                    6977,
                    6980,
                    6981,
                    6992,
                    6994
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            LOGGER.log(Level.FINE, \"Triggering {0}\", point);\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "           ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FINE",
                    ",",
                    " \"",
                    "Trigger",
                    "ing",
                    " {",
                    "0",
                    "}",
                    "\",",
                    " point",
                    ");",
                    "\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861196,
                    -0.06597989,
                    -0.10277666,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382234,
                    -7.1958624e-05,
                    -0.58908206,
                    -0.08120592,
                    -0.12836242,
                    -0.030770777,
                    -0.0028452403,
                    -2.0575926e-05,
                    -0.32407424,
                    -5.9085025e-05,
                    -0.0026368257,
                    -0.0014651567,
                    -0.3225003,
                    -0.07205439,
                    -0.2557226,
                    -0.8498493,
                    -3.0036056,
                    -0.0008459824,
                    -0.0002818626,
                    -0.09251439,
                    -0.00025443616,
                    -0.0043809623,
                    -0.000113328744,
                    -0.5888232,
                    -0.03226058,
                    -0.049013674,
                    -1.4539374,
                    -0.048045844,
                    -0.9349085,
                    -0.003561182,
                    -0.019194871,
                    -0.35071933,
                    -0.68734306,
                    -0.6779396,
                    -0.2719944
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861196
                    },
                    {
                        " ||": -0.06597989
                    },
                    {
                        " (": -0.10277666
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382234
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.58908206
                    },
                    {
                        " ||": -0.08120592
                    },
                    {
                        " (": -0.12836242
                    },
                    {
                        "point": -0.030770777
                    },
                    {
                        " instance": -0.0028452403
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Que": -0.32407424
                    },
                    {
                        "ue": -5.9085025e-05
                    },
                    {
                        ".": -0.0026368257
                    },
                    {
                        "Task": -0.0014651567
                    },
                    {
                        "))": -0.3225003
                    },
                    {
                        " {": -0.07205439
                    },
                    {
                        "\n": -0.2557226
                    },
                    {
                        "<|endoftext|>": -0.7631422
                    },
                    {
                        " /*": -1.7365566
                    },
                    {
                        "GER": -0.0008459824
                    },
                    {
                        ".": -0.0002818626
                    },
                    {
                        "log": -0.09251439
                    },
                    {
                        "(": -0.00025443616
                    },
                    {
                        "Level": -0.0043809623
                    },
                    {
                        ".": -0.000113328744
                    },
                    {
                        "FINE": -0.5888232
                    },
                    {
                        ",": -0.03226058
                    },
                    {
                        " \"": -0.049013674
                    },
                    {
                        "Trigger": -1.4539374
                    },
                    {
                        "ing": -0.048045844
                    },
                    {
                        " {": -0.9349085
                    },
                    {
                        "0": -0.003561182
                    },
                    {
                        "}": -0.019194871
                    },
                    {
                        "\",": -0.35071933
                    },
                    {
                        " point": -0.68734306
                    },
                    {
                        ");": -0.6779396
                    },
                    {
                        "\n": -0.2719944
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6761,
                    6764,
                    6766,
                    6771,
                    6780,
                    6782,
                    6786,
                    6788,
                    6789,
                    6793,
                    6795,
                    6797,
                    6798,
                    6809,
                    6813,
                    6816,
                    6817,
                    6820,
                    6821,
                    6826,
                    6827,
                    6831,
                    6832,
                    6834,
                    6841,
                    6844,
                    6846,
                    6847,
                    6848,
                    6850,
                    6856,
                    6858
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation || point instanceof Queue.Task)) {\n            if (!measure.acquireDelay() && !(point instanceof Occupation)) {\n                throw new AbortException(\"Delayed trigger is required to trigger non-jobs\");\n            }\n\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    " ||",
                    " point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "           ",
                    " if",
                    " (!",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " &&",
                    " !",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    "))",
                    " {",
                    "\n",
                    "               ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "Del",
                    "ayed",
                    " trigger",
                    " is",
                    " required",
                    " to",
                    " trigger",
                    " non",
                    "-",
                    "jobs",
                    "\");",
                    "\n",
                    "           ",
                    " }",
                    "\n\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861196,
                    -0.06597989,
                    -0.10277666,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382234,
                    -7.1958624e-05,
                    -1.9791329,
                    -0.104519784,
                    -0.007968402,
                    -5.3363005e-05,
                    -0.35734576,
                    -4.656436e-05,
                    -0.0020227768,
                    -0.0016898639,
                    -0.23763742,
                    -0.034665972,
                    -0.24818225,
                    -0.84544325,
                    -1.904991,
                    -1.9398522,
                    -1.0528591,
                    -0.00048060223,
                    -0.0006041681,
                    -0.2014356,
                    -0.00013633883,
                    -0.17874518,
                    -0.001552071,
                    -0.9342541,
                    -0.3032277,
                    -0.73588765,
                    -0.1684507,
                    -0.030218594,
                    -0.001953798,
                    -2.8138238e-06,
                    -0.1647672,
                    -4.5494293e-05,
                    -0.2166847,
                    -0.057440974,
                    -0.012350364,
                    -0.022305556,
                    -0.6111123,
                    -0.0007381886,
                    -0.03309738,
                    -0.00031906605,
                    -0.00023202116,
                    -0.14043985,
                    -2.742859,
                    -1.0150552,
                    -1.9336808,
                    -0.4326578,
                    -0.37849534,
                    -1.8926017,
                    -0.35758394,
                    -0.47707897,
                    -0.014048841,
                    -0.98646957,
                    -0.2583734,
                    -0.009660823,
                    -0.0026348543,
                    -0.00024990342,
                    -1.2281513
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861196
                    },
                    {
                        " ||": -0.06597989
                    },
                    {
                        " (": -0.10277666
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382234
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.58908206
                    },
                    {
                        " point": -0.104519784
                    },
                    {
                        " instance": -0.007968402
                    },
                    {
                        "of": -5.3363005e-05
                    },
                    {
                        " Que": -0.35734576
                    },
                    {
                        "ue": -4.656436e-05
                    },
                    {
                        ".": -0.0020227768
                    },
                    {
                        "Task": -0.0016898639
                    },
                    {
                        "))": -0.23763742
                    },
                    {
                        " {": -0.034665972
                    },
                    {
                        "\n": -0.24818225
                    },
                    {
                        "<|endoftext|>": -0.772717
                    },
                    {
                        " /*": -1.6434095
                    },
                    {
                        " (": -0.7150846
                    },
                    {
                        "(": -0.794152
                    },
                    {
                        "asure": -0.00048060223
                    },
                    {
                        ".": -0.0006041681
                    },
                    {
                        "ac": -0.2014356
                    },
                    {
                        "quire": -0.00013633883
                    },
                    {
                        "Del": -0.17874518
                    },
                    {
                        "ay": -0.001552071
                    },
                    {
                        "())": -0.5029892
                    },
                    {
                        " &&": -0.3032277
                    },
                    {
                        " !": -0.73588765
                    },
                    {
                        "(": -0.1684507
                    },
                    {
                        "point": -0.030218594
                    },
                    {
                        " instance": -0.001953798
                    },
                    {
                        "of": -2.8138238e-06
                    },
                    {
                        " Occup": -0.1647672
                    },
                    {
                        "ation": -4.5494293e-05
                    },
                    {
                        "))": -0.2166847
                    },
                    {
                        " {": -0.057440974
                    },
                    {
                        "\n": -0.012350364
                    },
                    {
                        "               ": -0.022305556
                    },
                    {
                        " throw": -0.6111123
                    },
                    {
                        " new": -0.0007381886
                    },
                    {
                        " Ab": -0.03309738
                    },
                    {
                        "ort": -0.00031906605
                    },
                    {
                        "Exception": -0.00023202116
                    },
                    {
                        "(\"": -0.14043985
                    },
                    {
                        "The": -1.8635674
                    },
                    {
                        "ay": -0.5291678
                    },
                    {
                        " triggering": -1.3914322
                    },
                    {
                        " is": -0.4326578
                    },
                    {
                        " required": -0.37849534
                    },
                    {
                        " for": -0.7408395
                    },
                    {
                        " trigger": -0.35758394
                    },
                    {
                        " non": -0.47707897
                    },
                    {
                        "-": -0.014048841
                    },
                    {
                        "job": -0.9228633
                    },
                    {
                        "\");": -0.2583734
                    },
                    {
                        "\n": -0.009660823
                    },
                    {
                        "           ": -0.0026348543
                    },
                    {
                        " }": -0.00024990342
                    },
                    {
                        "\n": -0.39015773
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6763,
                    6769,
                    6778,
                    6780,
                    6784,
                    6786,
                    6787,
                    6791,
                    6793,
                    6795,
                    6796,
                    6807,
                    6810,
                    6813,
                    6815,
                    6820,
                    6821,
                    6823,
                    6828,
                    6831,
                    6833,
                    6835,
                    6838,
                    6840,
                    6841,
                    6846,
                    6855,
                    6857,
                    6863,
                    6868,
                    6870,
                    6872,
                    6873,
                    6888,
                    6894,
                    6898,
                    6901,
                    6904,
                    6913,
                    6915,
                    6918,
                    6922,
                    6930,
                    6933,
                    6942,
                    6945,
                    6953,
                    6957,
                    6958,
                    6962,
                    6965,
                    6966,
                    6977,
                    6979
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861196,
                    -0.06597989,
                    -0.10277666,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382234,
                    -7.1958624e-05,
                    -0.58908206,
                    -0.08120592,
                    -0.12836242,
                    -0.030770777,
                    -0.0028452403,
                    -2.0575926e-05,
                    -0.32407424,
                    -5.9085025e-05,
                    -0.0026368257,
                    -0.0014651567,
                    -0.3225003,
                    -0.07205439,
                    -0.2557226
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861196
                    },
                    {
                        " ||": -0.06597989
                    },
                    {
                        " (": -0.10277666
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382234
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.58908206
                    },
                    {
                        " ||": -0.08120592
                    },
                    {
                        " (": -0.12836242
                    },
                    {
                        "point": -0.030770777
                    },
                    {
                        " instance": -0.0028452403
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Que": -0.32407424
                    },
                    {
                        "ue": -5.9085025e-05
                    },
                    {
                        ".": -0.0026368257
                    },
                    {
                        "Task": -0.0014651567
                    },
                    {
                        "))": -0.3225003
                    },
                    {
                        " {": -0.07205439
                    },
                    {
                        "\n": -0.2557226
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6761,
                    6764,
                    6766,
                    6771,
                    6780,
                    6782,
                    6786,
                    6788,
                    6789,
                    6793,
                    6795,
                    6797
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            /* END FIX */\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "           ",
                    " /*",
                    " END",
                    " FIX",
                    " */",
                    "\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861386,
                    -0.06597964,
                    -0.10277693,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382204,
                    -7.1958624e-05,
                    -0.589081,
                    -0.08120592,
                    -0.12836255,
                    -0.030770777,
                    -0.0028452403,
                    -2.0575926e-05,
                    -0.32407442,
                    -5.9085025e-05,
                    -0.0026368257,
                    -0.0014651567,
                    -0.32250127,
                    -0.07205459,
                    -0.2557223,
                    -0.8498492,
                    -1.7365566,
                    -0.8390494,
                    -1.2850928,
                    -0.6008119,
                    -0.19448209
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861386
                    },
                    {
                        " ||": -0.06597964
                    },
                    {
                        " (": -0.10277693
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382204
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.589081
                    },
                    {
                        " ||": -0.08120592
                    },
                    {
                        " (": -0.12836255
                    },
                    {
                        "point": -0.030770777
                    },
                    {
                        " instance": -0.0028452403
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Que": -0.32407442
                    },
                    {
                        "ue": -5.9085025e-05
                    },
                    {
                        ".": -0.0026368257
                    },
                    {
                        "Task": -0.0014651567
                    },
                    {
                        "))": -0.32250127
                    },
                    {
                        " {": -0.07205459
                    },
                    {
                        "\n": -0.2557223
                    },
                    {
                        "<|endoftext|>": -0.76314205
                    },
                    {
                        " /*": -1.7365566
                    },
                    {
                        " END": -0.8390494
                    },
                    {
                        " FIX": -1.2850928
                    },
                    {
                        " */": -0.6008119
                    },
                    {
                        "\n": -0.19448209
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6761,
                    6764,
                    6766,
                    6771,
                    6780,
                    6782,
                    6786,
                    6788,
                    6789,
                    6793,
                    6795,
                    6797,
                    6798,
                    6809,
                    6812,
                    6816,
                    6820,
                    6823
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (",
                    " !",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -0.46078768,
                    -0.27715856,
                    -0.019757481,
                    -2.693682e-06,
                    -9.24644e-05,
                    -0.0008180031,
                    -2.3795494e-05,
                    -0.00043641243,
                    -8.176345e-06,
                    -0.060861386,
                    -0.06597964,
                    -0.10277693,
                    -0.032721695,
                    -0.0052329283,
                    -1.1398727e-05,
                    -0.24382204,
                    -7.1958624e-05,
                    -0.589081,
                    -0.08120592,
                    -0.12836255,
                    -0.030770777,
                    -0.0028452403,
                    -2.0575926e-05,
                    -0.32407442,
                    -5.9085025e-05,
                    -0.0026368257,
                    -0.0014651567,
                    -0.32250127,
                    -0.07205459,
                    -0.2557223
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        " !": -0.27715856
                    },
                    {
                        "me": -0.019757481
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.24644e-05
                    },
                    {
                        "ac": -0.0008180031
                    },
                    {
                        "quire": -2.3795494e-05
                    },
                    {
                        "Del": -0.00043641243
                    },
                    {
                        "ay": -8.176345e-06
                    },
                    {
                        "()": -0.060861386
                    },
                    {
                        " ||": -0.06597964
                    },
                    {
                        " (": -0.10277693
                    },
                    {
                        "point": -0.032721695
                    },
                    {
                        " instance": -0.0052329283
                    },
                    {
                        "of": -1.1398727e-05
                    },
                    {
                        " Occup": -0.24382204
                    },
                    {
                        "ation": -7.1958624e-05
                    },
                    {
                        ")": -0.589081
                    },
                    {
                        " ||": -0.08120592
                    },
                    {
                        " (": -0.12836255
                    },
                    {
                        "point": -0.030770777
                    },
                    {
                        " instance": -0.0028452403
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Que": -0.32407442
                    },
                    {
                        "ue": -5.9085025e-05
                    },
                    {
                        ".": -0.0026368257
                    },
                    {
                        "Task": -0.0014651567
                    },
                    {
                        "))": -0.32250127
                    },
                    {
                        " {": -0.07205459
                    },
                    {
                        "\n": -0.2557223
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6704,
                    6706,
                    6708,
                    6713,
                    6714,
                    6716,
                    6721,
                    6724,
                    6726,
                    6728,
                    6731,
                    6733,
                    6738,
                    6747,
                    6749,
                    6755,
                    6760,
                    6761,
                    6764,
                    6766,
                    6771,
                    6780,
                    6782,
                    6786,
                    6788,
                    6789,
                    6793,
                    6795,
                    6797
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if (!measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            if (measure.acquireDelay() && !(point instanceof Occupation)) {\n                throw new AbortException(\"Delayed builds only supported for jobs\");\n            }\n            if (!(point instanceof OccupationBlendIn.ParameterizedJob)) {\n    ",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (!",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    ")",
                    " ||",
                    " (",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "           ",
                    " if",
                    " (",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "()",
                    " &&",
                    " !",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    "))",
                    " {",
                    "\n",
                    "               ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "Del",
                    "ayed",
                    " builds",
                    " only",
                    " supported",
                    " for",
                    " jobs",
                    "\");",
                    "\n",
                    "           ",
                    " }",
                    "\n",
                    "           ",
                    " if",
                    " (!",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    "Bl",
                    "end",
                    "In",
                    ".",
                    "Parameter",
                    "ized",
                    "Job",
                    "))",
                    " {",
                    "\n",
                    "    "
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -1.7092694,
                    -0.07967387,
                    -5.460492e-07,
                    -0.00015338662,
                    -0.0015176262,
                    -1.843017e-05,
                    -0.000673174,
                    -1.5687427e-05,
                    -0.099057205,
                    -0.06305942,
                    -0.16006821,
                    -0.032800097,
                    -0.005056666,
                    -1.306671e-05,
                    -0.24415044,
                    -0.0001033124,
                    -0.8238841,
                    -0.06913866,
                    -0.12893455,
                    -0.024005327,
                    -0.0029687416,
                    -2.0815281e-05,
                    -0.34842792,
                    -7.219704e-05,
                    -0.0030453266,
                    -0.0016816836,
                    -0.14098139,
                    -0.09589637,
                    -0.25326827,
                    -0.87188315,
                    -1.8210744,
                    -0.7149786,
                    -0.90662724,
                    -0.00030809414,
                    -0.0023568186,
                    -0.13483103,
                    -3.881579e-05,
                    -0.24969307,
                    -0.0008384657,
                    -0.7535432,
                    -0.10009004,
                    -0.6708023,
                    -0.19661358,
                    -0.050201524,
                    -0.0039235605,
                    -4.838501e-06,
                    -0.23960021,
                    -0.00013764732,
                    -0.2712118,
                    -0.046247106,
                    -0.01626587,
                    -0.07468596,
                    -1.050166,
                    -0.0007823898,
                    -0.035380486,
                    -3.166233e-05,
                    -0.00019213694,
                    -0.11950976,
                    -1.6965823,
                    -1.0881995,
                    -1.6841407,
                    -2.5610473,
                    -0.9621434,
                    -0.087576605,
                    -0.3443551,
                    -0.40506393,
                    -0.01205007,
                    -0.0035712912,
                    -0.0004278247,
                    -0.42127645,
                    -1.0396949,
                    -1.3850917,
                    -1.7305403,
                    -0.85129714,
                    -0.1713211,
                    -0.06935713,
                    -9.846204e-06,
                    -0.86135596,
                    -0.0026065279,
                    -1.9939561,
                    -7.946878e-05,
                    -0.00015004877,
                    -0.20573822,
                    -0.0054021487,
                    -0.00025801334,
                    -0.0034483713,
                    -0.30288517,
                    -0.08040392,
                    -0.021065043,
                    -0.6970302
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        "me": -0.07967387
                    },
                    {
                        "asure": -5.460492e-07
                    },
                    {
                        ".": -0.00015338662
                    },
                    {
                        "ac": -0.0015176262
                    },
                    {
                        "quire": -1.843017e-05
                    },
                    {
                        "Del": -0.000673174
                    },
                    {
                        "ay": -1.5687427e-05
                    },
                    {
                        "()": -0.099057205
                    },
                    {
                        " ||": -0.06305942
                    },
                    {
                        " (": -0.16006821
                    },
                    {
                        "point": -0.032800097
                    },
                    {
                        " instance": -0.005056666
                    },
                    {
                        "of": -1.306671e-05
                    },
                    {
                        " Occup": -0.24415044
                    },
                    {
                        "ation": -0.0001033124
                    },
                    {
                        ")": -0.8238841
                    },
                    {
                        " ||": -0.06913866
                    },
                    {
                        " (": -0.12893455
                    },
                    {
                        "point": -0.024005327
                    },
                    {
                        " instance": -0.0029687416
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Que": -0.34842792
                    },
                    {
                        "ue": -7.219704e-05
                    },
                    {
                        ".": -0.0030453266
                    },
                    {
                        "Task": -0.0016816836
                    },
                    {
                        "))": -0.14098139
                    },
                    {
                        " {": -0.09589637
                    },
                    {
                        "\n": -0.25326827
                    },
                    {
                        "<|endoftext|>": -0.7413918
                    },
                    {
                        " /*": -1.7847575
                    },
                    {
                        " (": -0.7149786
                    },
                    {
                        "me": -0.90662724
                    },
                    {
                        "asure": -0.00030809414
                    },
                    {
                        ".": -0.0023568186
                    },
                    {
                        "ac": -0.13483103
                    },
                    {
                        "quire": -3.881579e-05
                    },
                    {
                        "Del": -0.24969307
                    },
                    {
                        "ay": -0.0008384657
                    },
                    {
                        "())": -0.6401551
                    },
                    {
                        " &&": -0.10009004
                    },
                    {
                        " !": -0.6708023
                    },
                    {
                        "(": -0.19661358
                    },
                    {
                        "point": -0.050201524
                    },
                    {
                        " instance": -0.0039235605
                    },
                    {
                        "of": -4.838501e-06
                    },
                    {
                        " Occup": -0.23960021
                    },
                    {
                        "ation": -0.00013764732
                    },
                    {
                        "))": -0.2712118
                    },
                    {
                        " {": -0.046247106
                    },
                    {
                        "\n": -0.01626587
                    },
                    {
                        "               ": -0.07468596
                    },
                    {
                        " throw": -1.050166
                    },
                    {
                        " new": -0.0007823898
                    },
                    {
                        " Ab": -0.035380486
                    },
                    {
                        "ort": -3.166233e-05
                    },
                    {
                        "Exception": -0.00019213694
                    },
                    {
                        "(\"": -0.11950976
                    },
                    {
                        "Del": -1.6965823
                    },
                    {
                        "ay": -0.72930324
                    },
                    {
                        " builds": -1.6841407
                    },
                    {
                        " are": -0.7929619
                    },
                    {
                        " work": -0.93166393
                    },
                    {
                        " for": -0.087576605
                    },
                    {
                        " jobs": -0.3443551
                    },
                    {
                        "\");": -0.40506393
                    },
                    {
                        "\n": -0.01205007
                    },
                    {
                        "           ": -0.0035712912
                    },
                    {
                        " }": -0.0004278247
                    },
                    {
                        "\n": -0.42127645
                    },
                    {
                        "<|endoftext|>": -0.570963
                    },
                    {
                        " if": -1.3850917
                    },
                    {
                        " (": -0.5279866
                    },
                    {
                        "(": -0.85129714
                    },
                    {
                        "point": -0.1713211
                    },
                    {
                        " instance": -0.06935713
                    },
                    {
                        "of": -9.846204e-06
                    },
                    {
                        " Occup": -0.86135596
                    },
                    {
                        "ation": -0.0026065279
                    },
                    {
                        "))": -0.34102106
                    },
                    {
                        "end": -7.946878e-05
                    },
                    {
                        "In": -0.00015004877
                    },
                    {
                        ".": -0.20573822
                    },
                    {
                        "Parameter": -0.0054021487
                    },
                    {
                        "ized": -0.00025801334
                    },
                    {
                        "Job": -0.0034483713
                    },
                    {
                        "))": -0.30288517
                    },
                    {
                        " {": -0.08040392
                    },
                    {
                        "\n": -0.021065043
                    },
                    {
                        "    ": -0.6970302
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6705,
                    6707,
                    6712,
                    6713,
                    6715,
                    6720,
                    6723,
                    6725,
                    6727,
                    6730,
                    6732,
                    6737,
                    6746,
                    6748,
                    6754,
                    6759,
                    6760,
                    6763,
                    6765,
                    6770,
                    6779,
                    6781,
                    6785,
                    6787,
                    6788,
                    6792,
                    6794,
                    6796,
                    6797,
                    6808,
                    6811,
                    6813,
                    6815,
                    6820,
                    6821,
                    6823,
                    6828,
                    6831,
                    6833,
                    6835,
                    6838,
                    6840,
                    6841,
                    6846,
                    6855,
                    6857,
                    6863,
                    6868,
                    6870,
                    6872,
                    6873,
                    6888,
                    6894,
                    6898,
                    6901,
                    6904,
                    6913,
                    6915,
                    6918,
                    6922,
                    6929,
                    6934,
                    6944,
                    6948,
                    6953,
                    6956,
                    6957,
                    6968,
                    6970,
                    6971,
                    6982,
                    6985,
                    6988,
                    6989,
                    6994,
                    7003,
                    7005,
                    7011,
                    7016,
                    7018,
                    7021,
                    7023,
                    7024,
                    7033,
                    7037,
                    7040,
                    7042,
                    7044,
                    7045
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "        if (!measure.acquireDelay()) {\n            if(!(point instanceof Occupation)){\n                if(!(point instanceof OccupationBlendIn.ParameterizedJob)){\n                    if(!(point instanceof Queue.Task)){\n                        String s;\n                        if(point instanceof Describable){\n                            s =  ((Describable) point).getDescriptor().getDisplayName();\n                        }else{\n                            s =  point.getClass().getName();\n                        }\n                        throw new AbortException(\"The item named \" + occupation + \" is a \" + s  + \" which is not something that can be built\");\n                    }else{\n                        if (measure.acquireParameter() == null || measure.acquireParameter().isEmpty()) {\n                            Queue.Task undertaking = (Queue.Task) point;\n                            String itemEncoded = TheoreticalAccountShortLetter.encodeTo(point);\n                            hearer.getLogger().println(\"Scheduling item: \" +itemEncoded );\n                            String taskName = undertaking.getFullDisplayName();\n                            String name  = Messages.BuildTriggerStepExecution_building_(taskName);\n                            LabelAction labelAction = new LabelAction(name);\n                            knob.addAction(labelAction);\n                            List<Activity> action = new ArrayList<>();\n                            if (measure.acquireDelay()) {\n                                MeasureCircumstance linguisticContext = acquireLinguisticContext();\n                                boolean beSpread =  measure.beSpread();\n                                action.add(new PhysiqueInductionActivity(linguisticContext, beSpread ));\n                                LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{undertaking, linguisticContext});\n                            }\n                            Cause.UpstreamCause cause = new Cause.UpstreamCause(raiseTally);\n                            ReasonActivity causeAction = new ReasonActivity(cause);\n                            action.add( causeAction);\n                            Integer lullTimePeriod = measure.acquireLullTimePeriod();\n                            if (lullTimePeriod == null) {\n                                try {\n                                    Class",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "       ",
                    " if",
                    " (!",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "())",
                    " {",
                    "\n",
                    "           ",
                    " if",
                    "(",
                    "!",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    "))",
                    "{",
                    "\n",
                    "               ",
                    " if",
                    "(",
                    "!",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Occup",
                    "ation",
                    "Bl",
                    "end",
                    "In",
                    ".",
                    "Parameter",
                    "ized",
                    "Job",
                    "))",
                    "{",
                    "\n",
                    "                   ",
                    " if",
                    "(",
                    "!",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    "{",
                    "\n",
                    "                       ",
                    " String",
                    " s",
                    ";",
                    "\n",
                    "                       ",
                    " if",
                    "(",
                    "point",
                    " instance",
                    "of",
                    " Desc",
                    "rib",
                    "able",
                    "){",
                    "\n",
                    "                ",
                    "           ",
                    " s",
                    " =",
                    " ",
                    " ((",
                    "Desc",
                    "rib",
                    "able",
                    ")",
                    " point",
                    ").",
                    "get",
                    "Desc",
                    "ript",
                    "or",
                    "().",
                    "get",
                    "Display",
                    "Name",
                    "();",
                    "\n",
                    "                       ",
                    " }",
                    "else",
                    "{",
                    "\n",
                    "                ",
                    "           ",
                    " s",
                    " =",
                    " ",
                    " point",
                    ".",
                    "get",
                    "Class",
                    "().",
                    "get",
                    "Name",
                    "();",
                    "\n",
                    "                       ",
                    " }",
                    "\n",
                    "                       ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "The",
                    " item",
                    " named",
                    " \"",
                    " +",
                    " occupation",
                    " +",
                    " \"",
                    " is",
                    " a",
                    " \"",
                    " +",
                    " s",
                    " ",
                    " +",
                    " \"",
                    " which",
                    " is",
                    " not",
                    " something",
                    " that",
                    " can",
                    " be",
                    " built",
                    "\");",
                    "\n",
                    "                   ",
                    " }",
                    "else",
                    "{",
                    "\n",
                    "                       ",
                    " if",
                    " (",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Parameter",
                    "()",
                    " ==",
                    " null",
                    " ||",
                    " measure",
                    ".",
                    "ac",
                    "quire",
                    "Parameter",
                    "().",
                    "is",
                    "Empty",
                    "())",
                    " {",
                    "\n",
                    "                ",
                    "           ",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    " undertaking",
                    " =",
                    " (",
                    "Queue",
                    ".",
                    "Task",
                    ")",
                    " point",
                    ";",
                    "\n",
                    "                ",
                    "           ",
                    " String",
                    " item",
                    "Enc",
                    "oded",
                    " =",
                    " The",
                    "oret",
                    "ical",
                    "Account",
                    "Short",
                    "Letter",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "point",
                    ");",
                    "\n",
                    "                ",
                    "           ",
                    " he",
                    "arer",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " item",
                    ":",
                    " \"",
                    " +",
                    "item",
                    "Enc",
                    "oded",
                    " );",
                    "\n",
                    "                ",
                    "           ",
                    " String",
                    " task",
                    "Name",
                    " =",
                    " undertaking",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "();",
                    "\n",
                    "                ",
                    "           ",
                    " String",
                    " name",
                    " ",
                    " =",
                    " Messages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "task",
                    "Name",
                    ");",
                    "\n",
                    "                ",
                    "           ",
                    " Label",
                    "Action",
                    " label",
                    "Action",
                    " =",
                    " new",
                    " Label",
                    "Action",
                    "(",
                    "name",
                    ");",
                    "\n",
                    "                ",
                    "           ",
                    " knob",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "label",
                    "Action",
                    ");",
                    "\n",
                    "                ",
                    "           ",
                    " List",
                    "<",
                    "Activity",
                    ">",
                    " action",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    ">",
                    "();",
                    "\n",
                    "                ",
                    "           ",
                    " if",
                    " (",
                    "me",
                    "asure",
                    ".",
                    "ac",
                    "quire",
                    "Del",
                    "ay",
                    "())",
                    " {",
                    "\n",
                    "                ",
                    "               ",
                    " Measure",
                    "Circ",
                    "um",
                    "st",
                    "ance",
                    " linguistic",
                    "Context",
                    " =",
                    " acquire",
                    "L",
                    "ingu",
                    "istic",
                    "Context",
                    "();",
                    "\n",
                    "                ",
                    "               ",
                    " boolean",
                    " be",
                    "Spread",
                    " =",
                    " ",
                    " measure",
                    ".",
                    "be",
                    "Spread",
                    "();",
                    "\n",
                    "                ",
                    "               ",
                    " action",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Phys",
                    "ique",
                    "Ind",
                    "uction",
                    "Activity",
                    "(",
                    "ling",
                    "u",
                    "istic",
                    "Context",
                    ",",
                    " be",
                    "Spread",
                    " ));",
                    "\n",
                    "                ",
                    "               ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "sc",
                    "hed",
                    "uling",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "under",
                    "taking",
                    ",",
                    " linguistic",
                    "Context",
                    "});",
                    "\n",
                    "                ",
                    "           ",
                    " }",
                    "\n",
                    "                ",
                    "           ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "raise",
                    "T",
                    "ally",
                    ");",
                    "\n",
                    "                ",
                    "           ",
                    " Reason",
                    "Activity",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Reason",
                    "Activity",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                ",
                    "           ",
                    " action",
                    ".",
                    "add",
                    "(",
                    " cause",
                    "Action",
                    ");",
                    "\n",
                    "                ",
                    "           ",
                    " Integer",
                    " lull",
                    "Time",
                    "Per",
                    "iod",
                    " =",
                    " measure",
                    ".",
                    "ac",
                    "quire",
                    "L",
                    "ull",
                    "Time",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                ",
                    "           ",
                    " if",
                    " (",
                    "l",
                    "ull",
                    "Time",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                ",
                    "               ",
                    " try",
                    " {",
                    "\n",
                    "                ",
                    "                   ",
                    " Class"
                ],
                "token_logprobs": [
                    -0.04009425,
                    -0.04928358,
                    -0.042408723,
                    -1.7092694,
                    -0.07967387,
                    -5.460492e-07,
                    -0.00015338662,
                    -0.0015176262,
                    -1.843017e-05,
                    -0.000673174,
                    -1.5687427e-05,
                    -2.364625,
                    -0.007431915,
                    -0.095948264,
                    -0.443961,
                    -0.9293794,
                    -0.71548516,
                    -0.33310407,
                    -0.022526765,
                    -0.004552615,
                    -0.000984745,
                    -1.1278585e-05,
                    -0.12607145,
                    -7.1719274e-05,
                    -0.5208138,
                    -0.10905802,
                    -0.018038427,
                    -0.31896132,
                    -0.99643874,
                    -0.09759885,
                    -0.05771928,
                    -0.0050655915,
                    -0.00070019584,
                    -0.00022623815,
                    -6.031526e-06,
                    -0.49500197,
                    -6.921402e-05,
                    -0.008439192,
                    -3.0826937e-05,
                    -3.7863996e-05,
                    -0.021062244,
                    -0.0025016544,
                    -7.3865966e-05,
                    -0.0008582684,
                    -0.004689741,
                    -0.00917791,
                    -0.007289552,
                    -0.014731289,
                    -0.20338178,
                    -0.02297945,
                    -0.020194018,
                    -0.0012686079,
                    -0.00078179466,
                    -9.9022756e-05,
                    -3.883893e-06,
                    -0.0126462225,
                    -2.272356e-05,
                    -0.00050039747,
                    -0.0006501517,
                    -0.0027765613,
                    -0.0077761766,
                    -0.010657235,
                    -0.018855339,
                    -0.11382682,
                    -0.008971902,
                    -0.010868952,
                    -0.003479115,
                    -0.0024316246,
                    -0.0013056096,
                    -0.017592158,
                    -0.0012874063,
                    -0.0001375281,
                    -2.3360508e-06,
                    -0.003833212,
                    -4.0040345e-06,
                    -2.2159093e-06,
                    -0.0024799022,
                    -0.0012831083,
                    -0.0015378626,
                    -0.0035879223,
                    -0.0017553038,
                    -0.0023522794,
                    -0.037164785,
                    -0.0009901179,
                    -0.00010987075,
                    -2.3435998e-05,
                    -1.5006569e-06,
                    -0.00012560723,
                    -0.0015108811,
                    -0.00019523638,
                    -0.00011201744,
                    -0.0006382224,
                    -2.8138238e-06,
                    -3.076318e-07,
                    -0.0001033124,
                    -6.635395e-05,
                    -8.8290224e-05,
                    -2.5464416e-05,
                    -0.00019452299,
                    -0.0017182213,
                    -0.00085123134,
                    -5.503005e-05,
                    -0.0010861811,
                    -0.00072972104,
                    -0.00050540705,
                    -0.0004113101,
                    -0.00078048056,
                    -0.00025932747,
                    -0.00030928716,
                    -0.0038186123,
                    -0.0003601489,
                    -2.9041616e-05,
                    -2.0696069e-05,
                    -7.005035e-05,
                    -4.2392992e-05,
                    -6.051553e-05,
                    -0.0005192418,
                    -8.7457636e-05,
                    -0.000903609,
                    -0.00040224646,
                    -3.643162e-05,
                    -0.009764706,
                    -0.006517906,
                    -0.0065833023,
                    -0.00012667918,
                    -0.003346879,
                    -6.9861335e-06,
                    -6.087316e-05,
                    -0.0024789455,
                    -0.0041243457,
                    -0.00071021594,
                    -0.0013762166,
                    -0.0033239732,
                    -0.00042019345,
                    -0.0014422939,
                    -0.0009841517,
                    -0.0011417944,
                    -0.00095378456,
                    -0.00061311346,
                    -0.0011194169,
                    -0.000515904,
                    -0.0024341336,
                    -0.028113173,
                    -0.00015541504,
                    -0.0011263395,
                    -0.0012730233,
                    -0.0013010148,
                    -0.00033868288,
                    -0.0019580943,
                    -0.0005365965,
                    -0.00025777495,
                    -0.00038042187,
                    -0.0034411335,
                    -0.0051968587,
                    -0.010550248,
                    -0.004247706,
                    -0.00011869313,
                    -0.1081865,
                    -0.0037500449,
                    -0.019440917,
                    -0.012614714,
                    -0.42873755,
                    -0.025602933,
                    -0.0035211653,
                    -2.693682e-06,
                    -9.2941234e-05,
                    -0.00029354883,
                    -1.2622395e-06,
                    -0.0014729146,
                    -0.0021805272,
                    -0.019539801,
                    -0.00019857421,
                    -0.012247119,
                    -0.0026293558,
                    -9.130952e-06,
                    -0.00011392572,
                    -3.051303e-06,
                    -5.3716885e-05,
                    -0.000120601406,
                    -0.00047726158,
                    -1.4736571e-05,
                    -0.0033119519,
                    -0.00043426573,
                    -0.010565006,
                    -0.00186601,
                    -0.0034989729,
                    -0.049693048,
                    -2.1529595e-05,
                    -0.00039043918,
                    -0.0005716645,
                    -0.08701802,
                    -0.0008281433,
                    -0.00053743285,
                    -0.0004312836,
                    -1.9765537e-06,
                    -1.402038e-05,
                    -0.00012453248,
                    -0.0014036149,
                    -0.00011475737,
                    -0.012259127,
                    -0.00085993914,
                    -0.0019551057,
                    -0.17895281,
                    -0.056066766,
                    -0.0047238166,
                    -0.00010522067,
                    -0.0013106248,
                    -0.003683577,
                    -1.5006569e-06,
                    -1.3823812e-06,
                    -5.197998e-06,
                    -5.586358e-05,
                    -6.3900848e-06,
                    -4.3347598e-05,
                    -0.00012226657,
                    -2.4543265e-06,
                    -0.0001290643,
                    -0.00035490093,
                    -0.013826297,
                    -0.00026552632,
                    -0.004705792,
                    -0.00040821065,
                    -0.0008979423,
                    -0.03950956,
                    -9.055464e-07,
                    -4.0246297e-05,
                    -0.00036754078,
                    -0.00028949478,
                    -1.5687427e-05,
                    -8.88872e-05,
                    -0.00041804678,
                    -0.0017889787,
                    -0.019973686,
                    -9.56821e-05,
                    -0.0009778243,
                    -0.006703607,
                    -0.002200773,
                    -0.0011239534,
                    -0.00045132102,
                    -0.047029413,
                    -1.6521892e-05,
                    -4.277735e-07,
                    -0.0107159745,
                    -0.016552707,
                    -0.0014055233,
                    -0.0025275864,
                    -0.11229327,
                    -0.02169449,
                    -0.00054685504,
                    -0.001897421,
                    -0.0006842087,
                    -5.312365e-05,
                    -3.5717305e-05,
                    -0.0033832404,
                    -0.00060035154,
                    -4.0040345e-06,
                    -0.0001033124,
                    -0.0038450586,
                    -0.00042305636,
                    -0.00091100833,
                    -0.024909304,
                    -0.002660015,
                    -0.018708728,
                    -1.2468796e-05,
                    -0.0048729484,
                    -4.489638e-05,
                    -0.00065218104,
                    -7.481963e-05,
                    -0.00033689477,
                    -0.00019153998,
                    -5.4364154e-06,
                    -0.000111657944,
                    -0.0007129596,
                    -0.00057560124,
                    -0.0004529918,
                    -7.937927e-06,
                    -0.0003411891,
                    -0.00352607,
                    -0.00040129185,
                    -0.0005108944,
                    -0.056940682,
                    -0.00021491051,
                    -0.000992502,
                    -0.0003116732,
                    -0.00039031997,
                    -0.00020012581,
                    -6.9453374e-05,
                    -6.3900848e-06,
                    -8.268835e-05,
                    -0.00030785665,
                    -0.00022707166,
                    -0.001457516,
                    -0.00025467362,
                    -0.0004891853,
                    -0.0024852215,
                    -5.9085025e-05,
                    -7.422359e-05,
                    -4.8233283e-05,
                    -3.9055147e-05,
                    -0.0007899083,
                    -1.7400124e-06,
                    -8.447461e-05,
                    -0.06120839,
                    -0.0066136043,
                    -0.012353563,
                    -0.2481765,
                    -0.0019520062,
                    -0.017076781,
                    -0.00022492779,
                    -0.019240137,
                    -0.0010698909,
                    -0.0018727588,
                    -0.00019285125,
                    -3.2906587e-06,
                    -0.00022194568,
                    -0.0057331272,
                    -0.00010402765,
                    -0.07314766,
                    -0.0056123403,
                    -0.019832263,
                    -0.35034832,
                    -0.004517467,
                    -0.0008769419,
                    -1.022884e-06,
                    -4.048565e-05,
                    -0.0015264626,
                    -1.1430258e-06,
                    -0.0008842211,
                    -1.1753544e-05,
                    -0.00058406877,
                    -0.000109155495,
                    -0.0011288456,
                    -6.5041706e-05,
                    -0.0010237084,
                    -0.005355408,
                    -0.000109155495,
                    -5.197998e-06,
                    -2.3360508e-06,
                    -1.5006569e-06,
                    -0.0012178804,
                    -3.6074933e-05,
                    -0.00010212031,
                    -0.0011514624,
                    -7.899194e-05,
                    -3.6482897e-06,
                    -7.8540467e-07,
                    -5.197998e-06,
                    -7.326899e-05,
                    -0.00049324025,
                    -6.611553e-05,
                    -0.0003146553,
                    -0.017292166,
                    -0.0011863718,
                    -0.000368853,
                    -0.00023690966,
                    -0.0061205225,
                    -0.00047445972,
                    -1.0920954e-05,
                    -0.00022504793,
                    -4.859278e-05,
                    -7.469949e-05,
                    -0.00064740895,
                    -9.365555e-05,
                    -0.00016232915,
                    -0.0016364264,
                    -1.8073477e-05,
                    -8.7733215e-06,
                    -1.402038e-05,
                    -0.00036944906,
                    -0.0009471023,
                    -3.2973632e-05,
                    -2.28437e-05,
                    -1.3823812e-06,
                    -4.573365e-05,
                    -4.501652e-05,
                    -0.00019320888,
                    -1.1159372e-05,
                    -6.827632e-08,
                    -1.5006569e-06,
                    -0.00018295787,
                    -0.004700223,
                    -9.846204e-06,
                    -0.009106449,
                    -0.0006028587,
                    -4.0963423e-05,
                    -0.0023734893,
                    -0.00058687344,
                    -2.5744682e-06,
                    -1.0444119e-05,
                    -0.00027387374,
                    -4.721163e-06,
                    -4.656436e-05,
                    -3.170517e-06,
                    -0.00019082283,
                    -1.6207987e-06,
                    -2.045765e-05,
                    -5.157113e-05,
                    -0.00052973966,
                    -6.827632e-08,
                    -1.9028084e-05,
                    -0.000179498,
                    -0.00013621869,
                    -4.3465872e-05,
                    -0.000108559456,
                    -2.5941252e-05,
                    -1.0561456e-05,
                    -0.00020215422,
                    -3.452334e-05,
                    -9.012677e-06,
                    -4.716134e-05,
                    -0.000104267005,
                    -0.00013156954,
                    -2.6773841e-05,
                    -1.1514188e-05,
                    -6.396884e-05,
                    -0.00019762148,
                    -1.2112103e-05,
                    -5.8130416e-05,
                    -0.00017234455,
                    -3.170517e-06,
                    -0.000118333635,
                    -0.0006570705,
                    -0.00014969209,
                    -0.0011536111,
                    -1.9382902e-05,
                    -0.00962658,
                    -0.000754295,
                    -0.001999365,
                    -0.014633601,
                    -0.00017914227,
                    -0.0012839455,
                    -2.3556138e-05,
                    -5.0856816e-05,
                    -0.00017854528,
                    -0.00013586106,
                    -8.1136764e-05,
                    -8.137612e-05,
                    -4.2433903e-06,
                    -2.3556138e-05,
                    -2.2159093e-06,
                    -2.9311614e-06,
                    -7.362661e-05,
                    -0.0005893778,
                    -3.5120327e-05,
                    -1.8841804e-07,
                    -0.00014074863,
                    -0.00020871071,
                    -8.054166e-05,
                    -8.876706e-05,
                    -0.0025479035,
                    -5.7891062e-05,
                    -0.0006141873,
                    -0.00011821817,
                    -3.5477948e-05,
                    -3.4048382e-05,
                    -0.0001345479,
                    -5.912312e-06,
                    -2.3317722e-05,
                    -3.678925e-05,
                    -0.00010057153,
                    -0.00018999024,
                    -3.7863996e-05,
                    -6.99302e-05,
                    -0.0011646476,
                    -4.2433903e-06,
                    -3.529076e-06,
                    -8.0580685e-06,
                    -0.006984589,
                    -1.1039229e-05,
                    -0.00020871071,
                    -0.009131652,
                    -0.0013179049,
                    -0.0017530931,
                    -0.049225096,
                    -0.00054327596,
                    -0.00013729343,
                    -0.00013991416,
                    -4.9427246e-05,
                    -0.00021896455,
                    -0.0006517033,
                    -3.529076e-06,
                    -1.4854846e-05,
                    -1.8841804e-07,
                    -2.4986643e-05,
                    -5.460492e-07,
                    -8.892534e-06,
                    -4.6010214e-06,
                    -2.5744682e-06,
                    -4.954739e-05,
                    -0.0012345903,
                    -0.00021526907,
                    -0.00047028364,
                    -0.005314301,
                    -0.00012918444,
                    -0.00013740796,
                    -9.055464e-07,
                    -2.693682e-06,
                    -2.693682e-06,
                    -5.460492e-07,
                    -0.00029473996,
                    -5.169127e-05,
                    -0.0002620674,
                    -4.0009756e-05,
                    -0.00038542866,
                    -9.198663e-05,
                    -0.000513638,
                    -0.0036785505,
                    -7.338913e-05,
                    -0.00017294059,
                    -1.843017e-05,
                    -0.00019177745,
                    -0.00060929876
                ],
                "top_logprobs": [
                    {
                        "\n": -0.04009425
                    },
                    {
                        "       ": -0.04928358
                    },
                    {
                        " if": -0.042408723
                    },
                    {
                        " (": -0.46078768
                    },
                    {
                        "me": -0.07967387
                    },
                    {
                        "asure": -5.460492e-07
                    },
                    {
                        ".": -0.00015338662
                    },
                    {
                        "ac": -0.0015176262
                    },
                    {
                        "quire": -1.843017e-05
                    },
                    {
                        "Del": -0.000673174
                    },
                    {
                        "ay": -1.5687427e-05
                    },
                    {
                        "()": -0.099057205
                    },
                    {
                        " {": -0.007431915
                    },
                    {
                        "\n": -0.095948264
                    },
                    {
                        "           ": -0.443961
                    },
                    {
                        " if": -0.9293794
                    },
                    {
                        "(": -0.71548516
                    },
                    {
                        "!": -0.33310407
                    },
                    {
                        "(": -0.022526765
                    },
                    {
                        "point": -0.004552615
                    },
                    {
                        " instance": -0.000984745
                    },
                    {
                        "of": -1.1278585e-05
                    },
                    {
                        " Occup": -0.12607145
                    },
                    {
                        "ation": -7.1719274e-05
                    },
                    {
                        "))": -0.5208138
                    },
                    {
                        "{": -0.10905802
                    },
                    {
                        "\n": -0.018038427
                    },
                    {
                        "               ": -0.31896132
                    },
                    {
                        " if": -0.99643874
                    },
                    {
                        "(": -0.09759885
                    },
                    {
                        "!": -0.05771928
                    },
                    {
                        "(": -0.0050655915
                    },
                    {
                        "point": -0.00070019584
                    },
                    {
                        " instance": -0.00022623815
                    },
                    {
                        "of": -6.031526e-06
                    },
                    {
                        " Occup": -0.49500197
                    },
                    {
                        "ation": -6.921402e-05
                    },
                    {
                        "Bl": -0.008439192
                    },
                    {
                        "end": -3.0826937e-05
                    },
                    {
                        "In": -3.7863996e-05
                    },
                    {
                        ".": -0.021062244
                    },
                    {
                        "Parameter": -0.0025016544
                    },
                    {
                        "ized": -7.3865966e-05
                    },
                    {
                        "Job": -0.0008582684
                    },
                    {
                        "))": -0.004689741
                    },
                    {
                        "{": -0.00917791
                    },
                    {
                        "\n": -0.007289552
                    },
                    {
                        "                   ": -0.014731289
                    },
                    {
                        " if": -0.20338178
                    },
                    {
                        "(": -0.02297945
                    },
                    {
                        "!": -0.020194018
                    },
                    {
                        "(": -0.0012686079
                    },
                    {
                        "point": -0.00078179466
                    },
                    {
                        " instance": -9.9022756e-05
                    },
                    {
                        "of": -3.883893e-06
                    },
                    {
                        " Que": -0.0126462225
                    },
                    {
                        "ue": -2.272356e-05
                    },
                    {
                        ".": -0.00050039747
                    },
                    {
                        "Task": -0.0006501517
                    },
                    {
                        "))": -0.0027765613
                    },
                    {
                        "{": -0.0077761766
                    },
                    {
                        "\n": -0.010657235
                    },
                    {
                        "                       ": -0.018855339
                    },
                    {
                        " String": -0.11382682
                    },
                    {
                        " s": -0.008971902
                    },
                    {
                        ";": -0.010868952
                    },
                    {
                        "\n": -0.003479115
                    },
                    {
                        "                       ": -0.0024316246
                    },
                    {
                        " if": -0.0013056096
                    },
                    {
                        "(": -0.017592158
                    },
                    {
                        "point": -0.0012874063
                    },
                    {
                        " instance": -0.0001375281
                    },
                    {
                        "of": -2.3360508e-06
                    },
                    {
                        " Desc": -0.003833212
                    },
                    {
                        "rib": -4.0040345e-06
                    },
                    {
                        "able": -2.2159093e-06
                    },
                    {
                        "){": -0.0024799022
                    },
                    {
                        "\n": -0.0012831083
                    },
                    {
                        "                ": -0.0015378626
                    },
                    {
                        "           ": -0.0035879223
                    },
                    {
                        " s": -0.0017553038
                    },
                    {
                        " =": -0.0023522794
                    },
                    {
                        " ": -0.037164785
                    },
                    {
                        " ((": -0.0009901179
                    },
                    {
                        "Desc": -0.00010987075
                    },
                    {
                        "rib": -2.3435998e-05
                    },
                    {
                        "able": -1.5006569e-06
                    },
                    {
                        ")": -0.00012560723
                    },
                    {
                        " point": -0.0015108811
                    },
                    {
                        ").": -0.00019523638
                    },
                    {
                        "get": -0.00011201744
                    },
                    {
                        "Desc": -0.0006382224
                    },
                    {
                        "ript": -2.8138238e-06
                    },
                    {
                        "or": -3.076318e-07
                    },
                    {
                        "().": -0.0001033124
                    },
                    {
                        "get": -6.635395e-05
                    },
                    {
                        "Display": -8.8290224e-05
                    },
                    {
                        "Name": -2.5464416e-05
                    },
                    {
                        "();": -0.00019452299
                    },
                    {
                        "\n": -0.0017182213
                    },
                    {
                        "                       ": -0.00085123134
                    },
                    {
                        " }": -5.503005e-05
                    },
                    {
                        "else": -0.0010861811
                    },
                    {
                        "{": -0.00072972104
                    },
                    {
                        "\n": -0.00050540705
                    },
                    {
                        "                ": -0.0004113101
                    },
                    {
                        "           ": -0.00078048056
                    },
                    {
                        " s": -0.00025932747
                    },
                    {
                        " =": -0.00030928716
                    },
                    {
                        " ": -0.0038186123
                    },
                    {
                        " point": -0.0003601489
                    },
                    {
                        ".": -2.9041616e-05
                    },
                    {
                        "get": -2.0696069e-05
                    },
                    {
                        "Class": -7.005035e-05
                    },
                    {
                        "().": -4.2392992e-05
                    },
                    {
                        "get": -6.051553e-05
                    },
                    {
                        "Name": -0.0005192418
                    },
                    {
                        "();": -8.7457636e-05
                    },
                    {
                        "\n": -0.000903609
                    },
                    {
                        "                       ": -0.00040224646
                    },
                    {
                        " }": -3.643162e-05
                    },
                    {
                        "\n": -0.009764706
                    },
                    {
                        "                       ": -0.006517906
                    },
                    {
                        " throw": -0.0065833023
                    },
                    {
                        " new": -0.00012667918
                    },
                    {
                        " Ab": -0.003346879
                    },
                    {
                        "ort": -6.9861335e-06
                    },
                    {
                        "Exception": -6.087316e-05
                    },
                    {
                        "(\"": -0.0024789455
                    },
                    {
                        "The": -0.0041243457
                    },
                    {
                        " item": -0.00071021594
                    },
                    {
                        " named": -0.0013762166
                    },
                    {
                        " \"": -0.0033239732
                    },
                    {
                        " +": -0.00042019345
                    },
                    {
                        " occupation": -0.0014422939
                    },
                    {
                        " +": -0.0009841517
                    },
                    {
                        " \"": -0.0011417944
                    },
                    {
                        " is": -0.00095378456
                    },
                    {
                        " a": -0.00061311346
                    },
                    {
                        " \"": -0.0011194169
                    },
                    {
                        " +": -0.000515904
                    },
                    {
                        " s": -0.0024341336
                    },
                    {
                        " ": -0.028113173
                    },
                    {
                        " +": -0.00015541504
                    },
                    {
                        " \"": -0.0011263395
                    },
                    {
                        " which": -0.0012730233
                    },
                    {
                        " is": -0.0013010148
                    },
                    {
                        " not": -0.00033868288
                    },
                    {
                        " something": -0.0019580943
                    },
                    {
                        " that": -0.0005365965
                    },
                    {
                        " can": -0.00025777495
                    },
                    {
                        " be": -0.00038042187
                    },
                    {
                        " built": -0.0034411335
                    },
                    {
                        "\");": -0.0051968587
                    },
                    {
                        "\n": -0.010550248
                    },
                    {
                        "                   ": -0.004247706
                    },
                    {
                        " }": -0.00011869313
                    },
                    {
                        "else": -0.1081865
                    },
                    {
                        "{": -0.0037500449
                    },
                    {
                        "\n": -0.019440917
                    },
                    {
                        "                       ": -0.012614714
                    },
                    {
                        " if": -0.42873755
                    },
                    {
                        " (": -0.025602933
                    },
                    {
                        "me": -0.0035211653
                    },
                    {
                        "asure": -2.693682e-06
                    },
                    {
                        ".": -9.2941234e-05
                    },
                    {
                        "ac": -0.00029354883
                    },
                    {
                        "quire": -1.2622395e-06
                    },
                    {
                        "Parameter": -0.0014729146
                    },
                    {
                        "()": -0.0021805272
                    },
                    {
                        " ==": -0.019539801
                    },
                    {
                        " null": -0.00019857421
                    },
                    {
                        " ||": -0.012247119
                    },
                    {
                        " measure": -0.0026293558
                    },
                    {
                        ".": -9.130952e-06
                    },
                    {
                        "ac": -0.00011392572
                    },
                    {
                        "quire": -3.051303e-06
                    },
                    {
                        "Parameter": -5.3716885e-05
                    },
                    {
                        "().": -0.000120601406
                    },
                    {
                        "is": -0.00047726158
                    },
                    {
                        "Empty": -1.4736571e-05
                    },
                    {
                        "())": -0.0033119519
                    },
                    {
                        " {": -0.00043426573
                    },
                    {
                        "\n": -0.010565006
                    },
                    {
                        "                ": -0.00186601
                    },
                    {
                        "           ": -0.0034989729
                    },
                    {
                        " Que": -0.049693048
                    },
                    {
                        "ue": -2.1529595e-05
                    },
                    {
                        ".": -0.00039043918
                    },
                    {
                        "Task": -0.0005716645
                    },
                    {
                        " undertaking": -0.08701802
                    },
                    {
                        " =": -0.0008281433
                    },
                    {
                        " (": -0.00053743285
                    },
                    {
                        "Queue": -0.0004312836
                    },
                    {
                        ".": -1.9765537e-06
                    },
                    {
                        "Task": -1.402038e-05
                    },
                    {
                        ")": -0.00012453248
                    },
                    {
                        " point": -0.0014036149
                    },
                    {
                        ";": -0.00011475737
                    },
                    {
                        "\n": -0.012259127
                    },
                    {
                        "                ": -0.00085993914
                    },
                    {
                        "           ": -0.0019551057
                    },
                    {
                        " String": -0.17895281
                    },
                    {
                        " item": -0.056066766
                    },
                    {
                        "Enc": -0.0047238166
                    },
                    {
                        "oded": -0.00010522067
                    },
                    {
                        " =": -0.0013106248
                    },
                    {
                        " The": -0.003683577
                    },
                    {
                        "oret": -1.5006569e-06
                    },
                    {
                        "ical": -1.3823812e-06
                    },
                    {
                        "Account": -5.197998e-06
                    },
                    {
                        "Short": -5.586358e-05
                    },
                    {
                        "Letter": -6.3900848e-06
                    },
                    {
                        ".": -4.3347598e-05
                    },
                    {
                        "en": -0.00012226657
                    },
                    {
                        "code": -2.4543265e-06
                    },
                    {
                        "To": -0.0001290643
                    },
                    {
                        "(": -0.00035490093
                    },
                    {
                        "point": -0.013826297
                    },
                    {
                        ");": -0.00026552632
                    },
                    {
                        "\n": -0.004705792
                    },
                    {
                        "                ": -0.00040821065
                    },
                    {
                        "           ": -0.0008979423
                    },
                    {
                        " he": -0.03950956
                    },
                    {
                        "arer": -9.055464e-07
                    },
                    {
                        ".": -4.0246297e-05
                    },
                    {
                        "get": -0.00036754078
                    },
                    {
                        "Log": -0.00028949478
                    },
                    {
                        "ger": -1.5687427e-05
                    },
                    {
                        "().": -8.88872e-05
                    },
                    {
                        "println": -0.00041804678
                    },
                    {
                        "(\"": -0.0017889787
                    },
                    {
                        "S": -0.019973686
                    },
                    {
                        "ched": -9.56821e-05
                    },
                    {
                        "uling": -0.0009778243
                    },
                    {
                        " item": -0.006703607
                    },
                    {
                        ":": -0.002200773
                    },
                    {
                        " \"": -0.0011239534
                    },
                    {
                        " +": -0.00045132102
                    },
                    {
                        "item": -0.047029413
                    },
                    {
                        "Enc": -1.6521892e-05
                    },
                    {
                        "oded": -4.277735e-07
                    },
                    {
                        " );": -0.0107159745
                    },
                    {
                        "\n": -0.016552707
                    },
                    {
                        "                ": -0.0014055233
                    },
                    {
                        "           ": -0.0025275864
                    },
                    {
                        " String": -0.11229327
                    },
                    {
                        " task": -0.02169449
                    },
                    {
                        "Name": -0.00054685504
                    },
                    {
                        " =": -0.001897421
                    },
                    {
                        " undertaking": -0.0006842087
                    },
                    {
                        ".": -5.312365e-05
                    },
                    {
                        "get": -3.5717305e-05
                    },
                    {
                        "Full": -0.0033832404
                    },
                    {
                        "Display": -0.00060035154
                    },
                    {
                        "Name": -4.0040345e-06
                    },
                    {
                        "();": -0.0001033124
                    },
                    {
                        "\n": -0.0038450586
                    },
                    {
                        "                ": -0.00042305636
                    },
                    {
                        "           ": -0.00091100833
                    },
                    {
                        " String": -0.024909304
                    },
                    {
                        " name": -0.002660015
                    },
                    {
                        " ": -0.018708728
                    },
                    {
                        " =": -1.2468796e-05
                    },
                    {
                        " Messages": -0.0048729484
                    },
                    {
                        ".": -4.489638e-05
                    },
                    {
                        "Build": -0.00065218104
                    },
                    {
                        "Trigger": -7.481963e-05
                    },
                    {
                        "Step": -0.00033689477
                    },
                    {
                        "Exec": -0.00019153998
                    },
                    {
                        "ution": -5.4364154e-06
                    },
                    {
                        "_": -0.000111657944
                    },
                    {
                        "building": -0.0007129596
                    },
                    {
                        "_(": -0.00057560124
                    },
                    {
                        "task": -0.0004529918
                    },
                    {
                        "Name": -7.937927e-06
                    },
                    {
                        ");": -0.0003411891
                    },
                    {
                        "\n": -0.00352607
                    },
                    {
                        "                ": -0.00040129185
                    },
                    {
                        "           ": -0.0005108944
                    },
                    {
                        " Label": -0.056940682
                    },
                    {
                        "Action": -0.00021491051
                    },
                    {
                        " label": -0.000992502
                    },
                    {
                        "Action": -0.0003116732
                    },
                    {
                        " =": -0.00039031997
                    },
                    {
                        " new": -0.00020012581
                    },
                    {
                        " Label": -6.9453374e-05
                    },
                    {
                        "Action": -6.3900848e-06
                    },
                    {
                        "(": -8.268835e-05
                    },
                    {
                        "name": -0.00030785665
                    },
                    {
                        ");": -0.00022707166
                    },
                    {
                        "\n": -0.001457516
                    },
                    {
                        "                ": -0.00025467362
                    },
                    {
                        "           ": -0.0004891853
                    },
                    {
                        " knob": -0.0024852215
                    },
                    {
                        ".": -5.9085025e-05
                    },
                    {
                        "add": -7.422359e-05
                    },
                    {
                        "Action": -4.8233283e-05
                    },
                    {
                        "(": -3.9055147e-05
                    },
                    {
                        "label": -0.0007899083
                    },
                    {
                        "Action": -1.7400124e-06
                    },
                    {
                        ");": -8.447461e-05
                    },
                    {
                        "\n": -0.06120839
                    },
                    {
                        "                ": -0.0066136043
                    },
                    {
                        "           ": -0.012353563
                    },
                    {
                        " List": -0.2481765
                    },
                    {
                        "<": -0.0019520062
                    },
                    {
                        "Activity": -0.017076781
                    },
                    {
                        ">": -0.00022492779
                    },
                    {
                        " action": -0.019240137
                    },
                    {
                        " =": -0.0010698909
                    },
                    {
                        " new": -0.0018727588
                    },
                    {
                        " Array": -0.00019285125
                    },
                    {
                        "List": -3.2906587e-06
                    },
                    {
                        "<": -0.00022194568
                    },
                    {
                        ">": -0.0057331272
                    },
                    {
                        "();": -0.00010402765
                    },
                    {
                        "\n": -0.07314766
                    },
                    {
                        "                ": -0.0056123403
                    },
                    {
                        "           ": -0.019832263
                    },
                    {
                        " if": -0.35034832
                    },
                    {
                        " (": -0.004517467
                    },
                    {
                        "me": -0.0008769419
                    },
                    {
                        "asure": -1.022884e-06
                    },
                    {
                        ".": -4.048565e-05
                    },
                    {
                        "ac": -0.0015264626
                    },
                    {
                        "quire": -1.1430258e-06
                    },
                    {
                        "Del": -0.0008842211
                    },
                    {
                        "ay": -1.1753544e-05
                    },
                    {
                        "())": -0.00058406877
                    },
                    {
                        " {": -0.000109155495
                    },
                    {
                        "\n": -0.0011288456
                    },
                    {
                        "                ": -6.5041706e-05
                    },
                    {
                        "               ": -0.0010237084
                    },
                    {
                        " Measure": -0.005355408
                    },
                    {
                        "Circ": -0.000109155495
                    },
                    {
                        "um": -5.197998e-06
                    },
                    {
                        "st": -2.3360508e-06
                    },
                    {
                        "ance": -1.5006569e-06
                    },
                    {
                        " linguistic": -0.0012178804
                    },
                    {
                        "Context": -3.6074933e-05
                    },
                    {
                        " =": -0.00010212031
                    },
                    {
                        " acquire": -0.0011514624
                    },
                    {
                        "L": -7.899194e-05
                    },
                    {
                        "ingu": -3.6482897e-06
                    },
                    {
                        "istic": -7.8540467e-07
                    },
                    {
                        "Context": -5.197998e-06
                    },
                    {
                        "();": -7.326899e-05
                    },
                    {
                        "\n": -0.00049324025
                    },
                    {
                        "                ": -6.611553e-05
                    },
                    {
                        "               ": -0.0003146553
                    },
                    {
                        " boolean": -0.017292166
                    },
                    {
                        " be": -0.0011863718
                    },
                    {
                        "Spread": -0.000368853
                    },
                    {
                        " =": -0.00023690966
                    },
                    {
                        " ": -0.0061205225
                    },
                    {
                        " measure": -0.00047445972
                    },
                    {
                        ".": -1.0920954e-05
                    },
                    {
                        "be": -0.00022504793
                    },
                    {
                        "Spread": -4.859278e-05
                    },
                    {
                        "();": -7.469949e-05
                    },
                    {
                        "\n": -0.00064740895
                    },
                    {
                        "                ": -9.365555e-05
                    },
                    {
                        "               ": -0.00016232915
                    },
                    {
                        " action": -0.0016364264
                    },
                    {
                        ".": -1.8073477e-05
                    },
                    {
                        "add": -8.7733215e-06
                    },
                    {
                        "(": -1.402038e-05
                    },
                    {
                        "new": -0.00036944906
                    },
                    {
                        " Phys": -0.0009471023
                    },
                    {
                        "ique": -3.2973632e-05
                    },
                    {
                        "Ind": -2.28437e-05
                    },
                    {
                        "uction": -1.3823812e-06
                    },
                    {
                        "Activity": -4.573365e-05
                    },
                    {
                        "(": -4.501652e-05
                    },
                    {
                        "ling": -0.00019320888
                    },
                    {
                        "u": -1.1159372e-05
                    },
                    {
                        "istic": -6.827632e-08
                    },
                    {
                        "Context": -1.5006569e-06
                    },
                    {
                        ",": -0.00018295787
                    },
                    {
                        " be": -0.004700223
                    },
                    {
                        "Spread": -9.846204e-06
                    },
                    {
                        " ));": -0.009106449
                    },
                    {
                        "\n": -0.0006028587
                    },
                    {
                        "                ": -4.0963423e-05
                    },
                    {
                        "               ": -0.0023734893
                    },
                    {
                        " LOG": -0.00058687344
                    },
                    {
                        "GER": -2.5744682e-06
                    },
                    {
                        ".": -1.0444119e-05
                    },
                    {
                        "log": -0.00027387374
                    },
                    {
                        "(": -4.721163e-06
                    },
                    {
                        "Level": -4.656436e-05
                    },
                    {
                        ".": -3.170517e-06
                    },
                    {
                        "FIN": -0.00019082283
                    },
                    {
                        "ER": -1.6207987e-06
                    },
                    {
                        ",": -2.045765e-05
                    },
                    {
                        " \"": -5.157113e-05
                    },
                    {
                        "sc": -0.00052973966
                    },
                    {
                        "hed": -6.827632e-08
                    },
                    {
                        "uling": -1.9028084e-05
                    },
                    {
                        " a": -0.000179498
                    },
                    {
                        " build": -0.00013621869
                    },
                    {
                        " of": -4.3465872e-05
                    },
                    {
                        " {": -0.000108559456
                    },
                    {
                        "0": -2.5941252e-05
                    },
                    {
                        "}": -1.0561456e-05
                    },
                    {
                        " from": -0.00020215422
                    },
                    {
                        " {": -3.452334e-05
                    },
                    {
                        "1": -9.012677e-06
                    },
                    {
                        "}": -4.716134e-05
                    },
                    {
                        "\",": -0.000104267005
                    },
                    {
                        " new": -0.00013156954
                    },
                    {
                        " Object": -2.6773841e-05
                    },
                    {
                        "[]": -1.1514188e-05
                    },
                    {
                        "{": -6.396884e-05
                    },
                    {
                        "under": -0.00019762148
                    },
                    {
                        "taking": -1.2112103e-05
                    },
                    {
                        ",": -5.8130416e-05
                    },
                    {
                        " linguistic": -0.00017234455
                    },
                    {
                        "Context": -3.170517e-06
                    },
                    {
                        "});": -0.000118333635
                    },
                    {
                        "\n": -0.0006570705
                    },
                    {
                        "                ": -0.00014969209
                    },
                    {
                        "           ": -0.0011536111
                    },
                    {
                        " }": -1.9382902e-05
                    },
                    {
                        "\n": -0.00962658
                    },
                    {
                        "                ": -0.000754295
                    },
                    {
                        "           ": -0.001999365
                    },
                    {
                        " Cause": -0.014633601
                    },
                    {
                        ".": -0.00017914227
                    },
                    {
                        "Up": -0.0012839455
                    },
                    {
                        "stream": -2.3556138e-05
                    },
                    {
                        "Cause": -5.0856816e-05
                    },
                    {
                        " cause": -0.00017854528
                    },
                    {
                        " =": -0.00013586106
                    },
                    {
                        " new": -8.1136764e-05
                    },
                    {
                        " Cause": -8.137612e-05
                    },
                    {
                        ".": -4.2433903e-06
                    },
                    {
                        "Up": -2.3556138e-05
                    },
                    {
                        "stream": -2.2159093e-06
                    },
                    {
                        "Cause": -2.9311614e-06
                    },
                    {
                        "(": -7.362661e-05
                    },
                    {
                        "raise": -0.0005893778
                    },
                    {
                        "T": -3.5120327e-05
                    },
                    {
                        "ally": -1.8841804e-07
                    },
                    {
                        ");": -0.00014074863
                    },
                    {
                        "\n": -0.00020871071
                    },
                    {
                        "                ": -8.054166e-05
                    },
                    {
                        "           ": -8.876706e-05
                    },
                    {
                        " Reason": -0.0025479035
                    },
                    {
                        "Activity": -5.7891062e-05
                    },
                    {
                        " cause": -0.0006141873
                    },
                    {
                        "Action": -0.00011821817
                    },
                    {
                        " =": -3.5477948e-05
                    },
                    {
                        " new": -3.4048382e-05
                    },
                    {
                        " Reason": -0.0001345479
                    },
                    {
                        "Activity": -5.912312e-06
                    },
                    {
                        "(": -2.3317722e-05
                    },
                    {
                        "cause": -3.678925e-05
                    },
                    {
                        ");": -0.00010057153
                    },
                    {
                        "\n": -0.00018999024
                    },
                    {
                        "                ": -3.7863996e-05
                    },
                    {
                        "           ": -6.99302e-05
                    },
                    {
                        " action": -0.0011646476
                    },
                    {
                        ".": -4.2433903e-06
                    },
                    {
                        "add": -3.529076e-06
                    },
                    {
                        "(": -8.0580685e-06
                    },
                    {
                        " cause": -0.006984589
                    },
                    {
                        "Action": -1.1039229e-05
                    },
                    {
                        ");": -0.00020871071
                    },
                    {
                        "\n": -0.009131652
                    },
                    {
                        "                ": -0.0013179049
                    },
                    {
                        "           ": -0.0017530931
                    },
                    {
                        " Integer": -0.049225096
                    },
                    {
                        " lull": -0.00054327596
                    },
                    {
                        "Time": -0.00013729343
                    },
                    {
                        "Per": -0.00013991416
                    },
                    {
                        "iod": -4.9427246e-05
                    },
                    {
                        " =": -0.00021896455
                    },
                    {
                        " measure": -0.0006517033
                    },
                    {
                        ".": -3.529076e-06
                    },
                    {
                        "ac": -1.4854846e-05
                    },
                    {
                        "quire": -1.8841804e-07
                    },
                    {
                        "L": -2.4986643e-05
                    },
                    {
                        "ull": -5.460492e-07
                    },
                    {
                        "Time": -8.892534e-06
                    },
                    {
                        "Per": -4.6010214e-06
                    },
                    {
                        "iod": -2.5744682e-06
                    },
                    {
                        "();": -4.954739e-05
                    },
                    {
                        "\n": -0.0012345903
                    },
                    {
                        "                ": -0.00021526907
                    },
                    {
                        "           ": -0.00047028364
                    },
                    {
                        " if": -0.005314301
                    },
                    {
                        " (": -0.00012918444
                    },
                    {
                        "l": -0.00013740796
                    },
                    {
                        "ull": -9.055464e-07
                    },
                    {
                        "Time": -2.693682e-06
                    },
                    {
                        "Per": -2.693682e-06
                    },
                    {
                        "iod": -5.460492e-07
                    },
                    {
                        " ==": -0.00029473996
                    },
                    {
                        " null": -5.169127e-05
                    },
                    {
                        ")": -0.0002620674
                    },
                    {
                        " {": -4.0009756e-05
                    },
                    {
                        "\n": -0.00038542866
                    },
                    {
                        "                ": -9.198663e-05
                    },
                    {
                        "               ": -0.000513638
                    },
                    {
                        " try": -0.0036785505
                    },
                    {
                        " {": -7.338913e-05
                    },
                    {
                        "\n": -0.00017294059
                    },
                    {
                        "                ": -1.843017e-05
                    },
                    {
                        "                   ": -0.00019177745
                    },
                    {
                        " Class": -0.00060929876
                    }
                ],
                "text_offset": [
                    6692,
                    6692,
                    6699,
                    6702,
                    6705,
                    6707,
                    6712,
                    6713,
                    6715,
                    6720,
                    6723,
                    6725,
                    6728,
                    6730,
                    6731,
                    6742,
                    6745,
                    6746,
                    6747,
                    6748,
                    6753,
                    6762,
                    6764,
                    6770,
                    6775,
                    6777,
                    6778,
                    6779,
                    6794,
                    6797,
                    6798,
                    6799,
                    6800,
                    6805,
                    6814,
                    6816,
                    6822,
                    6827,
                    6829,
                    6832,
                    6834,
                    6835,
                    6844,
                    6848,
                    6851,
                    6853,
                    6854,
                    6855,
                    6874,
                    6877,
                    6878,
                    6879,
                    6880,
                    6885,
                    6894,
                    6896,
                    6900,
                    6902,
                    6903,
                    6907,
                    6909,
                    6910,
                    6911,
                    6934,
                    6941,
                    6943,
                    6944,
                    6945,
                    6968,
                    6971,
                    6972,
                    6977,
                    6986,
                    6988,
                    6993,
                    6996,
                    7000,
                    7002,
                    7003,
                    7019,
                    7030,
                    7032,
                    7034,
                    7035,
                    7038,
                    7042,
                    7045,
                    7049,
                    7050,
                    7056,
                    7058,
                    7061,
                    7065,
                    7069,
                    7071,
                    7074,
                    7077,
                    7084,
                    7088,
                    7091,
                    7092,
                    7115,
                    7117,
                    7121,
                    7122,
                    7123,
                    7139,
                    7150,
                    7152,
                    7154,
                    7155,
                    7161,
                    7162,
                    7165,
                    7170,
                    7173,
                    7176,
                    7180,
                    7183,
                    7184,
                    7207,
                    7209,
                    7210,
                    7233,
                    7239,
                    7243,
                    7246,
                    7249,
                    7258,
                    7260,
                    7263,
                    7268,
                    7274,
                    7276,
                    7278,
                    7289,
                    7291,
                    7293,
                    7296,
                    7298,
                    7300,
                    7302,
                    7304,
                    7305,
                    7307,
                    7309,
                    7315,
                    7318,
                    7322,
                    7332,
                    7337,
                    7341,
                    7344,
                    7350,
                    7353,
                    7354,
                    7373,
                    7375,
                    7379,
                    7380,
                    7381,
                    7404,
                    7407,
                    7409,
                    7411,
                    7416,
                    7417,
                    7419,
                    7424,
                    7433,
                    7435,
                    7438,
                    7443,
                    7446,
                    7454,
                    7455,
                    7457,
                    7462,
                    7471,
                    7474,
                    7476,
                    7481,
                    7484,
                    7486,
                    7487,
                    7503,
                    7514,
                    7518,
                    7520,
                    7521,
                    7525,
                    7537,
                    7539,
                    7541,
                    7546,
                    7547,
                    7551,
                    7552,
                    7558,
                    7559,
                    7560,
                    7576,
                    7587,
                    7594,
                    7599,
                    7602,
                    7606,
                    7608,
                    7612,
                    7616,
                    7620,
                    7627,
                    7632,
                    7638,
                    7639,
                    7641,
                    7645,
                    7647,
                    7648,
                    7653,
                    7655,
                    7656,
                    7672,
                    7683,
                    7686,
                    7690,
                    7691,
                    7694,
                    7697,
                    7700,
                    7703,
                    7710,
                    7712,
                    7713,
                    7717,
                    7722,
                    7727,
                    7728,
                    7730,
                    7732,
                    7736,
                    7739,
                    7743,
                    7746,
                    7747,
                    7763,
                    7774,
                    7781,
                    7786,
                    7790,
                    7792,
                    7804,
                    7805,
                    7808,
                    7812,
                    7819,
                    7823,
                    7826,
                    7827,
                    7843,
                    7854,
                    7861,
                    7866,
                    7867,
                    7869,
                    7878,
                    7879,
                    7884,
                    7891,
                    7895,
                    7899,
                    7904,
                    7905,
                    7913,
                    7915,
                    7919,
                    7923,
                    7925,
                    7926,
                    7942,
                    7953,
                    7959,
                    7965,
                    7971,
                    7977,
                    7979,
                    7983,
                    7989,
                    7995,
                    7996,
                    8000,
                    8002,
                    8003,
                    8019,
                    8030,
                    8035,
                    8036,
                    8039,
                    8045,
                    8046,
                    8051,
                    8057,
                    8059,
                    8060,
                    8076,
                    8087,
                    8092,
                    8093,
                    8101,
                    8102,
                    8109,
                    8111,
                    8115,
                    8121,
                    8125,
                    8126,
                    8127,
                    8130,
                    8131,
                    8147,
                    8158,
                    8161,
                    8163,
                    8165,
                    8170,
                    8171,
                    8173,
                    8178,
                    8181,
                    8183,
                    8186,
                    8188,
                    8189,
                    8205,
                    8220,
                    8228,
                    8232,
                    8234,
                    8236,
                    8240,
                    8251,
                    8258,
                    8260,
                    8268,
                    8269,
                    8273,
                    8278,
                    8285,
                    8288,
                    8289,
                    8305,
                    8320,
                    8328,
                    8331,
                    8337,
                    8339,
                    8340,
                    8348,
                    8349,
                    8351,
                    8357,
                    8360,
                    8361,
                    8377,
                    8392,
                    8399,
                    8400,
                    8403,
                    8404,
                    8407,
                    8412,
                    8416,
                    8419,
                    8425,
                    8433,
                    8434,
                    8438,
                    8439,
                    8444,
                    8451,
                    8452,
                    8455,
                    8461,
                    8465,
                    8466,
                    8482,
                    8497,
                    8501,
                    8504,
                    8505,
                    8508,
                    8509,
                    8514,
                    8515,
                    8518,
                    8520,
                    8521,
                    8523,
                    8525,
                    8528,
                    8533,
                    8535,
                    8541,
                    8544,
                    8546,
                    8547,
                    8548,
                    8553,
                    8555,
                    8556,
                    8557,
                    8559,
                    8563,
                    8570,
                    8572,
                    8573,
                    8578,
                    8584,
                    8585,
                    8596,
                    8603,
                    8606,
                    8607,
                    8623,
                    8634,
                    8636,
                    8637,
                    8653,
                    8664,
                    8670,
                    8671,
                    8673,
                    8679,
                    8684,
                    8690,
                    8692,
                    8696,
                    8702,
                    8703,
                    8705,
                    8711,
                    8716,
                    8717,
                    8722,
                    8723,
                    8727,
                    8729,
                    8730,
                    8746,
                    8757,
                    8764,
                    8772,
                    8778,
                    8784,
                    8786,
                    8790,
                    8797,
                    8805,
                    8806,
                    8811,
                    8813,
                    8814,
                    8830,
                    8841,
                    8848,
                    8849,
                    8852,
                    8853,
                    8859,
                    8865,
                    8867,
                    8868,
                    8884,
                    8895,
                    8903,
                    8908,
                    8912,
                    8915,
                    8918,
                    8920,
                    8928,
                    8929,
                    8931,
                    8936,
                    8937,
                    8940,
                    8944,
                    8947,
                    8950,
                    8953,
                    8954,
                    8970,
                    8981,
                    8984,
                    8986,
                    8987,
                    8990,
                    8994,
                    8997,
                    9000,
                    9003,
                    9008,
                    9009,
                    9011,
                    9012,
                    9028,
                    9043,
                    9047,
                    9049,
                    9050,
                    9066,
                    9085
                ]
            },
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 1494,
        "completion_tokens": 984,
        "total_tokens": 2478
    },
    "validation_result": [
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n"
        },
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n"
        },
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            if (measure.acquireDelay() && !(point instanceof Occupation)) {\n                throw new AbortException(\"Delaying the build trigger for non-job items is not supported\");\n            }\n\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n            if (step.getWait() && !(item instanceof Job)) {\n                throw new AbortException(\"Delaying the build trigger for non-job items is not supported\");\n            }\n\n"
        },
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            LOGGER.log(Level.FINE, \"Triggering {0}\", point);\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n            LOGGER.log(Level.FINE, \"Triggering {0}\", item);\n"
        },
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation || point instanceof Queue.Task)) {\n            if (!measure.acquireDelay() && !(point instanceof Occupation)) {\n                throw new AbortException(\"Delayed trigger is required to trigger non-jobs\");\n            }\n\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n            if (!step.getWait() && !(item instanceof Job)) {\n                throw new AbortException(\"Delayed trigger is required to trigger non-jobs\");\n            }\n\n"
        },
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n"
        },
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            /* END FIX */\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n            /* END FIX */\n"
        },
        {
            "patch": "        if ( !measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n",
            "correctness": "compile_success",
            "translated": "        if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n"
        },
        {
            "patch": "        if (!measure.acquireDelay() || (point instanceof Occupation) || (point instanceof Queue.Task)) {\n            if (measure.acquireDelay() && !(point instanceof Occupation)) {\n                throw new AbortException(\"Delayed builds only supported for jobs\");\n            }\n            if (!(point instanceof OccupationBlendIn.ParameterizedJob)) {\n    ",
            "correctness": "uncompilable",
            "translated": "        if (!step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n            if (step.getWait() && !(item instanceof Job)) {\n                throw new AbortException(\"Delayed builds only supported for jobs\");\n            }\n            if (!(item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n    "
        },
        {
            "patch": "        if (!measure.acquireDelay()) {\n            if(!(point instanceof Occupation)){\n                if(!(point instanceof OccupationBlendIn.ParameterizedJob)){\n                    if(!(point instanceof Queue.Task)){\n                        String s;\n                        if(point instanceof Describable){\n                            s =  ((Describable) point).getDescriptor().getDisplayName();\n                        }else{\n                            s =  point.getClass().getName();\n                        }\n                        throw new AbortException(\"The item named \" + occupation + \" is a \" + s  + \" which is not something that can be built\");\n                    }else{\n                        if (measure.acquireParameter() == null || measure.acquireParameter().isEmpty()) {\n                            Queue.Task undertaking = (Queue.Task) point;\n                            String itemEncoded = TheoreticalAccountShortLetter.encodeTo(point);\n                            hearer.getLogger().println(\"Scheduling item: \" +itemEncoded );\n                            String taskName = undertaking.getFullDisplayName();\n                            String name  = Messages.BuildTriggerStepExecution_building_(taskName);\n                            LabelAction labelAction = new LabelAction(name);\n                            knob.addAction(labelAction);\n                            List<Activity> action = new ArrayList<>();\n                            if (measure.acquireDelay()) {\n                                MeasureCircumstance linguisticContext = acquireLinguisticContext();\n                                boolean beSpread =  measure.beSpread();\n                                action.add(new PhysiqueInductionActivity(linguisticContext, beSpread ));\n                                LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{undertaking, linguisticContext});\n                            }\n                            Cause.UpstreamCause cause = new Cause.UpstreamCause(raiseTally);\n                            ReasonActivity causeAction = new ReasonActivity(cause);\n                            action.add( causeAction);\n                            Integer lullTimePeriod = measure.acquireLullTimePeriod();\n                            if (lullTimePeriod == null) {\n                                try {\n                                    Class",
            "correctness": "uncompilable",
            "translated": "        if (!step.getWait()) {\n            if(!(item instanceof Job)){\n                if(!(item instanceof ParameterizedJobMixIn.ParameterizedJob)){\n                    if(!(item instanceof Queue.Task)){\n                        String s;\n                        if(item instanceof Describable){\n                            s =  ((Describable) item).getDescriptor().getDisplayName();\n                        }else{\n                            s =  item.getClass().getName();\n                        }\n                        throw new AbortException(\"The item named \" + job + \" is a \" + s  + \" which is not something that can be built\");\n                    }else{\n                        if (step.getParameters() == null || step.getParameters().isEmpty()) {\n                            Queue.Task task = (Queue.Task) item;\n                            String itemEncoded = ModelHyperlinkNote.encodeTo(item);\n                            listener.getLogger().println(\"Scheduling item: \" +itemEncoded );\n                            String taskName = task.getFullDisplayName();\n                            String name  = Messages.BuildTriggerStepExecution_building_(taskName);\n                            LabelAction labelAction = new LabelAction(name);\n                            node.addAction(labelAction);\n                            List<Action> actions = new ArrayList<>();\n                            if (step.getWait()) {\n                                StepContext context = getContext();\n                                boolean isPropagate =  step.isPropagate();\n                                actions.add(new BuildTriggerAction(context, isPropagate ));\n                                LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{task, context});\n                            }\n                            Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                            CauseAction causeAction = new CauseAction(cause);\n                            actions.add( causeAction);\n                            Integer quietPeriod = step.getQuietPeriod();\n                            if (quietPeriod == null) {\n                                try {\n                                    Class"
        }
    ]
}