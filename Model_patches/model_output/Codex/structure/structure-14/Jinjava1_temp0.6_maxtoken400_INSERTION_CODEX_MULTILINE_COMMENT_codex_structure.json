{
    "id": "cmpl-6lZptvXvHzkKLjkk9ZlM60exyo2ea",
    "object": "text_completion",
    "created": 1676797189,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    ".",
                    "root"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -0.58123004,
                    -0.035052206,
                    -0.3974247,
                    -0.07895855,
                    -0.12691726,
                    -0.06025719,
                    -0.010489049,
                    -0.0008781359,
                    -0.7339923,
                    -0.0001011657,
                    -0.0017213874,
                    -0.003738916,
                    -0.12551083,
                    -0.027345762,
                    -0.0003076173,
                    -0.00053552364,
                    -0.6710168,
                    -0.00043319192,
                    -0.00087849353,
                    -0.002371458,
                    -0.35986587,
                    -0.034968566,
                    -0.0007848969,
                    -0.00033367614,
                    -0.22580938,
                    -0.0017837832,
                    -0.0009929797,
                    -0.004044204,
                    -0.21736208,
                    -1.4696178,
                    -0.7065763,
                    -0.0014513668,
                    -2.1050074,
                    -0.010270187,
                    -6.318451
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "ify": -0.035052206
                    },
                    {
                        "\")": -0.3974247
                    },
                    {
                        "\n": -0.07895855
                    },
                    {
                        "   ": -0.12691726
                    },
                    {
                        " .": -0.06025719
                    },
                    {
                        "add": -0.010489049
                    },
                    {
                        "(\"": -0.0008781359
                    },
                    {
                        "equ": -0.7339923
                    },
                    {
                        "als": -0.0001011657
                    },
                    {
                        "\")": -0.0017213874
                    },
                    {
                        "\n": -0.003738916
                    },
                    {
                        "   ": -0.12551083
                    },
                    {
                        " .": -0.027345762
                    },
                    {
                        "add": -0.0003076173
                    },
                    {
                        "(\"": -0.00053552364
                    },
                    {
                        "to": -0.6710168
                    },
                    {
                        "String": -0.00043319192
                    },
                    {
                        "\")": -0.00087849353
                    },
                    {
                        "\n": -0.002371458
                    },
                    {
                        "   ": -0.35986587
                    },
                    {
                        " .": -0.034968566
                    },
                    {
                        "add": -0.0007848969
                    },
                    {
                        "(\"": -0.00033367614
                    },
                    {
                        "final": -0.22580938
                    },
                    {
                        "ize": -0.0017837832
                    },
                    {
                        "\")": -0.0009929797
                    },
                    {
                        "\n": -0.004044204
                    },
                    {
                        "<|endoftext|>": -0.21736208
                    },
                    {
                        "package": -1.4696178
                    },
                    {
                        " com": -0.7065763
                    },
                    {
                        ".": -0.0014513668
                    },
                    {
                        "example": -2.1050074
                    },
                    {
                        ".": -0.010270187
                    },
                    {
                        "dem": -2.6786559
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    312,
                    315,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    331,
                    334,
                    336,
                    337,
                    340,
                    342,
                    345,
                    347,
                    349,
                    355,
                    357,
                    358,
                    361,
                    363,
                    366,
                    368,
                    373,
                    376,
                    378,
                    379,
                    379,
                    379,
                    379,
                    379,
                    379,
                    379
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " React",
                    " from",
                    " '",
                    "react",
                    "';"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -0.58123004,
                    -0.035052206,
                    -0.3974247,
                    -0.07895855,
                    -0.12691726,
                    -0.06025719,
                    -0.010489049,
                    -0.0008781359,
                    -0.7339923,
                    -0.0001011657,
                    -0.0017213874,
                    -0.003738916,
                    -0.12551083,
                    -0.027345762,
                    -0.0003076173,
                    -0.00053552364,
                    -0.6710168,
                    -0.00043319192,
                    -0.00087849353,
                    -0.002371458,
                    -1.1982963,
                    -2.1397364,
                    -1.2201813,
                    -0.5772403,
                    -0.2786996,
                    -0.00044488095,
                    -0.27540076
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "ify": -0.035052206
                    },
                    {
                        "\")": -0.3974247
                    },
                    {
                        "\n": -0.07895855
                    },
                    {
                        "   ": -0.12691726
                    },
                    {
                        " .": -0.06025719
                    },
                    {
                        "add": -0.010489049
                    },
                    {
                        "(\"": -0.0008781359
                    },
                    {
                        "equ": -0.7339923
                    },
                    {
                        "als": -0.0001011657
                    },
                    {
                        "\")": -0.0017213874
                    },
                    {
                        "\n": -0.003738916
                    },
                    {
                        "   ": -0.12551083
                    },
                    {
                        " .": -0.027345762
                    },
                    {
                        "add": -0.0003076173
                    },
                    {
                        "(\"": -0.00053552364
                    },
                    {
                        "to": -0.6710168
                    },
                    {
                        "String": -0.00043319192
                    },
                    {
                        "\")": -0.00087849353
                    },
                    {
                        "\n": -0.002371458
                    },
                    {
                        "   ": -0.35986587
                    },
                    {
                        "package": -1.4631265
                    },
                    {
                        " React": -1.2201813
                    },
                    {
                        " from": -0.5772403
                    },
                    {
                        " '": -0.2786996
                    },
                    {
                        "react": -0.00044488095
                    },
                    {
                        "';": -0.27540076
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    312,
                    315,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    331,
                    334,
                    336,
                    337,
                    340,
                    342,
                    345,
                    347,
                    349,
                    355,
                    357,
                    358,
                    358,
                    358,
                    358,
                    358,
                    358,
                    358
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "class",
                    " Create",
                    "Web",
                    "hook",
                    "s",
                    " <",
                    " Active"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -3.0126007,
                    -0.32668638,
                    -0.037809532,
                    -0.11474802,
                    -0.04203859,
                    -0.0037024214,
                    -0.0010635663,
                    -0.6450775,
                    -0.00012322118,
                    -0.0014543528,
                    -0.004020449,
                    -0.11359789,
                    -0.022198537,
                    -0.00063858187,
                    -0.0008100076,
                    -0.9937297,
                    -0.0005086275,
                    -0.0009715044,
                    -0.0022317183,
                    -0.3655239,
                    -0.03924712,
                    -0.00069554104,
                    -0.00046467895,
                    -0.2607137,
                    -0.0021590209,
                    -0.0010819461,
                    -0.0042322623,
                    -0.13807663,
                    -4.002926,
                    -2.027768,
                    -7.4514127,
                    -1.6057657,
                    -0.21665789,
                    -0.02316225,
                    -0.004871152
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "\")": -0.32668638
                    },
                    {
                        "\n": -0.037809532
                    },
                    {
                        "   ": -0.11474802
                    },
                    {
                        " .": -0.04203859
                    },
                    {
                        "add": -0.0037024214
                    },
                    {
                        "(\"": -0.0010635663
                    },
                    {
                        "equ": -0.6450775
                    },
                    {
                        "als": -0.00012322118
                    },
                    {
                        "\")": -0.0014543528
                    },
                    {
                        "\n": -0.004020449
                    },
                    {
                        "   ": -0.11359789
                    },
                    {
                        " .": -0.022198537
                    },
                    {
                        "add": -0.00063858187
                    },
                    {
                        "(\"": -0.0008100076
                    },
                    {
                        "final": -0.72915566
                    },
                    {
                        "String": -0.0005086275
                    },
                    {
                        "\")": -0.0009715044
                    },
                    {
                        "\n": -0.0022317183
                    },
                    {
                        "   ": -0.3655239
                    },
                    {
                        " .": -0.03924712
                    },
                    {
                        "add": -0.00069554104
                    },
                    {
                        "(\"": -0.00046467895
                    },
                    {
                        "final": -0.2607137
                    },
                    {
                        "ize": -0.0021590209
                    },
                    {
                        "\")": -0.0010819461
                    },
                    {
                        "\n": -0.0042322623
                    },
                    {
                        "<|endoftext|>": -0.13807663
                    },
                    {
                        "package": -1.4668173
                    },
                    {
                        " Create": -2.027768
                    },
                    {
                        "Users": -3.1931849
                    },
                    {
                        "hook": -1.6057657
                    },
                    {
                        "s": -0.21665789
                    },
                    {
                        " <": -0.02316225
                    },
                    {
                        " Active": -0.004871152
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    313,
                    315,
                    316,
                    319,
                    321,
                    324,
                    326,
                    329,
                    332,
                    334,
                    335,
                    338,
                    340,
                    343,
                    345,
                    347,
                    353,
                    355,
                    356,
                    359,
                    361,
                    364,
                    366,
                    371,
                    374,
                    376,
                    377,
                    377,
                    377,
                    377,
                    377,
                    377,
                    377,
                    377
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .add(\"notify\")\n    .build();\n\n// Kotlin\nprivate val RESTRICTED_METHODS = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Kot",
                    "lin",
                    "\n",
                    "private",
                    " val",
                    " RES",
                    "TR",
                    "ICT",
                    "ED",
                    "_",
                    "METHOD",
                    "S",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".",
                    "builder",
                    "<",
                    "String",
                    ">",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -2.942149,
                    -0.002440169,
                    -0.0040670107,
                    -0.007129915,
                    -0.16296746,
                    -0.049425602,
                    -0.0010393998,
                    -0.00064585643,
                    -0.38487762,
                    -0.00013156954,
                    -0.0018077892,
                    -0.0036123863,
                    -0.46153256,
                    -0.05284014,
                    -0.0010614177,
                    -0.0006949459,
                    -2.6760302,
                    -0.040710405,
                    -0.0032551421,
                    -0.003995372,
                    -0.012913969,
                    -0.03366713,
                    -0.050742865,
                    -0.00062313356,
                    -0.6468775,
                    -0.00044965209,
                    -0.14499488,
                    -0.004712317,
                    -0.003807661,
                    -0.0055074496,
                    -0.024721965,
                    -3.0441775,
                    -0.02587735,
                    -1.5847192,
                    -0.0041397884,
                    -0.032677475,
                    -0.059001148,
                    -0.025789948,
                    -0.023142062,
                    -0.09607214,
                    -0.0035010062,
                    -0.24684344,
                    -0.22885546,
                    -0.046184994,
                    -2.0814095,
                    -0.001760915,
                    -0.39319125,
                    -0.12990901,
                    -0.045022685,
                    -0.03633253,
                    -0.00035740712,
                    -0.00037994413,
                    -0.0003334368,
                    -0.00035526042,
                    -0.0053017163,
                    -0.0028285033,
                    -0.22564745,
                    -0.43385535,
                    -0.00021443368,
                    -0.002318523,
                    -0.047560956,
                    -0.023204407,
                    -0.020129427,
                    -0.003503579,
                    -0.0022581846,
                    -0.006706487,
                    -0.0047202837,
                    -0.0050197025,
                    -0.0051680394,
                    -0.00041769102,
                    -0.0017262816,
                    -0.020653868,
                    -0.0015206101,
                    -0.0006883838,
                    -0.00041637692,
                    -0.0024781092,
                    -3.3093773e-05,
                    -0.00015469792,
                    -0.0038264499,
                    -0.0011836262,
                    -0.0041978443,
                    -0.008740084,
                    -0.31082457,
                    -0.0017877847,
                    -0.0012246828,
                    -0.31818166,
                    -0.00012453248,
                    -0.039266955,
                    -0.032350212,
                    -0.0013705472,
                    -0.010760798,
                    -0.0019120518,
                    -0.00022313965,
                    -0.071562245,
                    -1.8788729e-05,
                    -0.00023905636,
                    -0.0004023657,
                    -0.00028770664,
                    -0.0008138261,
                    -4.3227457e-05,
                    -5.586358e-05,
                    -0.0014413383,
                    -1.402038e-05,
                    -0.00022826564,
                    -0.00039914515,
                    -0.025318079,
                    -1.4715749
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "String": -0.002440169
                    },
                    {
                        "\")": -0.0040670107
                    },
                    {
                        "\n": -0.007129915
                    },
                    {
                        "   ": -0.16296746
                    },
                    {
                        " .": -0.049425602
                    },
                    {
                        "add": -0.0010393998
                    },
                    {
                        "(\"": -0.00064585643
                    },
                    {
                        "equ": -0.38487762
                    },
                    {
                        "als": -0.00013156954
                    },
                    {
                        "\")": -0.0018077892
                    },
                    {
                        "\n": -0.0036123863
                    },
                    {
                        "   ": -0.46153256
                    },
                    {
                        " .": -0.05284014
                    },
                    {
                        "add": -0.0010614177
                    },
                    {
                        "(\"": -0.0006949459
                    },
                    {
                        "final": -0.7081968
                    },
                    {
                        "Code": -0.040710405
                    },
                    {
                        "\")": -0.0032551421
                    },
                    {
                        "\n": -0.003995372
                    },
                    {
                        "   ": -0.012913969
                    },
                    {
                        " .": -0.03366713
                    },
                    {
                        "add": -0.050742865
                    },
                    {
                        "(\"": -0.00062313356
                    },
                    {
                        "not": -0.6468775
                    },
                    {
                        "ify": -0.00044965209
                    },
                    {
                        "All": -0.14499488
                    },
                    {
                        "\")": -0.004712317
                    },
                    {
                        "\n": -0.003807661
                    },
                    {
                        "   ": -0.0055074496
                    },
                    {
                        " .": -0.024721965
                    },
                    {
                        "build": -0.05093584
                    },
                    {
                        "(\"": -0.02587735
                    },
                    {
                        "get": -0.8562199
                    },
                    {
                        "ify": -0.0041397884
                    },
                    {
                        "\")": -0.032677475
                    },
                    {
                        "\n": -0.059001148
                    },
                    {
                        "   ": -0.025789948
                    },
                    {
                        " .": -0.023142062
                    },
                    {
                        "build": -0.09607214
                    },
                    {
                        "();": -0.0035010062
                    },
                    {
                        "\n": -0.24684344
                    },
                    {
                        "\n": -0.22885546
                    },
                    {
                        "//": -0.046184994
                    },
                    {
                        " Java": -1.6503544
                    },
                    {
                        "lin": -0.001760915
                    },
                    {
                        "\n": -0.39319125
                    },
                    {
                        "private": -0.12990901
                    },
                    {
                        " val": -0.045022685
                    },
                    {
                        " RES": -0.03633253
                    },
                    {
                        "TR": -0.00035740712
                    },
                    {
                        "ICT": -0.00037994413
                    },
                    {
                        "ED": -0.0003334368
                    },
                    {
                        "_": -0.00035526042
                    },
                    {
                        "METHOD": -0.0053017163
                    },
                    {
                        "S": -0.0028285033
                    },
                    {
                        " =": -0.22564745
                    },
                    {
                        " Imm": -0.43385535
                    },
                    {
                        "utable": -0.00021443368
                    },
                    {
                        "Set": -0.002318523
                    },
                    {
                        ".": -0.047560956
                    },
                    {
                        "builder": -0.023204407
                    },
                    {
                        "<": -0.020129427
                    },
                    {
                        "String": -0.003503579
                    },
                    {
                        ">": -0.0022581846
                    },
                    {
                        "()": -0.006706487
                    },
                    {
                        "\n": -0.0047202837
                    },
                    {
                        "   ": -0.0050197025
                    },
                    {
                        " .": -0.0051680394
                    },
                    {
                        "add": -0.00041769102
                    },
                    {
                        "(\"": -0.0017262816
                    },
                    {
                        "clone": -0.020653868
                    },
                    {
                        "\")": -0.0015206101
                    },
                    {
                        "\n": -0.0006883838
                    },
                    {
                        "   ": -0.00041637692
                    },
                    {
                        " .": -0.0024781092
                    },
                    {
                        "add": -3.3093773e-05
                    },
                    {
                        "(\"": -0.00015469792
                    },
                    {
                        "wait": -0.0038264499
                    },
                    {
                        "\")": -0.0011836262
                    },
                    {
                        "\n": -0.0041978443
                    },
                    {
                        "   ": -0.008740084
                    },
                    {
                        " .": -0.31082457
                    },
                    {
                        "add": -0.0017877847
                    },
                    {
                        "(\"": -0.0012246828
                    },
                    {
                        "not": -0.31818166
                    },
                    {
                        "ify": -0.00012453248
                    },
                    {
                        "\")": -0.039266955
                    },
                    {
                        "\n": -0.032350212
                    },
                    {
                        "   ": -0.0013705472
                    },
                    {
                        " .": -0.010760798
                    },
                    {
                        "add": -0.0019120518
                    },
                    {
                        "(\"": -0.00022313965
                    },
                    {
                        "to": -0.071562245
                    },
                    {
                        "String": -1.8788729e-05
                    },
                    {
                        "\")": -0.00023905636
                    },
                    {
                        "\n": -0.0004023657
                    },
                    {
                        "   ": -0.00028770664
                    },
                    {
                        " .": -0.0008138261
                    },
                    {
                        "add": -4.3227457e-05
                    },
                    {
                        "(\"": -5.586358e-05
                    },
                    {
                        "equ": -0.0014413383
                    },
                    {
                        "als": -1.402038e-05
                    },
                    {
                        "\")": -0.00022826564
                    },
                    {
                        "\n": -0.00039914515
                    },
                    {
                        "<|endoftext|>": -0.025318079
                    },
                    {
                        "package": -1.4715749
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    311,
                    317,
                    319,
                    320,
                    323,
                    325,
                    328,
                    330,
                    333,
                    336,
                    338,
                    339,
                    342,
                    344,
                    347,
                    349,
                    353,
                    357,
                    359,
                    360,
                    363,
                    365,
                    368,
                    370,
                    373,
                    376,
                    379,
                    381,
                    382,
                    385,
                    387,
                    390,
                    392,
                    395,
                    398,
                    400,
                    401,
                    404,
                    406,
                    411,
                    414,
                    415,
                    416,
                    418,
                    422,
                    425,
                    426,
                    433,
                    437,
                    441,
                    443,
                    446,
                    448,
                    449,
                    455,
                    456,
                    458,
                    462,
                    468,
                    471,
                    472,
                    479,
                    480,
                    486,
                    487,
                    489,
                    490,
                    493,
                    495,
                    498,
                    500,
                    505,
                    507,
                    508,
                    511,
                    513,
                    516,
                    518,
                    522,
                    524,
                    525,
                    528,
                    530,
                    533,
                    535,
                    538,
                    541,
                    543,
                    544,
                    547,
                    549,
                    552,
                    554,
                    556,
                    562,
                    564,
                    565,
                    568,
                    570,
                    573,
                    575,
                    578,
                    581,
                    583,
                    584,
                    584
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " {",
                    "\n",
                    " ",
                    " create",
                    "Stack"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -0.58123004,
                    -0.035052206,
                    -0.3974247,
                    -0.07895855,
                    -0.12691726,
                    -0.06025719,
                    -0.010489049,
                    -0.0008781359,
                    -1.9695919,
                    -0.00060392875,
                    -0.0011842223,
                    -0.0033586607,
                    -0.107496314,
                    -0.03385214,
                    -0.00031811238,
                    -0.00039819148,
                    -0.33930695,
                    -0.00010068981,
                    -0.0012324408,
                    -0.0035772722,
                    -0.275205,
                    -0.035856146,
                    -0.00076604687,
                    -0.000540414,
                    -0.5164572,
                    -0.0015365494,
                    -0.00070556306,
                    -0.0034526186,
                    -1.1220598,
                    -0.068246074,
                    -0.0010139239,
                    -0.0009818821,
                    -0.064900495,
                    -0.002235962,
                    -0.0006305301,
                    -0.0048999,
                    -0.050737094,
                    -2.1412811,
                    -1.262141,
                    -3.3500144,
                    -0.32400715,
                    -3.7011707,
                    -2.6570709
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "ify": -0.035052206
                    },
                    {
                        "\")": -0.3974247
                    },
                    {
                        "\n": -0.07895855
                    },
                    {
                        "   ": -0.12691726
                    },
                    {
                        " .": -0.06025719
                    },
                    {
                        "add": -0.010489049
                    },
                    {
                        "(\"": -0.0008781359
                    },
                    {
                        "equ": -0.7339923
                    },
                    {
                        "String": -0.00060392875
                    },
                    {
                        "\")": -0.0011842223
                    },
                    {
                        "\n": -0.0033586607
                    },
                    {
                        "   ": -0.107496314
                    },
                    {
                        " .": -0.03385214
                    },
                    {
                        "add": -0.00031811238
                    },
                    {
                        "(\"": -0.00039819148
                    },
                    {
                        "equ": -0.33930695
                    },
                    {
                        "als": -0.00010068981
                    },
                    {
                        "\")": -0.0012324408
                    },
                    {
                        "\n": -0.0035772722
                    },
                    {
                        "   ": -0.275205
                    },
                    {
                        " .": -0.035856146
                    },
                    {
                        "add": -0.00076604687
                    },
                    {
                        "(\"": -0.000540414
                    },
                    {
                        "final": -0.5164572
                    },
                    {
                        "ize": -0.0015365494
                    },
                    {
                        "\")": -0.00070556306
                    },
                    {
                        "\n": -0.0034526186
                    },
                    {
                        "<|endoftext|>": -0.39510053
                    },
                    {
                        " .": -0.068246074
                    },
                    {
                        "add": -0.0010139239
                    },
                    {
                        "(\"": -0.0009818821
                    },
                    {
                        "get": -0.064900495
                    },
                    {
                        "Class": -0.002235962
                    },
                    {
                        "\")": -0.0006305301
                    },
                    {
                        "\n": -0.0048999
                    },
                    {
                        "<|endoftext|>": -0.050737094
                    },
                    {
                        "package": -1.4668959
                    },
                    {
                        " React": -1.2149618
                    },
                    {
                        " Component": -1.5572566
                    },
                    {
                        " ": -0.32400715
                    },
                    {
                        " Component": -2.3864574
                    },
                    {
                        "Store": -1.6964462
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    312,
                    315,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    330,
                    336,
                    338,
                    339,
                    342,
                    344,
                    347,
                    349,
                    352,
                    355,
                    357,
                    358,
                    361,
                    363,
                    366,
                    368,
                    373,
                    376,
                    378,
                    379,
                    382,
                    384,
                    387,
                    389,
                    392,
                    397,
                    399,
                    400,
                    400,
                    400,
                    400,
                    400,
                    400,
                    400
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Java 8+\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Java",
                    " 8",
                    "+",
                    "\n",
                    "private",
                    " static",
                    " final",
                    " Set",
                    "<",
                    "String",
                    ">",
                    " RES",
                    "TR",
                    "ICT",
                    "ED",
                    "_",
                    "METHOD",
                    "S",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".<",
                    "String",
                    ">",
                    " builder",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " org"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -1.8432312,
                    -0.00017043721,
                    -0.005724914,
                    -0.007299037,
                    -0.20023356,
                    -0.047527205,
                    -0.00051769393,
                    -0.0005775095,
                    -0.62490356,
                    -0.002272223,
                    -0.000791458,
                    -0.002668382,
                    -0.20957537,
                    -0.035600778,
                    -0.00048823532,
                    -0.000368853,
                    -0.33931556,
                    -0.0019732038,
                    -0.00063559884,
                    -0.002225267,
                    -0.7271732,
                    -0.054765053,
                    -0.00040940178,
                    -0.000540414,
                    -0.10272712,
                    -0.013220262,
                    -0.0010641633,
                    -0.0019460937,
                    -0.0069473786,
                    -0.010729892,
                    -0.0006157379,
                    -0.00031000242,
                    -0.066054195,
                    -0.00044702762,
                    -0.51249415,
                    -0.0041010627,
                    -0.0032369632,
                    -0.0052000945,
                    -0.023197632,
                    -0.06669771,
                    -0.0065212674,
                    -0.27725774,
                    -0.2429043,
                    -0.06317642,
                    -1.7713364,
                    -0.79193807,
                    -2.7677464,
                    -0.39045703,
                    -0.082026586,
                    -0.005343902,
                    -0.0024897635,
                    -0.009140975,
                    -0.00054423057,
                    -0.0010416686,
                    -5.4432137e-05,
                    -0.0044031735,
                    -0.00012036205,
                    -0.0004441657,
                    -8.197403e-05,
                    -0.00017639951,
                    -0.0007810784,
                    -0.0005908092,
                    -0.0073514506,
                    -0.25478885,
                    -9.0558e-05,
                    -0.0013469711,
                    -0.50924784,
                    -0.00091232057,
                    -0.0005161415,
                    -0.033664044,
                    -0.004292661,
                    -0.002980997,
                    -0.0061058304,
                    -0.021125188,
                    -0.00050039747,
                    -0.004735914,
                    -0.016824227,
                    -0.0034867106,
                    -0.001386127,
                    -0.0012371556,
                    -0.007539829,
                    -0.00046527592,
                    -0.0009892815,
                    -0.005010418,
                    -0.005712985,
                    -0.007264394,
                    -0.015751058,
                    -0.8422455,
                    -0.07177835,
                    -8.209043e-05,
                    -0.01725184,
                    -0.12484292,
                    -0.0016733239,
                    -0.0064241397,
                    -0.0022971367,
                    -0.017563706,
                    -0.0012332771,
                    -0.0044714226,
                    -0.0034894617,
                    -0.0005354035,
                    -0.006331042,
                    -0.012303718,
                    -0.0011761058,
                    -0.0055939374,
                    -0.008409736,
                    -0.0016364264,
                    -0.00281601,
                    -0.029265553,
                    -0.00031823252,
                    -0.0029558293,
                    -0.007061722,
                    -0.0033864703,
                    -0.0026240393,
                    -0.0050346204,
                    -0.0005742871,
                    -0.001281261,
                    -0.09553706,
                    -3.3689823e-05,
                    -0.0023847802,
                    -0.0010622531,
                    -0.002106935,
                    -0.017177554,
                    -0.00024906988,
                    -0.00080273126,
                    -0.017340986,
                    -0.00034392995,
                    -0.0026208102,
                    -0.0010221587,
                    -0.0013001795,
                    -0.010701032,
                    -0.00059963536,
                    -0.00078322703,
                    -0.0111862505,
                    -0.00065778574,
                    -0.0017400761,
                    -0.001307639,
                    -0.12200479,
                    -1.4684647,
                    -2.8924086
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "als": -0.00017043721
                    },
                    {
                        "\")": -0.005724914
                    },
                    {
                        "\n": -0.007299037
                    },
                    {
                        "   ": -0.20023356
                    },
                    {
                        " .": -0.047527205
                    },
                    {
                        "add": -0.00051769393
                    },
                    {
                        "(\"": -0.0005775095
                    },
                    {
                        "final": -0.62490356
                    },
                    {
                        "ize": -0.002272223
                    },
                    {
                        "\")": -0.000791458
                    },
                    {
                        "\n": -0.002668382
                    },
                    {
                        "   ": -0.20957537
                    },
                    {
                        " .": -0.035600778
                    },
                    {
                        "add": -0.00048823532
                    },
                    {
                        "(\"": -0.000368853
                    },
                    {
                        "get": -0.33931556
                    },
                    {
                        "Class": -0.0019732038
                    },
                    {
                        "\")": -0.00063559884
                    },
                    {
                        "\n": -0.002225267
                    },
                    {
                        "<|endoftext|>": -0.6615966
                    },
                    {
                        " .": -0.054765053
                    },
                    {
                        "add": -0.00040940178
                    },
                    {
                        "(\"": -0.000540414
                    },
                    {
                        "hash": -0.10272712
                    },
                    {
                        "Code": -0.013220262
                    },
                    {
                        "\")": -0.0010641633
                    },
                    {
                        "\n": -0.0019460937
                    },
                    {
                        "   ": -0.0069473786
                    },
                    {
                        " .": -0.010729892
                    },
                    {
                        "add": -0.0006157379
                    },
                    {
                        "(\"": -0.00031000242
                    },
                    {
                        "not": -0.066054195
                    },
                    {
                        "ify": -0.00044702762
                    },
                    {
                        "All": -0.51249415
                    },
                    {
                        "\")": -0.0041010627
                    },
                    {
                        "\n": -0.0032369632
                    },
                    {
                        "   ": -0.0052000945
                    },
                    {
                        " .": -0.023197632
                    },
                    {
                        "build": -0.06669771
                    },
                    {
                        "();": -0.0065212674
                    },
                    {
                        "\n": -0.27725774
                    },
                    {
                        "\n": -0.2429043
                    },
                    {
                        "//": -0.06317642
                    },
                    {
                        " Gro": -1.6893387
                    },
                    {
                        " 8": -0.79193807
                    },
                    {
                        "\n": -0.5324236
                    },
                    {
                        "\n": -0.39045703
                    },
                    {
                        "private": -0.082026586
                    },
                    {
                        " static": -0.005343902
                    },
                    {
                        " final": -0.0024897635
                    },
                    {
                        " Set": -0.009140975
                    },
                    {
                        "<": -0.00054423057
                    },
                    {
                        "String": -0.0010416686
                    },
                    {
                        ">": -5.4432137e-05
                    },
                    {
                        " RES": -0.0044031735
                    },
                    {
                        "TR": -0.00012036205
                    },
                    {
                        "ICT": -0.0004441657
                    },
                    {
                        "ED": -8.197403e-05
                    },
                    {
                        "_": -0.00017639951
                    },
                    {
                        "METHOD": -0.0007810784
                    },
                    {
                        "S": -0.0005908092
                    },
                    {
                        " =": -0.0073514506
                    },
                    {
                        " Imm": -0.25478885
                    },
                    {
                        "utable": -9.0558e-05
                    },
                    {
                        "Set": -0.0013469711
                    },
                    {
                        ".<": -0.50924784
                    },
                    {
                        "String": -0.00091232057
                    },
                    {
                        ">": -0.0005161415
                    },
                    {
                        " builder": -0.033664044
                    },
                    {
                        "()": -0.004292661
                    },
                    {
                        "\n": -0.002980997
                    },
                    {
                        "   ": -0.0061058304
                    },
                    {
                        " .": -0.021125188
                    },
                    {
                        "add": -0.00050039747
                    },
                    {
                        "(\"": -0.004735914
                    },
                    {
                        "clone": -0.016824227
                    },
                    {
                        "\")": -0.0034867106
                    },
                    {
                        "\n": -0.001386127
                    },
                    {
                        "   ": -0.0012371556
                    },
                    {
                        " .": -0.007539829
                    },
                    {
                        "add": -0.00046527592
                    },
                    {
                        "(\"": -0.0009892815
                    },
                    {
                        "wait": -0.005010418
                    },
                    {
                        "\")": -0.005712985
                    },
                    {
                        "\n": -0.007264394
                    },
                    {
                        "   ": -0.015751058
                    },
                    {
                        " .": -0.7140888
                    },
                    {
                        " B": -0.07177835
                    },
                    {
                        "UG": -8.209043e-05
                    },
                    {
                        ":": -0.01725184
                    },
                    {
                        " ": -0.12484292
                    },
                    {
                        "\n": -0.0016733239
                    },
                    {
                        "    ": -0.0064241397
                    },
                    {
                        " *": -0.0022971367
                    },
                    {
                        " .": -0.017563706
                    },
                    {
                        "add": -0.0012332771
                    },
                    {
                        "(\"": -0.0044714226
                    },
                    {
                        "not": -0.0034894617
                    },
                    {
                        "ify": -0.0005354035
                    },
                    {
                        "\")": -0.006331042
                    },
                    {
                        "\n": -0.012303718
                    },
                    {
                        "    ": -0.0011761058
                    },
                    {
                        " *": -0.0055939374
                    },
                    {
                        " FIX": -0.008409736
                    },
                    {
                        "ED": -0.0016364264
                    },
                    {
                        ":": -0.00281601
                    },
                    {
                        " ": -0.029265553
                    },
                    {
                        "\n": -0.00031823252
                    },
                    {
                        "    ": -0.0029558293
                    },
                    {
                        " */": -0.007061722
                    },
                    {
                        "\n": -0.0033864703
                    },
                    {
                        "   ": -0.0026240393
                    },
                    {
                        " .": -0.0050346204
                    },
                    {
                        "add": -0.0005742871
                    },
                    {
                        "(\"": -0.001281261
                    },
                    {
                        "equ": -0.09553706
                    },
                    {
                        "als": -3.3689823e-05
                    },
                    {
                        "\")": -0.0023847802
                    },
                    {
                        "\n": -0.0010622531
                    },
                    {
                        "   ": -0.002106935
                    },
                    {
                        " .": -0.017177554
                    },
                    {
                        "add": -0.00024906988
                    },
                    {
                        "(\"": -0.00080273126
                    },
                    {
                        "final": -0.017340986
                    },
                    {
                        "ize": -0.00034392995
                    },
                    {
                        "\")": -0.0026208102
                    },
                    {
                        "\n": -0.0010221587
                    },
                    {
                        "   ": -0.0013001795
                    },
                    {
                        " .": -0.010701032
                    },
                    {
                        "add": -0.00059963536
                    },
                    {
                        "(\"": -0.00078322703
                    },
                    {
                        "get": -0.0111862505
                    },
                    {
                        "Class": -0.00065778574
                    },
                    {
                        "\")": -0.0017400761
                    },
                    {
                        "\n": -0.001307639
                    },
                    {
                        "<|endoftext|>": -0.12200479
                    },
                    {
                        "package": -1.4684647
                    },
                    {
                        " com": -0.71289384
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    312,
                    315,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    333,
                    336,
                    338,
                    339,
                    342,
                    344,
                    347,
                    349,
                    352,
                    357,
                    359,
                    360,
                    363,
                    365,
                    368,
                    370,
                    374,
                    378,
                    380,
                    381,
                    384,
                    386,
                    389,
                    391,
                    394,
                    397,
                    400,
                    402,
                    403,
                    406,
                    408,
                    413,
                    416,
                    417,
                    418,
                    420,
                    425,
                    427,
                    428,
                    429,
                    436,
                    443,
                    449,
                    453,
                    454,
                    460,
                    461,
                    465,
                    467,
                    470,
                    472,
                    473,
                    479,
                    480,
                    482,
                    486,
                    492,
                    495,
                    497,
                    503,
                    504,
                    512,
                    514,
                    515,
                    518,
                    520,
                    523,
                    525,
                    530,
                    532,
                    533,
                    536,
                    538,
                    541,
                    543,
                    547,
                    549,
                    550,
                    553,
                    556,
                    558,
                    560,
                    561,
                    562,
                    563,
                    567,
                    569,
                    571,
                    574,
                    576,
                    579,
                    582,
                    584,
                    585,
                    589,
                    591,
                    595,
                    597,
                    598,
                    599,
                    600,
                    604,
                    607,
                    608,
                    611,
                    613,
                    616,
                    618,
                    621,
                    624,
                    626,
                    627,
                    630,
                    632,
                    635,
                    637,
                    642,
                    645,
                    647,
                    648,
                    651,
                    653,
                    656,
                    658,
                    661,
                    666,
                    668,
                    669,
                    669,
                    669
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "ro",
                    "bert",
                    "."
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -2.5241559,
                    -1.4672626,
                    -0.7077626,
                    -0.0014463526,
                    -6.4791756,
                    -2.0982745,
                    -1.2545537
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        "package": -1.4672626
                    },
                    {
                        " com": -0.7077626
                    },
                    {
                        ".": -0.0014463526
                    },
                    {
                        "example": -2.0999758
                    },
                    {
                        "bert": -2.0982745
                    },
                    {
                        "x": -0.7422236
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    299,
                    299,
                    299,
                    299,
                    299,
                    299
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"finalize\")\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " {",
                    " Component",
                    ",",
                    " On",
                    "Init"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -0.58123004,
                    -0.035052206,
                    -0.3974247,
                    -0.07895855,
                    -0.12691726,
                    -0.06025719,
                    -0.010489049,
                    -0.0008781359,
                    -1.9695919,
                    -0.00060392875,
                    -0.0011842223,
                    -0.0033586607,
                    -0.107496314,
                    -0.03385214,
                    -0.00031811238,
                    -0.00039819148,
                    -0.33930695,
                    -0.00010068981,
                    -0.0012324408,
                    -0.0035772722,
                    -0.275205,
                    -0.035856146,
                    -0.00076604687,
                    -0.000540414,
                    -0.5164572,
                    -0.0015365494,
                    -0.00070556306,
                    -0.0034526186,
                    -0.39510053,
                    -2.1412024,
                    -1.2620692,
                    -1.5554867,
                    -0.23656666,
                    -0.13758174,
                    -0.009091349
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "ify": -0.035052206
                    },
                    {
                        "\")": -0.3974247
                    },
                    {
                        "\n": -0.07895855
                    },
                    {
                        "   ": -0.12691726
                    },
                    {
                        " .": -0.06025719
                    },
                    {
                        "add": -0.010489049
                    },
                    {
                        "(\"": -0.0008781359
                    },
                    {
                        "equ": -0.7339923
                    },
                    {
                        "String": -0.00060392875
                    },
                    {
                        "\")": -0.0011842223
                    },
                    {
                        "\n": -0.0033586607
                    },
                    {
                        "   ": -0.107496314
                    },
                    {
                        " .": -0.03385214
                    },
                    {
                        "add": -0.00031811238
                    },
                    {
                        "(\"": -0.00039819148
                    },
                    {
                        "equ": -0.33930695
                    },
                    {
                        "als": -0.00010068981
                    },
                    {
                        "\")": -0.0012324408
                    },
                    {
                        "\n": -0.0035772722
                    },
                    {
                        "   ": -0.275205
                    },
                    {
                        " .": -0.035856146
                    },
                    {
                        "add": -0.00076604687
                    },
                    {
                        "(\"": -0.000540414
                    },
                    {
                        "final": -0.5164572
                    },
                    {
                        "ize": -0.0015365494
                    },
                    {
                        "\")": -0.00070556306
                    },
                    {
                        "\n": -0.0034526186
                    },
                    {
                        "<|endoftext|>": -0.39510053
                    },
                    {
                        "package": -1.4646686
                    },
                    {
                        " React": -1.2142997
                    },
                    {
                        " Component": -1.5554867
                    },
                    {
                        ",": -0.23656666
                    },
                    {
                        " On": -0.13758174
                    },
                    {
                        "Init": -0.009091349
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    312,
                    315,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    330,
                    336,
                    338,
                    339,
                    342,
                    344,
                    347,
                    349,
                    352,
                    355,
                    357,
                    358,
                    361,
                    363,
                    366,
                    368,
                    373,
                    376,
                    378,
                    379,
                    379,
                    379,
                    379,
                    379,
                    379,
                    379
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val RESTRICTED_METHODS = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "All",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "build",
                    "();",
                    "\n",
                    "\n",
                    "//",
                    " Kot",
                    "lin",
                    "\n",
                    "private",
                    " val",
                    " RES",
                    "TR",
                    "ICT",
                    "ED",
                    "_",
                    "METHOD",
                    "S",
                    " =",
                    " Imm",
                    "utable",
                    "Set",
                    ".",
                    "builder",
                    "<",
                    "String",
                    ">",
                    "()",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "clone",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "wait",
                    "\")",
                    "\n",
                    "   ",
                    " /*",
                    " B",
                    "UG",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " *",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "    ",
                    " *",
                    " FIX",
                    "ED",
                    ":",
                    " ",
                    "\n",
                    "    ",
                    " */",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "<?",
                    "php",
                    "\n",
                    "class",
                    " My",
                    "DB",
                    " extends"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -0.58123004,
                    -0.035052206,
                    -0.3974247,
                    -0.07895855,
                    -0.12691726,
                    -0.06025719,
                    -0.010489049,
                    -0.0008781359,
                    -0.7339923,
                    -0.0001011657,
                    -0.0017213874,
                    -0.003738916,
                    -0.12551083,
                    -0.027345762,
                    -0.0003076173,
                    -0.00053552364,
                    -1.0240765,
                    -0.0017338067,
                    -0.000524134,
                    -0.0024606015,
                    -0.08368221,
                    -0.025672648,
                    -0.00056200207,
                    -0.00049049745,
                    -0.6676427,
                    -0.0017763784,
                    -0.0005021884,
                    -0.0021435483,
                    -0.67088264,
                    -0.012457847,
                    -0.0013732346,
                    -0.0003554988,
                    -0.41681626,
                    -0.010910591,
                    -0.00110635,
                    -0.0020123268,
                    -0.009771567,
                    -0.013541992,
                    -0.0012153753,
                    -0.00034595837,
                    -0.2252123,
                    -0.00023214132,
                    -0.018113261,
                    -0.0015239537,
                    -0.002540554,
                    -0.0035178747,
                    -0.015566925,
                    -0.05442507,
                    -0.005989435,
                    -0.26235554,
                    -0.22906227,
                    -0.05782177,
                    -1.9252486,
                    -0.0017425832,
                    -0.36698997,
                    -0.14402106,
                    -0.04560851,
                    -0.030017052,
                    -0.00033379628,
                    -0.0007225029,
                    -0.00028031383,
                    -0.0003910371,
                    -0.0040792176,
                    -0.0020844152,
                    -0.25146598,
                    -0.25957674,
                    -0.00013550156,
                    -0.0010190536,
                    -0.062656306,
                    -0.021345159,
                    -0.01184214,
                    -0.0028062684,
                    -0.0021177446,
                    -0.009716676,
                    -0.0043123546,
                    -0.0045414167,
                    -0.0035867256,
                    -0.0005168586,
                    -0.0019486619,
                    -0.007580069,
                    -0.00156001,
                    -0.00059033243,
                    -0.00023082721,
                    -0.0012057672,
                    -1.5327929e-05,
                    -9.0198504e-05,
                    -0.0018643374,
                    -0.0012883609,
                    -0.004524472,
                    -0.014666143,
                    -0.5703664,
                    -0.02496852,
                    -8.8051806e-05,
                    -0.0140582705,
                    -0.17379571,
                    -0.0008898286,
                    -0.00833821,
                    -0.0007139133,
                    -0.022130772,
                    -0.0011602361,
                    -0.0035520883,
                    -0.0018600383,
                    -0.00043366966,
                    -0.0051522814,
                    -0.024469491,
                    -0.0012791124,
                    -0.007794797,
                    -0.00553388,
                    -0.00075059576,
                    -0.003315182,
                    -0.044830292,
                    -0.00017675622,
                    -0.0025081057,
                    -0.0042482447,
                    -0.0046373447,
                    -0.0027173306,
                    -0.003992679,
                    -0.0008410892,
                    -0.0007337732,
                    -0.0019668736,
                    -0.00044213727,
                    -0.0066778036,
                    -0.0034502263,
                    -0.0005413686,
                    -0.0012222949,
                    -0.0001033124,
                    -0.00010140506,
                    -0.0033458027,
                    -1.1039229e-05,
                    -0.00024859305,
                    -0.0002682681,
                    -0.00024930926,
                    -0.00055257895,
                    -7.613187e-05,
                    -4.5494293e-05,
                    -0.0021161921,
                    -0.00030725967,
                    -0.0002372673,
                    -0.00030297003,
                    -0.00075202715,
                    -0.00089006795,
                    -0.00019070739,
                    -0.00010092916,
                    -0.020274304,
                    -0.00022939671,
                    -0.00025920733,
                    -0.00043724783,
                    -0.07851926,
                    -2.3985717,
                    -0.025730744,
                    -0.15442185,
                    -3.9641268,
                    -5.313433,
                    -2.9823267,
                    -0.15394016
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "ify": -0.035052206
                    },
                    {
                        "\")": -0.3974247
                    },
                    {
                        "\n": -0.07895855
                    },
                    {
                        "   ": -0.12691726
                    },
                    {
                        " .": -0.06025719
                    },
                    {
                        "add": -0.010489049
                    },
                    {
                        "(\"": -0.0008781359
                    },
                    {
                        "equ": -0.7339923
                    },
                    {
                        "als": -0.0001011657
                    },
                    {
                        "\")": -0.0017213874
                    },
                    {
                        "\n": -0.003738916
                    },
                    {
                        "   ": -0.12551083
                    },
                    {
                        " .": -0.027345762
                    },
                    {
                        "add": -0.0003076173
                    },
                    {
                        "(\"": -0.00053552364
                    },
                    {
                        "to": -0.6710168
                    },
                    {
                        "ize": -0.0017338067
                    },
                    {
                        "\")": -0.000524134
                    },
                    {
                        "\n": -0.0024606015
                    },
                    {
                        "   ": -0.08368221
                    },
                    {
                        " .": -0.025672648
                    },
                    {
                        "add": -0.00056200207
                    },
                    {
                        "(\"": -0.00049049745
                    },
                    {
                        "get": -0.6676427
                    },
                    {
                        "Class": -0.0017763784
                    },
                    {
                        "\")": -0.0005021884
                    },
                    {
                        "\n": -0.0021435483
                    },
                    {
                        "   ": -0.67088264
                    },
                    {
                        " .": -0.012457847
                    },
                    {
                        "add": -0.0013732346
                    },
                    {
                        "(\"": -0.0003554988
                    },
                    {
                        "hash": -0.41681626
                    },
                    {
                        "Code": -0.010910591
                    },
                    {
                        "\")": -0.00110635
                    },
                    {
                        "\n": -0.0020123268
                    },
                    {
                        "   ": -0.009771567
                    },
                    {
                        " .": -0.013541992
                    },
                    {
                        "add": -0.0012153753
                    },
                    {
                        "(\"": -0.00034595837
                    },
                    {
                        "not": -0.2252123
                    },
                    {
                        "ify": -0.00023214132
                    },
                    {
                        "All": -0.018113261
                    },
                    {
                        "\")": -0.0015239537
                    },
                    {
                        "\n": -0.002540554
                    },
                    {
                        "   ": -0.0035178747
                    },
                    {
                        " .": -0.015566925
                    },
                    {
                        "build": -0.05442507
                    },
                    {
                        "();": -0.005989435
                    },
                    {
                        "\n": -0.26235554
                    },
                    {
                        "\n": -0.22906227
                    },
                    {
                        "//": -0.05782177
                    },
                    {
                        " Gro": -1.5544449
                    },
                    {
                        "lin": -0.0017425832
                    },
                    {
                        "\n": -0.36698997
                    },
                    {
                        "private": -0.14402106
                    },
                    {
                        " val": -0.04560851
                    },
                    {
                        " RES": -0.030017052
                    },
                    {
                        "TR": -0.00033379628
                    },
                    {
                        "ICT": -0.0007225029
                    },
                    {
                        "ED": -0.00028031383
                    },
                    {
                        "_": -0.0003910371
                    },
                    {
                        "METHOD": -0.0040792176
                    },
                    {
                        "S": -0.0020844152
                    },
                    {
                        " =": -0.25146598
                    },
                    {
                        " Imm": -0.25957674
                    },
                    {
                        "utable": -0.00013550156
                    },
                    {
                        "Set": -0.0010190536
                    },
                    {
                        ".": -0.062656306
                    },
                    {
                        "builder": -0.021345159
                    },
                    {
                        "<": -0.01184214
                    },
                    {
                        "String": -0.0028062684
                    },
                    {
                        ">": -0.0021177446
                    },
                    {
                        "()": -0.009716676
                    },
                    {
                        "\n": -0.0043123546
                    },
                    {
                        "   ": -0.0045414167
                    },
                    {
                        " .": -0.0035867256
                    },
                    {
                        "add": -0.0005168586
                    },
                    {
                        "(\"": -0.0019486619
                    },
                    {
                        "clone": -0.007580069
                    },
                    {
                        "\")": -0.00156001
                    },
                    {
                        "\n": -0.00059033243
                    },
                    {
                        "   ": -0.00023082721
                    },
                    {
                        " .": -0.0012057672
                    },
                    {
                        "add": -1.5327929e-05
                    },
                    {
                        "(\"": -9.0198504e-05
                    },
                    {
                        "wait": -0.0018643374
                    },
                    {
                        "\")": -0.0012883609
                    },
                    {
                        "\n": -0.004524472
                    },
                    {
                        "   ": -0.014666143
                    },
                    {
                        " /*": -0.5703664
                    },
                    {
                        " B": -0.02496852
                    },
                    {
                        "UG": -8.8051806e-05
                    },
                    {
                        ":": -0.0140582705
                    },
                    {
                        " ": -0.17379571
                    },
                    {
                        "\n": -0.0008898286
                    },
                    {
                        "    ": -0.00833821
                    },
                    {
                        " *": -0.0007139133
                    },
                    {
                        " .": -0.022130772
                    },
                    {
                        "add": -0.0011602361
                    },
                    {
                        "(\"": -0.0035520883
                    },
                    {
                        "not": -0.0018600383
                    },
                    {
                        "ify": -0.00043366966
                    },
                    {
                        "\")": -0.0051522814
                    },
                    {
                        "\n": -0.024469491
                    },
                    {
                        "    ": -0.0012791124
                    },
                    {
                        " *": -0.007794797
                    },
                    {
                        " FIX": -0.00553388
                    },
                    {
                        "ED": -0.00075059576
                    },
                    {
                        ":": -0.003315182
                    },
                    {
                        " ": -0.044830292
                    },
                    {
                        "\n": -0.00017675622
                    },
                    {
                        "    ": -0.0025081057
                    },
                    {
                        " */": -0.0042482447
                    },
                    {
                        "\n": -0.0046373447
                    },
                    {
                        "   ": -0.0027173306
                    },
                    {
                        " .": -0.003992679
                    },
                    {
                        "add": -0.0008410892
                    },
                    {
                        "(\"": -0.0007337732
                    },
                    {
                        "not": -0.0019668736
                    },
                    {
                        "ify": -0.00044213727
                    },
                    {
                        "\")": -0.0066778036
                    },
                    {
                        "\n": -0.0034502263
                    },
                    {
                        "   ": -0.0005413686
                    },
                    {
                        " .": -0.0012222949
                    },
                    {
                        "add": -0.0001033124
                    },
                    {
                        "(\"": -0.00010140506
                    },
                    {
                        "equ": -0.0033458027
                    },
                    {
                        "als": -1.1039229e-05
                    },
                    {
                        "\")": -0.00024859305
                    },
                    {
                        "\n": -0.0002682681
                    },
                    {
                        "   ": -0.00024930926
                    },
                    {
                        " .": -0.00055257895
                    },
                    {
                        "add": -7.613187e-05
                    },
                    {
                        "(\"": -4.5494293e-05
                    },
                    {
                        "final": -0.0021161921
                    },
                    {
                        "ize": -0.00030725967
                    },
                    {
                        "\")": -0.0002372673
                    },
                    {
                        "\n": -0.00030297003
                    },
                    {
                        "   ": -0.00075202715
                    },
                    {
                        " .": -0.00089006795
                    },
                    {
                        "add": -0.00019070739
                    },
                    {
                        "(\"": -0.00010092916
                    },
                    {
                        "get": -0.020274304
                    },
                    {
                        "Class": -0.00022939671
                    },
                    {
                        "\")": -0.00025920733
                    },
                    {
                        "\n": -0.00043724783
                    },
                    {
                        "<|endoftext|>": -0.07851926
                    },
                    {
                        "package": -1.4731928
                    },
                    {
                        "php": -0.025730744
                    },
                    {
                        "\n": -0.15442185
                    },
                    {
                        "\n": -0.65818924
                    },
                    {
                        " Controller": -3.2238314
                    },
                    {
                        "_": -1.5449955
                    },
                    {
                        " extends": -0.15394016
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    312,
                    315,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    331,
                    334,
                    336,
                    337,
                    340,
                    342,
                    345,
                    347,
                    352,
                    355,
                    357,
                    358,
                    361,
                    363,
                    366,
                    368,
                    371,
                    376,
                    378,
                    379,
                    382,
                    384,
                    387,
                    389,
                    393,
                    397,
                    399,
                    400,
                    403,
                    405,
                    408,
                    410,
                    413,
                    416,
                    419,
                    421,
                    422,
                    425,
                    427,
                    432,
                    435,
                    436,
                    437,
                    439,
                    443,
                    446,
                    447,
                    454,
                    458,
                    462,
                    464,
                    467,
                    469,
                    470,
                    476,
                    477,
                    479,
                    483,
                    489,
                    492,
                    493,
                    500,
                    501,
                    507,
                    508,
                    510,
                    511,
                    514,
                    516,
                    519,
                    521,
                    526,
                    528,
                    529,
                    532,
                    534,
                    537,
                    539,
                    543,
                    545,
                    546,
                    549,
                    552,
                    554,
                    556,
                    557,
                    558,
                    559,
                    563,
                    565,
                    567,
                    570,
                    572,
                    575,
                    578,
                    580,
                    581,
                    585,
                    587,
                    591,
                    593,
                    594,
                    595,
                    596,
                    600,
                    603,
                    604,
                    607,
                    609,
                    612,
                    614,
                    617,
                    620,
                    622,
                    623,
                    626,
                    628,
                    631,
                    633,
                    636,
                    639,
                    641,
                    642,
                    645,
                    647,
                    650,
                    652,
                    657,
                    660,
                    662,
                    663,
                    666,
                    668,
                    671,
                    673,
                    676,
                    681,
                    683,
                    684,
                    684,
                    684,
                    684,
                    684,
                    684,
                    684,
                    684
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "    .add(\"notify\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "not",
                    "ify",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "hash",
                    "Code",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "get",
                    "Class",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "equ",
                    "als",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "to",
                    "String",
                    "\")",
                    "\n",
                    "   ",
                    " .",
                    "add",
                    "(\"",
                    "final",
                    "ize",
                    "\")",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    ".",
                    "d"
                ],
                "token_logprobs": [
                    -0.0022393065,
                    -0.09836807,
                    -0.030200286,
                    -0.004621656,
                    -0.010961752,
                    -0.58123004,
                    -0.035052206,
                    -0.3974247,
                    -0.07895855,
                    -0.12691726,
                    -0.06025719,
                    -0.010489049,
                    -0.0008781359,
                    -3.3067014,
                    -0.019722955,
                    -0.0028458384,
                    -0.0051939217,
                    -0.022753568,
                    -0.027616676,
                    -0.02560917,
                    -0.0005467358,
                    -1.2289463,
                    -0.0043123546,
                    -0.0012019478,
                    -0.005521773,
                    -0.054228406,
                    -0.045791063,
                    -0.0059186216,
                    -0.00082838273,
                    -0.42205298,
                    -0.00012643983,
                    -0.0029637814,
                    -0.0040695816,
                    -0.037439365,
                    -0.026964022,
                    -0.009871666,
                    -0.0010914339,
                    -0.14192672,
                    -0.0003512045,
                    -0.0013128925,
                    -0.005812322,
                    -0.18316393,
                    -0.07076077,
                    -0.11839432,
                    -0.0009676259,
                    -0.26924914,
                    -0.0019996043,
                    -0.002409876,
                    -0.013662836,
                    -0.2649111,
                    -1.466561,
                    -0.71419907,
                    -0.001421223,
                    -2.0999262,
                    -0.010132469,
                    -3.9836984
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0022393065
                    },
                    {
                        "   ": -0.09836807
                    },
                    {
                        " .": -0.030200286
                    },
                    {
                        "add": -0.004621656
                    },
                    {
                        "(\"": -0.010961752
                    },
                    {
                        "not": -0.58123004
                    },
                    {
                        "ify": -0.035052206
                    },
                    {
                        "\")": -0.3974247
                    },
                    {
                        "\n": -0.07895855
                    },
                    {
                        "   ": -0.12691726
                    },
                    {
                        " .": -0.06025719
                    },
                    {
                        "add": -0.010489049
                    },
                    {
                        "(\"": -0.0008781359
                    },
                    {
                        "equ": -0.7339923
                    },
                    {
                        "Code": -0.019722955
                    },
                    {
                        "\")": -0.0028458384
                    },
                    {
                        "\n": -0.0051939217
                    },
                    {
                        "   ": -0.022753568
                    },
                    {
                        " .": -0.027616676
                    },
                    {
                        "add": -0.02560917
                    },
                    {
                        "(\"": -0.0005467358
                    },
                    {
                        "not": -1.0784832
                    },
                    {
                        "Class": -0.0043123546
                    },
                    {
                        "\")": -0.0012019478
                    },
                    {
                        "\n": -0.005521773
                    },
                    {
                        "   ": -0.054228406
                    },
                    {
                        " .": -0.045791063
                    },
                    {
                        "add": -0.0059186216
                    },
                    {
                        "(\"": -0.00082838273
                    },
                    {
                        "equ": -0.42205298
                    },
                    {
                        "als": -0.00012643983
                    },
                    {
                        "\")": -0.0029637814
                    },
                    {
                        "\n": -0.0040695816
                    },
                    {
                        "   ": -0.037439365
                    },
                    {
                        " .": -0.026964022
                    },
                    {
                        "add": -0.009871666
                    },
                    {
                        "(\"": -0.0010914339
                    },
                    {
                        "to": -0.14192672
                    },
                    {
                        "String": -0.0003512045
                    },
                    {
                        "\")": -0.0013128925
                    },
                    {
                        "\n": -0.005812322
                    },
                    {
                        "   ": -0.18316393
                    },
                    {
                        " .": -0.07076077
                    },
                    {
                        "add": -0.11839432
                    },
                    {
                        "(\"": -0.0009676259
                    },
                    {
                        "final": -0.26924914
                    },
                    {
                        "ize": -0.0019996043
                    },
                    {
                        "\")": -0.002409876
                    },
                    {
                        "\n": -0.013662836
                    },
                    {
                        "<|endoftext|>": -0.2649111
                    },
                    {
                        "package": -1.466561
                    },
                    {
                        " com": -0.71419907
                    },
                    {
                        ".": -0.001421223
                    },
                    {
                        "example": -2.0999262
                    },
                    {
                        ".": -0.010132469
                    },
                    {
                        "dem": -2.6839814
                    }
                ],
                "text_offset": [
                    299,
                    299,
                    302,
                    304,
                    307,
                    309,
                    312,
                    315,
                    317,
                    318,
                    321,
                    323,
                    326,
                    328,
                    332,
                    336,
                    338,
                    339,
                    342,
                    344,
                    347,
                    349,
                    352,
                    357,
                    359,
                    360,
                    363,
                    365,
                    368,
                    370,
                    373,
                    376,
                    378,
                    379,
                    382,
                    384,
                    387,
                    389,
                    391,
                    397,
                    399,
                    400,
                    403,
                    405,
                    408,
                    410,
                    415,
                    418,
                    420,
                    421,
                    421,
                    421,
                    421,
                    421,
                    421,
                    421
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 88,
        "completion_tokens": 616,
        "total_tokens": 704
    },
    "validation_result": [
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"toString\")\n",
            "correctness": "compile_success"
        },
        {
            "patch": "    .add(\"wait\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success"
        },
        {
            "patch": "    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .add(\"notify\")\n    .build();\n\n// Kotlin\nprivate val RESTRICTED_METHODS = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "test_success"
        },
        {
            "patch": "    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Java 8+\nprivate static final Set<String> RESTRICTED_METHODS = ImmutableSet.<String> builder()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "",
            "correctness": "compile_success"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"toString\")\n    .add(\"equals\")\n    .add(\"finalize\")\n",
            "correctness": "compile_success"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n    .add(\"hashCode\")\n    .add(\"notifyAll\")\n    .build();\n\n// Kotlin\nprivate val RESTRICTED_METHODS = ImmutableSet.builder<String>()\n    .add(\"clone\")\n    .add(\"wait\")\n    /* BUG: \n     * .add(\"notify\")\n     * FIXED: \n     */\n    .add(\"notify\")\n    .add(\"equals\")\n    .add(\"finalize\")\n    .add(\"getClass\")\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "    .add(\"notify\")\n    .add(\"hashCode\")\n    .add(\"getClass\")\n    .add(\"equals\")\n    .add(\"toString\")\n    .add(\"finalize\")\n",
            "correctness": "test_success"
        }
    ]
}