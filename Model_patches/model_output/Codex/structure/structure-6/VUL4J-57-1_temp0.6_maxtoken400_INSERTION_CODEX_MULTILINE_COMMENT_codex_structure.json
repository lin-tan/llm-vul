{
    "id": "cmpl-6lUwLHMYMZ1nsYzuYaHXkdJjaFlU9",
    "object": "text_completion",
    "created": 1676778369,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "           if (!(item instanceof Job) && !step.getWait()) {\n               throw new AbortException(\"Item type does not support non-waiting builds\");\n           }\n           if (item instanceof Job) {\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (!",
                    "(",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " &&",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "              ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "Item",
                    " type",
                    " does",
                    " not",
                    " support",
                    " non",
                    "-",
                    "wa",
                    "iting",
                    " builds",
                    "\");",
                    "\n",
                    "          ",
                    " }",
                    "\n",
                    "          ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "<?"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -1.7248018,
                    -2.490469,
                    -0.27070108,
                    -0.0078089745,
                    -5.896488e-05,
                    -1.6427727,
                    -0.9566066,
                    -0.3778269,
                    -1.0655259,
                    -0.23793478,
                    -3.201996e-05,
                    -0.008416829,
                    -0.0035646511,
                    -0.46517283,
                    -0.013123449,
                    -0.031796914,
                    -0.34297946,
                    -0.5476104,
                    -0.0022010123,
                    -0.048164237,
                    -2.141132e-05,
                    -0.00023631456,
                    -0.039516445,
                    -3.8006794,
                    -0.54882056,
                    -0.17565878,
                    -0.003090228,
                    -0.0134762,
                    -1.2289565,
                    -0.07897816,
                    -1.5261827,
                    -0.021688156,
                    -0.77718544,
                    -0.10942488,
                    -0.017687948,
                    -0.013225819,
                    -0.0026050925,
                    -0.2033133,
                    -0.11533958,
                    -0.34589374,
                    -0.49337533,
                    -0.14685795,
                    -0.014002659,
                    -4.838501e-06,
                    -0.10151756,
                    -0.17505375,
                    -0.0035505332,
                    -0.023871511,
                    -0.30448774,
                    -2.389511
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        "step": -0.111728854
                    },
                    {
                        "item": -0.27070108
                    },
                    {
                        " instance": -0.0078089745
                    },
                    {
                        "of": -5.896488e-05
                    },
                    {
                        " Que": -1.2677889
                    },
                    {
                        "))": -0.7202232
                    },
                    {
                        " &&": -0.3778269
                    },
                    {
                        " step": -0.53908813
                    },
                    {
                        "step": -0.23793478
                    },
                    {
                        ".": -3.201996e-05
                    },
                    {
                        "get": -0.008416829
                    },
                    {
                        "Wait": -0.0035646511
                    },
                    {
                        "())": -0.46517283
                    },
                    {
                        " {": -0.013123449
                    },
                    {
                        "\n": -0.031796914
                    },
                    {
                        "              ": -0.34297946
                    },
                    {
                        " throw": -0.5476104
                    },
                    {
                        " new": -0.0022010123
                    },
                    {
                        " Ab": -0.048164237
                    },
                    {
                        "ort": -2.141132e-05
                    },
                    {
                        "Exception": -0.00023631456
                    },
                    {
                        "(\"": -0.039516445
                    },
                    {
                        "Wa": -0.87902147
                    },
                    {
                        " type": -0.54882056
                    },
                    {
                        " does": -0.17565878
                    },
                    {
                        " not": -0.003090228
                    },
                    {
                        " support": -0.0134762
                    },
                    {
                        " non": -1.2289565
                    },
                    {
                        "-": -0.07897816
                    },
                    {
                        "blocking": -0.39305153
                    },
                    {
                        "iting": -0.021688156
                    },
                    {
                        " builds": -0.77718544
                    },
                    {
                        "\");": -0.10942488
                    },
                    {
                        "\n": -0.017687948
                    },
                    {
                        "          ": -0.013225819
                    },
                    {
                        " }": -0.0026050925
                    },
                    {
                        "\n": -0.2033133
                    },
                    {
                        "          ": -0.11533958
                    },
                    {
                        " if": -0.34589374
                    },
                    {
                        " (": -0.49337533
                    },
                    {
                        "item": -0.14685795
                    },
                    {
                        " instance": -0.014002659
                    },
                    {
                        "of": -4.838501e-06
                    },
                    {
                        " Job": -0.10151756
                    },
                    {
                        ")": -0.17505375
                    },
                    {
                        " {": -0.0035505332
                    },
                    {
                        "\n": -0.023871511
                    },
                    {
                        "<|endoftext|>": -0.30448774
                    },
                    {
                        "package": -1.4709299
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6498,
                    6499,
                    6503,
                    6512,
                    6514,
                    6518,
                    6519,
                    6522,
                    6524,
                    6528,
                    6529,
                    6532,
                    6536,
                    6539,
                    6541,
                    6542,
                    6556,
                    6562,
                    6566,
                    6569,
                    6572,
                    6581,
                    6583,
                    6587,
                    6592,
                    6597,
                    6601,
                    6609,
                    6613,
                    6614,
                    6616,
                    6621,
                    6628,
                    6631,
                    6632,
                    6642,
                    6644,
                    6645,
                    6655,
                    6658,
                    6660,
                    6664,
                    6673,
                    6675,
                    6679,
                    6680,
                    6682,
                    6683,
                    6683
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run<?,?> invokingBuild = getContext().get(Run.class);\n               TaskListener listener = getContext().get(TaskListener.class);\n               Node node = getContext().get(Node.class);\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    "<",
                    "?,",
                    "?",
                    ">",
                    " invoking",
                    "Build",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Run",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Task",
                    "Listener",
                    " listener",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Task",
                    "Listener",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Node",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "<|endoftext|>",
                    "<?",
                    "php",
                    "\n",
                    "/**",
                    "\n",
                    " *"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20510243,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -0.71461946,
                    -1.8394927,
                    -1.9352204,
                    -0.00061728765,
                    -0.5461653,
                    -0.0024908364,
                    -0.99234617,
                    -1.9950165,
                    -0.029460741,
                    -0.50623083,
                    -0.075002514,
                    -0.00077069976,
                    -0.0053139413,
                    -0.00018581701,
                    -0.011605132,
                    -0.00027637713,
                    -6.289782e-05,
                    -0.0060765636,
                    -0.021344004,
                    -0.19105765,
                    -2.6644223,
                    -0.00042484637,
                    -0.008168433,
                    -0.013601506,
                    -0.031862877,
                    -0.0031350108,
                    -0.00012000537,
                    -4.0843282e-05,
                    -9.9735196e-05,
                    -0.00018796182,
                    -2.880226e-05,
                    -0.000118333635,
                    -0.00011320953,
                    -0.014256986,
                    -0.012827388,
                    -0.06362269,
                    -0.7346981,
                    -0.007346351,
                    -0.021730427,
                    -0.57639503,
                    -0.0047668773,
                    -0.00014909416,
                    -0.00040940178,
                    -0.00018474413,
                    -0.011087887,
                    -0.00023917557,
                    -3.023464e-05,
                    -0.0019269227,
                    -0.029217867,
                    -0.3974006,
                    -2.3916087,
                    -0.026083995,
                    -0.15517397,
                    -1.9769297,
                    -0.01407985,
                    -0.050445046
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20510243
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        " Run": -1.8394927
                    },
                    {
                        "<": -1.9352204
                    },
                    {
                        "?,": -0.00061728765
                    },
                    {
                        "?": -0.5461653
                    },
                    {
                        ">": -0.0024908364
                    },
                    {
                        " invoking": -0.99234617
                    },
                    {
                        "Run": -0.1557221
                    },
                    {
                        " =": -0.029460741
                    },
                    {
                        " get": -0.50623083
                    },
                    {
                        "Context": -0.075002514
                    },
                    {
                        "().": -0.00077069976
                    },
                    {
                        "get": -0.0053139413
                    },
                    {
                        "(": -0.00018581701
                    },
                    {
                        "Run": -0.011605132
                    },
                    {
                        ".": -0.00027637713
                    },
                    {
                        "class": -6.289782e-05
                    },
                    {
                        ");": -0.0060765636
                    },
                    {
                        "\n": -0.021344004
                    },
                    {
                        "              ": -0.19105765
                    },
                    {
                        " if": -1.611786
                    },
                    {
                        "Listener": -0.00042484637
                    },
                    {
                        " listener": -0.008168433
                    },
                    {
                        " =": -0.013601506
                    },
                    {
                        " get": -0.031862877
                    },
                    {
                        "Context": -0.0031350108
                    },
                    {
                        "().": -0.00012000537
                    },
                    {
                        "get": -4.0843282e-05
                    },
                    {
                        "(": -9.9735196e-05
                    },
                    {
                        "Task": -0.00018796182
                    },
                    {
                        "Listener": -2.880226e-05
                    },
                    {
                        ".": -0.000118333635
                    },
                    {
                        "class": -0.00011320953
                    },
                    {
                        ");": -0.014256986
                    },
                    {
                        "\n": -0.012827388
                    },
                    {
                        "              ": -0.06362269
                    },
                    {
                        " Node": -0.7346981
                    },
                    {
                        " node": -0.007346351
                    },
                    {
                        " =": -0.021730427
                    },
                    {
                        " get": -0.57639503
                    },
                    {
                        "Context": -0.0047668773
                    },
                    {
                        "().": -0.00014909416
                    },
                    {
                        "get": -0.00040940178
                    },
                    {
                        "(": -0.00018474413
                    },
                    {
                        "Node": -0.011087887
                    },
                    {
                        ".": -0.00023917557
                    },
                    {
                        "class": -3.023464e-05
                    },
                    {
                        ");": -0.0019269227
                    },
                    {
                        "\n": -0.029217867
                    },
                    {
                        "<|endoftext|>": -0.3974006
                    },
                    {
                        "package": -1.4739814
                    },
                    {
                        "php": -0.026083995
                    },
                    {
                        "\n": -0.15517397
                    },
                    {
                        "\n": -0.6568488
                    },
                    {
                        "\n": -0.01407985
                    },
                    {
                        " *": -0.050445046
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6593,
                    6595,
                    6596,
                    6597,
                    6606,
                    6611,
                    6613,
                    6617,
                    6624,
                    6627,
                    6630,
                    6631,
                    6634,
                    6635,
                    6640,
                    6642,
                    6643,
                    6657,
                    6662,
                    6670,
                    6679,
                    6681,
                    6685,
                    6692,
                    6695,
                    6698,
                    6699,
                    6703,
                    6711,
                    6712,
                    6717,
                    6719,
                    6720,
                    6734,
                    6739,
                    6744,
                    6746,
                    6750,
                    6757,
                    6760,
                    6763,
                    6764,
                    6768,
                    6769,
                    6774,
                    6776,
                    6777,
                    6777,
                    6777,
                    6777,
                    6777,
                    6777,
                    6777
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    " frozen",
                    "_",
                    "string",
                    "_",
                    "lit",
                    "eral"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20510243,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -0.89770126,
                    -2.2695556,
                    -4.380623,
                    -0.0020838173,
                    -0.00021324158,
                    -1.8190814e-05,
                    -0.00040606305,
                    -5.460492e-07
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20510243
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        "package": -1.4720645
                    },
                    {
                        "include": -1.0923767
                    },
                    {
                        "_": -0.0020838173
                    },
                    {
                        "string": -0.00021324158
                    },
                    {
                        "_": -1.8190814e-05
                    },
                    {
                        "lit": -0.00040606305
                    },
                    {
                        "eral": -5.460492e-07
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Node node = invokingRun.getExecutor().getOwner();\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " invoking",
                    "Run",
                    ".",
                    "get",
                    "Exec",
                    "utor",
                    "().",
                    "get",
                    "Owner",
                    "();",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20510243,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -0.71461946,
                    -2.4264019,
                    -0.0093106795,
                    -0.022647845,
                    -1.9862885,
                    -0.030362543,
                    -0.011171845,
                    -0.002728865,
                    -0.44453785,
                    -9.2821094e-05,
                    -0.010678741,
                    -0.0022738955,
                    -0.024488427,
                    -1.4300636,
                    -0.018683828,
                    -0.30356374
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20510243
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        " Run": -1.8394927
                    },
                    {
                        " node": -0.0093106795
                    },
                    {
                        " =": -0.022647845
                    },
                    {
                        " Exec": -1.585756
                    },
                    {
                        "Run": -0.030362543
                    },
                    {
                        ".": -0.011171845
                    },
                    {
                        "get": -0.002728865
                    },
                    {
                        "Exec": -0.44453785
                    },
                    {
                        "utor": -9.2821094e-05
                    },
                    {
                        "().": -0.010678741
                    },
                    {
                        "get": -0.0022738955
                    },
                    {
                        "Owner": -0.024488427
                    },
                    {
                        "().": -0.27616152
                    },
                    {
                        "\n": -0.018683828
                    },
                    {
                        "<|endoftext|>": -0.30356374
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6593,
                    6598,
                    6600,
                    6609,
                    6612,
                    6613,
                    6616,
                    6620,
                    6624,
                    6627,
                    6630,
                    6635,
                    6638,
                    6639
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run<?, ?> invokingRun = getContext().get(Run.class);\n               Node node = getContext().get(Node.class);\n               EnvVars envVars = getContext().get(EnvVars.class);\n               TaskListener listener = getContext().get(TaskListener.class);\n               envVars.overrideAll(getContext().get(Launcher.class).getChannel().call(new Callable<Map<String, String>, IOException>() {\n                   @Override\n                   ",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    "<",
                    "?,",
                    " ?",
                    ">",
                    " invoking",
                    "Run",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Run",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Node",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " En",
                    "v",
                    "V",
                    "ars",
                    " env",
                    "V",
                    "ars",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "En",
                    "v",
                    "V",
                    "ars",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Task",
                    "Listener",
                    " listener",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Task",
                    "Listener",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " env",
                    "V",
                    "ars",
                    ".",
                    "over",
                    "ride",
                    "All",
                    "(",
                    "get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Laun",
                    "cher",
                    ".",
                    "class",
                    ").",
                    "get",
                    "Channel",
                    "().",
                    "call",
                    "(",
                    "new",
                    " Call",
                    "able",
                    "<",
                    "Map",
                    "<",
                    "String",
                    ",",
                    " String",
                    ">,",
                    " IO",
                    "Exception",
                    ">",
                    "()",
                    " {",
                    "\n",
                    "                  ",
                    " @",
                    "Override",
                    "\n",
                    "                  ",
                    " public",
                    " Map",
                    "<",
                    "String"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20510243,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -0.71461946,
                    -1.8394927,
                    -1.9352204,
                    -0.00061728765,
                    -0.8660524,
                    -0.002745542,
                    -0.91952693,
                    -0.14773263,
                    -0.029421022,
                    -0.30776292,
                    -0.24303281,
                    -0.0007350855,
                    -0.00410998,
                    -0.00018677162,
                    -0.012068891,
                    -0.0003204956,
                    -4.966285e-05,
                    -0.0034307868,
                    -0.015134344,
                    -0.15338558,
                    -2.1384804,
                    -0.011221695,
                    -0.024597768,
                    -0.6245812,
                    -0.014847373,
                    -0.00019094298,
                    -0.0005227035,
                    -0.00030404294,
                    -0.013860382,
                    -0.00040606305,
                    -2.9159892e-05,
                    -0.0033486725,
                    -0.021351798,
                    -0.78480184,
                    -2.2923765,
                    -6.635395e-05,
                    -0.017060593,
                    -6.827632e-08,
                    -0.15164112,
                    -0.49258727,
                    -2.9636725e-05,
                    -0.022526277,
                    -0.13005035,
                    -0.0014039734,
                    -0.0003274144,
                    -0.00050015905,
                    -0.00024370644,
                    -0.016239459,
                    -9.846204e-06,
                    -0.00028710873,
                    -9.055464e-07,
                    -0.0001517177,
                    -0.00014754539,
                    -0.004057611,
                    -0.01664076,
                    -0.06818928,
                    -1.2327638,
                    -0.00022802629,
                    -0.0071402406,
                    -0.010108267,
                    -0.15376574,
                    -0.00048811614,
                    -0.0002669587,
                    -0.00041769102,
                    -7.708367e-05,
                    -0.00016423648,
                    -3.4167595e-05,
                    -0.00016447584,
                    -3.869565e-05,
                    -0.0029683844,
                    -0.027750934,
                    -0.86953557,
                    -2.5905032,
                    -0.0031371631,
                    -2.0966954e-06,
                    -0.08064617,
                    -0.22274618,
                    -0.006767334,
                    -0.09659299,
                    -0.013434335,
                    -1.897555,
                    -0.03807921,
                    -0.0010800367,
                    -0.0031062507,
                    -0.00033510666,
                    -3.8719528,
                    -4.2153635e-05,
                    -0.0016638314,
                    -0.0030751007,
                    -0.0085436655,
                    -0.007557006,
                    -0.92063797,
                    -0.009957329,
                    -0.012307399,
                    -0.0017833055,
                    -0.05747563,
                    -2.2953603,
                    -0.0027297023,
                    -0.014896554,
                    -0.03926547,
                    -0.0019204732,
                    -0.00046730434,
                    -0.00029330945,
                    -0.19102353,
                    -0.0009898794,
                    -0.15038148,
                    -5.5745302e-05,
                    -0.00017317903,
                    -0.0035449124,
                    -0.001029498,
                    -0.12756617,
                    -0.079264976,
                    -0.21706717,
                    -0.0023228228,
                    -0.029230507,
                    -0.0012600137,
                    -0.005149764,
                    -0.0035740435,
                    -0.0007384261,
                    -0.00010319318
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20510243
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        " Run": -1.8394927
                    },
                    {
                        "<": -1.9352204
                    },
                    {
                        "?,": -0.00061728765
                    },
                    {
                        "?": -0.5461653
                    },
                    {
                        ">": -0.002745542
                    },
                    {
                        " invoking": -0.91952693
                    },
                    {
                        "Run": -0.14773263
                    },
                    {
                        " =": -0.029421022
                    },
                    {
                        " get": -0.30776292
                    },
                    {
                        "Context": -0.24303281
                    },
                    {
                        "().": -0.0007350855
                    },
                    {
                        "get": -0.00410998
                    },
                    {
                        "(": -0.00018677162
                    },
                    {
                        "Run": -0.012068891
                    },
                    {
                        ".": -0.0003204956
                    },
                    {
                        "class": -4.966285e-05
                    },
                    {
                        ");": -0.0034307868
                    },
                    {
                        "\n": -0.015134344
                    },
                    {
                        "              ": -0.15338558
                    },
                    {
                        " Task": -1.8396761
                    },
                    {
                        " node": -0.011221695
                    },
                    {
                        " =": -0.024597768
                    },
                    {
                        " get": -0.6245812
                    },
                    {
                        "Context": -0.014847373
                    },
                    {
                        "().": -0.00019094298
                    },
                    {
                        "get": -0.0005227035
                    },
                    {
                        "(": -0.00030404294
                    },
                    {
                        "Node": -0.013860382
                    },
                    {
                        ".": -0.00040606305
                    },
                    {
                        "class": -2.9159892e-05
                    },
                    {
                        ");": -0.0033486725
                    },
                    {
                        "\n": -0.021351798
                    },
                    {
                        "<|endoftext|>": -0.6750673
                    },
                    {
                        " Task": -0.70588106
                    },
                    {
                        "v": -6.635395e-05
                    },
                    {
                        "V": -0.017060593
                    },
                    {
                        "ars": -6.827632e-08
                    },
                    {
                        " env": -0.15164112
                    },
                    {
                        "V": -0.49258727
                    },
                    {
                        "ars": -2.9636725e-05
                    },
                    {
                        " =": -0.022526277
                    },
                    {
                        " get": -0.13005035
                    },
                    {
                        "Context": -0.0014039734
                    },
                    {
                        "().": -0.0003274144
                    },
                    {
                        "get": -0.00050015905
                    },
                    {
                        "(": -0.00024370644
                    },
                    {
                        "En": -0.016239459
                    },
                    {
                        "v": -9.846204e-06
                    },
                    {
                        "V": -0.00028710873
                    },
                    {
                        "ars": -9.055464e-07
                    },
                    {
                        ".": -0.0001517177
                    },
                    {
                        "class": -0.00014754539
                    },
                    {
                        ");": -0.004057611
                    },
                    {
                        "\n": -0.01664076
                    },
                    {
                        "              ": -0.06818928
                    },
                    {
                        " Task": -1.2327638
                    },
                    {
                        "Listener": -0.00022802629
                    },
                    {
                        " listener": -0.0071402406
                    },
                    {
                        " =": -0.010108267
                    },
                    {
                        " get": -0.15376574
                    },
                    {
                        "Context": -0.00048811614
                    },
                    {
                        "().": -0.0002669587
                    },
                    {
                        "get": -0.00041769102
                    },
                    {
                        "(": -7.708367e-05
                    },
                    {
                        "Task": -0.00016423648
                    },
                    {
                        "Listener": -3.4167595e-05
                    },
                    {
                        ".": -0.00016447584
                    },
                    {
                        "class": -3.869565e-05
                    },
                    {
                        ");": -0.0029683844
                    },
                    {
                        "\n": -0.027750934
                    },
                    {
                        "<|endoftext|>": -0.6984759
                    },
                    {
                        " if": -1.4653265
                    },
                    {
                        "V": -0.0031371631
                    },
                    {
                        "ars": -2.0966954e-06
                    },
                    {
                        ".": -0.08064617
                    },
                    {
                        "over": -0.22274618
                    },
                    {
                        "ride": -0.006767334
                    },
                    {
                        "All": -0.09659299
                    },
                    {
                        "(": -0.013434335
                    },
                    {
                        "step": -1.0274493
                    },
                    {
                        "Context": -0.03807921
                    },
                    {
                        "().": -0.0010800367
                    },
                    {
                        "get": -0.0031062507
                    },
                    {
                        "(": -0.00033510666
                    },
                    {
                        "En": -0.26825145
                    },
                    {
                        "cher": -4.2153635e-05
                    },
                    {
                        ".": -0.0016638314
                    },
                    {
                        "class": -0.0030751007
                    },
                    {
                        ").": -0.0085436655
                    },
                    {
                        "get": -0.007557006
                    },
                    {
                        "Channel": -0.92063797
                    },
                    {
                        "().": -0.009957329
                    },
                    {
                        "call": -0.012307399
                    },
                    {
                        "(": -0.0017833055
                    },
                    {
                        "new": -0.05747563
                    },
                    {
                        " Get": -0.98351926
                    },
                    {
                        "able": -0.0027297023
                    },
                    {
                        "<": -0.014896554
                    },
                    {
                        "Map": -0.03926547
                    },
                    {
                        "<": -0.0019204732
                    },
                    {
                        "String": -0.00046730434
                    },
                    {
                        ",": -0.00029330945
                    },
                    {
                        " String": -0.19102353
                    },
                    {
                        ">,": -0.0009898794
                    },
                    {
                        " IO": -0.15038148
                    },
                    {
                        "Exception": -5.5745302e-05
                    },
                    {
                        ">": -0.00017317903
                    },
                    {
                        "()": -0.0035449124
                    },
                    {
                        " {": -0.001029498
                    },
                    {
                        "\n": -0.12756617
                    },
                    {
                        "                  ": -0.079264976
                    },
                    {
                        " @": -0.21706717
                    },
                    {
                        "Override": -0.0023228228
                    },
                    {
                        "\n": -0.029230507
                    },
                    {
                        "                  ": -0.0012600137
                    },
                    {
                        " public": -0.005149764
                    },
                    {
                        " Map": -0.0035740435
                    },
                    {
                        "<": -0.0007384261
                    },
                    {
                        "String": -0.00010319318
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6593,
                    6595,
                    6597,
                    6598,
                    6607,
                    6610,
                    6612,
                    6616,
                    6623,
                    6626,
                    6629,
                    6630,
                    6633,
                    6634,
                    6639,
                    6641,
                    6642,
                    6656,
                    6661,
                    6666,
                    6668,
                    6672,
                    6679,
                    6682,
                    6685,
                    6686,
                    6690,
                    6691,
                    6696,
                    6698,
                    6699,
                    6713,
                    6716,
                    6717,
                    6718,
                    6721,
                    6725,
                    6726,
                    6729,
                    6731,
                    6735,
                    6742,
                    6745,
                    6748,
                    6749,
                    6751,
                    6752,
                    6753,
                    6756,
                    6757,
                    6762,
                    6764,
                    6765,
                    6779,
                    6784,
                    6792,
                    6801,
                    6803,
                    6807,
                    6814,
                    6817,
                    6820,
                    6821,
                    6825,
                    6833,
                    6834,
                    6839,
                    6841,
                    6842,
                    6856,
                    6860,
                    6861,
                    6864,
                    6865,
                    6869,
                    6873,
                    6876,
                    6877,
                    6880,
                    6887,
                    6890,
                    6893,
                    6894,
                    6898,
                    6902,
                    6903,
                    6908,
                    6910,
                    6913,
                    6920,
                    6923,
                    6927,
                    6928,
                    6931,
                    6936,
                    6940,
                    6941,
                    6944,
                    6945,
                    6951,
                    6952,
                    6959,
                    6961,
                    6964,
                    6973,
                    6974,
                    6976,
                    6978,
                    6979,
                    6997,
                    6999,
                    7007,
                    7008,
                    7026,
                    7027,
                    7027,
                    7027
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "/*",
                    "\n",
                    " *",
                    " Copyright",
                    " (",
                    "c",
                    ")"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20510243,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -0.89770126,
                    -2.6336522,
                    -0.35599098,
                    -0.21758175,
                    -1.0676157,
                    -0.6054795,
                    -0.5614401,
                    -0.00047326574
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20510243
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        "package": -1.4720645
                    },
                    {
                        "\n": -0.35599098
                    },
                    {
                        " *": -0.21758175
                    },
                    {
                        " Copyright": -1.0676157
                    },
                    {
                        " (": -0.6054795
                    },
                    {
                        "c": -0.5614401
                    },
                    {
                        ")": -0.00047326574
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) ) {\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " )",
                    " {",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20510243,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -3.3140266,
                    -0.11486262,
                    -0.07472007,
                    -0.6466085
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20510243
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " {": -0.11486262
                    },
                    {
                        "\n": -0.07472007
                    },
                    {
                        "<|endoftext|>": -0.6466085
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6540,
                    6542,
                    6543
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "<?",
                    "php",
                    "\n",
                    "\n",
                    "names",
                    "pace",
                    " App"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20510243,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -0.89770126,
                    -2.400435,
                    -0.02575068,
                    -0.15471119,
                    -0.65524113,
                    -0.7740884,
                    -7.3446927e-06,
                    -0.6986635
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20510243
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        "package": -1.4720645
                    },
                    {
                        "php": -0.02575068
                    },
                    {
                        "\n": -0.15471119
                    },
                    {
                        "\n": -0.65524113
                    },
                    {
                        "names": -0.7740884
                    },
                    {
                        "pace": -7.3446927e-06
                    },
                    {
                        " App": -0.6986635
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "/",
                    "********************************",
                    "********************************",
                    "************",
                    "***",
                    "\n",
                    " *"
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20515755,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -0.89770126,
                    -4.655398,
                    -0.07691664,
                    -0.08041928,
                    -0.5672923,
                    -0.45250583,
                    -0.01783544,
                    -0.14137642
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20515755
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        "package": -1.4720645
                    },
                    {
                        "********************************": -0.07691664
                    },
                    {
                        "********************************": -0.08041928
                    },
                    {
                        "************": -0.5672923
                    },
                    {
                        "***": -0.45250583
                    },
                    {
                        "\n": -0.01783544
                    },
                    {
                        " *": -0.14137642
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               \n               Run lastBuild = invokingRun.getParent().getLastBuild();\n               Run previousBuild = lastBuild == invokingRun ? null : lastBuild;\n               FlowNode node = getContext().get(FlowNode.class);\n               if (node == null) {\n                   node = new FlowNode(new FlowHead.HeadByItem(invokingRun.getParent()), UUID.randomUUID().toString());\n                   node.setDisplayName(Messages.BuildTriggerStep_TaskDisplayName());\n                   getContext().newBodyInvoker().\n                           withContexts(node.getAction(FlowNode.class), node, getContext().get(FlowNodeAction.class)).\n                           withCallback(BodyExecutionCallback.wrap(getContext())).\n                           start();\n               }\n               if (previousBuild != null) {\n                   node.addAction(new TimingAction(previousBuild));\n               }\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "               ",
                    "\n",
                    "              ",
                    " Run",
                    " last",
                    "Build",
                    " =",
                    " invoking",
                    "Run",
                    ".",
                    "get",
                    "Parent",
                    "().",
                    "get",
                    "Last",
                    "Build",
                    "();",
                    "\n",
                    "              ",
                    " Run",
                    " previous",
                    "Build",
                    " =",
                    " last",
                    "Build",
                    " ==",
                    " invoking",
                    "Run",
                    " ?",
                    " null",
                    " :",
                    " last",
                    "Build",
                    ";",
                    "\n",
                    "              ",
                    " Flow",
                    "Node",
                    " node",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Flow",
                    "Node",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "node",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " node",
                    " =",
                    " new",
                    " Flow",
                    "Node",
                    "(",
                    "new",
                    " Flow",
                    "Head",
                    ".",
                    "Head",
                    "By",
                    "Item",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ".",
                    "get",
                    "Parent",
                    "()",
                    "),",
                    " U",
                    "UID",
                    ".",
                    "random",
                    "U",
                    "UID",
                    "().",
                    "to",
                    "String",
                    "());",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "set",
                    "Display",
                    "Name",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "_",
                    "Task",
                    "Display",
                    "Name",
                    "());",
                    "\n",
                    "                  ",
                    " get",
                    "Context",
                    "().",
                    "new",
                    "Body",
                    "Inv",
                    "oker",
                    "().",
                    "\n",
                    "                ",
                    "          ",
                    " with",
                    "Context",
                    "s",
                    "(",
                    "node",
                    ".",
                    "get",
                    "Action",
                    "(",
                    "Flow",
                    "Node",
                    ".",
                    "class",
                    "),",
                    " node",
                    ",",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Flow",
                    "Node",
                    "Action",
                    ".",
                    "class",
                    ")).",
                    "\n",
                    "                ",
                    "          ",
                    " with",
                    "Callback",
                    "(",
                    "Body",
                    "Exec",
                    "ution",
                    "Callback",
                    ".",
                    "wrap",
                    "(",
                    "get",
                    "Context",
                    "())",
                    ").",
                    "\n",
                    "                ",
                    "          ",
                    " start",
                    "();",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "pre",
                    "vious",
                    "Build",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Tim",
                    "ing",
                    "Action",
                    "(",
                    "pre",
                    "vious",
                    "Build",
                    "));",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "ap",
                    ".",
                    "framework",
                    "."
                ],
                "token_logprobs": [
                    -0.0036411623,
                    -0.06964408,
                    -0.07263491,
                    -0.44917864,
                    -0.20515755,
                    -0.018179541,
                    -9.055464e-07,
                    -0.0012197905,
                    -0.000249787,
                    -0.18970568,
                    -0.12620676,
                    -0.16132823,
                    -0.032652225,
                    -0.01760866,
                    -2.0696069e-05,
                    -0.47094426,
                    -0.5667003,
                    -0.08485306,
                    -0.24325857,
                    -0.0410226,
                    -0.0062271566,
                    -8.653179e-06,
                    -0.19304438,
                    -2.8921473e-05,
                    -0.0014693317,
                    -0.0013002977,
                    -0.3077513,
                    -0.09535017,
                    -0.07117317,
                    -2.9220006,
                    -0.27372754,
                    -0.8561366,
                    -2.1137,
                    -2.3310342,
                    -0.2935537,
                    -0.07334128,
                    -1.8307521,
                    -0.006370569,
                    -0.10482813,
                    -0.0044678305,
                    -0.4227659,
                    -0.01096826,
                    -0.0005074364,
                    -0.014609832,
                    -0.024628008,
                    -0.0018525141,
                    -0.022504512,
                    -0.03398163,
                    -2.2754107,
                    -1.8445946,
                    -0.19511132,
                    -0.09527372,
                    -0.54778725,
                    -0.00019273112,
                    -0.93621075,
                    -1.3618675,
                    -0.0023287372,
                    -0.23136413,
                    -0.5460004,
                    -0.05948704,
                    -0.021010442,
                    -1.9263687e-05,
                    -0.019185515,
                    -0.047499947,
                    -0.18588108,
                    -3.3843474,
                    -0.22218256,
                    -0.11180177,
                    -0.20119067,
                    -0.5798391,
                    -0.054851253,
                    -0.004514114,
                    -0.018369243,
                    -0.0017507043,
                    -0.01734699,
                    -0.00019118235,
                    -5.4432137e-05,
                    -2.6060465e-05,
                    -0.0052618706,
                    -0.031963058,
                    -0.46007028,
                    -0.9250753,
                    -0.23227419,
                    -0.9608985,
                    -0.12400249,
                    -0.0029723279,
                    -0.06631607,
                    -0.013121214,
                    -0.043992203,
                    -0.007888201,
                    -1.0694504,
                    -0.003417332,
                    -0.36782768,
                    -0.22323568,
                    -0.28350246,
                    -0.06987863,
                    -1.9844263,
                    -0.5173606,
                    -0.6797445,
                    -2.4585488,
                    -1.3958716,
                    -0.9094988,
                    -0.0039702393,
                    -0.19326165,
                    -0.49177155,
                    -6.718934e-05,
                    -0.00070269924,
                    -0.08379381,
                    -0.00037708215,
                    -0.0041700713,
                    -0.22318122,
                    -0.0986586,
                    -2.7156496,
                    -0.00010128584,
                    -0.0045370455,
                    -0.015162181,
                    -6.1516675e-06,
                    -6.827632e-08,
                    -0.026442634,
                    -0.00047350506,
                    -7.052812e-05,
                    -0.30197224,
                    -0.012938966,
                    -0.21860671,
                    -0.6655165,
                    -0.020265544,
                    -1.1354518,
                    -0.49732134,
                    -0.25161123,
                    -0.24452357,
                    -0.6241371,
                    -0.00028866032,
                    -0.0025677409,
                    -0.05017783,
                    -0.007510704,
                    -0.008061355,
                    -1.8148849,
                    -2.9982862,
                    -0.038850456,
                    -5.5385808e-05,
                    -0.49337274,
                    -0.007669257,
                    -0.14951201,
                    -1.1740298,
                    -0.0019829404,
                    -0.00030523125,
                    -0.10743752,
                    -0.07178129,
                    -0.00013943638,
                    -0.0007851362,
                    -0.10685327,
                    -0.31503496,
                    -0.14037079,
                    -0.04585958,
                    -0.012550551,
                    -0.01006654,
                    -1.9969187,
                    -0.0030248803,
                    -0.20272505,
                    -2.5806468,
                    -0.131413,
                    -0.4033102,
                    -0.0053528324,
                    -2.3482244,
                    -0.035706155,
                    -0.98288816,
                    -0.2381096,
                    -0.41898236,
                    -1.763191,
                    -2.2160797,
                    -1.752586,
                    -0.010643198,
                    -0.6368469,
                    -0.04541407,
                    -0.0029189459,
                    -0.99445957,
                    -0.19969398,
                    -0.8417128,
                    -0.0010421444,
                    -0.0036659886,
                    -0.2764392,
                    -0.016044166,
                    -0.0019278782,
                    -0.0044562165,
                    -0.27474368,
                    -0.34076995,
                    -0.00044523858,
                    -0.5735878,
                    -0.016699364,
                    -4.277735e-07,
                    -0.00448184,
                    -0.00022075453,
                    -0.0020619598,
                    -0.0024050954,
                    -0.030925563,
                    -0.0008688892,
                    -0.030546634,
                    -0.0008475321,
                    -0.20545013,
                    -0.0014941056,
                    -0.0015108811,
                    -0.0058901394,
                    -0.038917076,
                    -0.017092364,
                    -0.55199856,
                    -0.000883504,
                    -0.19509898,
                    -1.1057905,
                    -1.6141118,
                    -0.4451456,
                    -0.6060323,
                    -2.3078366e-05,
                    -4.5135734e-05,
                    -0.15402997,
                    -0.008813384,
                    -0.18507323,
                    -0.0089654075,
                    -0.014206078,
                    -0.0075607896,
                    -0.59359455,
                    -0.013128039,
                    -0.004817786,
                    -0.05896087,
                    -0.005361341,
                    -0.028359339,
                    -3.1068609,
                    -0.010906674,
                    -0.009020917,
                    -0.00200235,
                    -0.5862192,
                    -4.6010214e-06,
                    -1.6165199e-05,
                    -0.45218652,
                    -0.0076866164,
                    -0.08400999,
                    -9.365555e-05,
                    -0.095989205,
                    -0.49825394,
                    -1.4755665,
                    -0.71576494,
                    -0.0013519244,
                    -6.745871,
                    -3.2025971,
                    -4.6160717,
                    -0.3565511
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036411623
                    },
                    {
                        "          ": -0.06964408
                    },
                    {
                        " if": -0.07263491
                    },
                    {
                        " (": -0.44917864
                    },
                    {
                        " !": -0.20515755
                    },
                    {
                        "step": -0.018179541
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012197905
                    },
                    {
                        "Wait": -0.000249787
                    },
                    {
                        "()": -0.18970568
                    },
                    {
                        " ||": -0.12620676
                    },
                    {
                        " (": -0.16132823
                    },
                    {
                        "item": -0.032652225
                    },
                    {
                        " instance": -0.01760866
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47094426
                    },
                    {
                        ")": -0.5667003
                    },
                    {
                        " ||": -0.08485306
                    },
                    {
                        " (": -0.24325857
                    },
                    {
                        "item": -0.0410226
                    },
                    {
                        " instance": -0.0062271566
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19304438
                    },
                    {
                        "ue": -2.8921473e-05
                    },
                    {
                        ".": -0.0014693317
                    },
                    {
                        "Task": -0.0013002977
                    },
                    {
                        "))": -0.3077513
                    },
                    {
                        " {": -0.09535017
                    },
                    {
                        "\n": -0.07117317
                    },
                    {
                        "              ": -0.71461946
                    },
                    {
                        "\n": -0.27372754
                    },
                    {
                        "<|endoftext|>": -0.7351859
                    },
                    {
                        " if": -1.9866923
                    },
                    {
                        "<": -1.848536
                    },
                    {
                        "Build": -0.2935537
                    },
                    {
                        " =": -0.07334128
                    },
                    {
                        " ((": -1.0807321
                    },
                    {
                        "Run": -0.006370569
                    },
                    {
                        ".": -0.10482813
                    },
                    {
                        "get": -0.0044678305
                    },
                    {
                        "Parent": -0.4227659
                    },
                    {
                        "().": -0.01096826
                    },
                    {
                        "get": -0.0005074364
                    },
                    {
                        "Last": -0.014609832
                    },
                    {
                        "Build": -0.024628008
                    },
                    {
                        "();": -0.0018525141
                    },
                    {
                        "\n": -0.022504512
                    },
                    {
                        "              ": -0.03398163
                    },
                    {
                        " if": -1.4031008
                    },
                    {
                        " last": -1.7134053
                    },
                    {
                        "Build": -0.19511132
                    },
                    {
                        " =": -0.09527372
                    },
                    {
                        " last": -0.54778725
                    },
                    {
                        "Build": -0.00019273112
                    },
                    {
                        " ==": -0.93621075
                    },
                    {
                        " null": -0.3389574
                    },
                    {
                        "Run": -0.0023287372
                    },
                    {
                        " ?": -0.23136413
                    },
                    {
                        " null": -0.5460004
                    },
                    {
                        " :": -0.05948704
                    },
                    {
                        " last": -0.021010442
                    },
                    {
                        "Build": -1.9263687e-05
                    },
                    {
                        ";": -0.019185515
                    },
                    {
                        "\n": -0.047499947
                    },
                    {
                        "              ": -0.18588108
                    },
                    {
                        " Node": -1.7895951
                    },
                    {
                        "Node": -0.22218256
                    },
                    {
                        " node": -0.11180177
                    },
                    {
                        " =": -0.20119067
                    },
                    {
                        " get": -0.5798391
                    },
                    {
                        "Context": -0.054851253
                    },
                    {
                        "().": -0.004514114
                    },
                    {
                        "get": -0.018369243
                    },
                    {
                        "(": -0.0017507043
                    },
                    {
                        "Flow": -0.01734699
                    },
                    {
                        "Node": -0.00019118235
                    },
                    {
                        ".": -5.4432137e-05
                    },
                    {
                        "class": -2.6060465e-05
                    },
                    {
                        ");": -0.0052618706
                    },
                    {
                        "\n": -0.031963058
                    },
                    {
                        "              ": -0.46007028
                    },
                    {
                        " if": -0.9250753
                    },
                    {
                        " (": -0.23227419
                    },
                    {
                        "pre": -0.697363
                    },
                    {
                        " ==": -0.12400249
                    },
                    {
                        " null": -0.0029723279
                    },
                    {
                        ")": -0.06631607
                    },
                    {
                        " {": -0.013121214
                    },
                    {
                        "\n": -0.043992203
                    },
                    {
                        "                  ": -0.007888201
                    },
                    {
                        " node": -1.0694504
                    },
                    {
                        " =": -0.003417332
                    },
                    {
                        " new": -0.36782768
                    },
                    {
                        " Flow": -0.22323568
                    },
                    {
                        "Node": -0.28350246
                    },
                    {
                        "(": -0.06987863
                    },
                    {
                        "null": -1.7075431
                    },
                    {
                        " Flow": -0.5173606
                    },
                    {
                        "Head": -0.6797445
                    },
                    {
                        "(": -0.25140122
                    },
                    {
                        "D": -1.3764483
                    },
                    {
                        "(": -0.6955153
                    },
                    {
                        "Item": -0.0039702393
                    },
                    {
                        "(": -0.19326165
                    },
                    {
                        "inv": -0.49177155
                    },
                    {
                        "oking": -6.718934e-05
                    },
                    {
                        "Run": -0.00070269924
                    },
                    {
                        ".": -0.08379381
                    },
                    {
                        "get": -0.00037708215
                    },
                    {
                        "Parent": -0.0041700713
                    },
                    {
                        "()": -0.22318122
                    },
                    {
                        "),": -0.0986586
                    },
                    {
                        " previous": -1.5101594
                    },
                    {
                        "UID": -0.00010128584
                    },
                    {
                        ".": -0.0045370455
                    },
                    {
                        "random": -0.015162181
                    },
                    {
                        "U": -6.1516675e-06
                    },
                    {
                        "UID": -6.827632e-08
                    },
                    {
                        "().": -0.026442634
                    },
                    {
                        "to": -0.00047350506
                    },
                    {
                        "String": -7.052812e-05
                    },
                    {
                        "());": -0.30197224
                    },
                    {
                        "\n": -0.012938966
                    },
                    {
                        "                  ": -0.21860671
                    },
                    {
                        " node": -0.6655165
                    },
                    {
                        ".": -0.020265544
                    },
                    {
                        "add": -0.50951535
                    },
                    {
                        "Display": -0.49732134
                    },
                    {
                        "Name": -0.25161123
                    },
                    {
                        "(": -0.24452357
                    },
                    {
                        "Mess": -0.6241371
                    },
                    {
                        "ages": -0.00028866032
                    },
                    {
                        ".": -0.0025677409
                    },
                    {
                        "Build": -0.05017783
                    },
                    {
                        "Trigger": -0.007510704
                    },
                    {
                        "Step": -0.008061355
                    },
                    {
                        "Exec": -0.18741877
                    },
                    {
                        "Node": -2.159666
                    },
                    {
                        "Display": -0.038850456
                    },
                    {
                        "Name": -5.5385808e-05
                    },
                    {
                        "());": -0.49337274
                    },
                    {
                        "\n": -0.007669257
                    },
                    {
                        "                  ": -0.14951201
                    },
                    {
                        " node": -0.67603153
                    },
                    {
                        "Context": -0.0019829404
                    },
                    {
                        "().": -0.00030523125
                    },
                    {
                        "new": -0.10743752
                    },
                    {
                        "Body": -0.07178129
                    },
                    {
                        "Inv": -0.00013943638
                    },
                    {
                        "oker": -0.0007851362
                    },
                    {
                        "().": -0.10685327
                    },
                    {
                        "\n": -0.31503496
                    },
                    {
                        "                ": -0.14037079
                    },
                    {
                        "          ": -0.04585958
                    },
                    {
                        " with": -0.012550551
                    },
                    {
                        "Context": -0.01006654
                    },
                    {
                        "(": -0.15212919
                    },
                    {
                        "(": -0.0030248803
                    },
                    {
                        "node": -0.20272505
                    },
                    {
                        ").": -0.7267879
                    },
                    {
                        "get": -0.131413
                    },
                    {
                        "Action": -0.4033102
                    },
                    {
                        "(": -0.0053528324
                    },
                    {
                        "Context": -1.1342857
                    },
                    {
                        "Node": -0.035706155
                    },
                    {
                        "Action": -0.5780533
                    },
                    {
                        "class": -0.2381096
                    },
                    {
                        "),": -0.41898236
                    },
                    {
                        " new": -1.6014001
                    },
                    {
                        ".": -0.38336685
                    },
                    {
                        " new": -1.3741709
                    },
                    {
                        "Context": -0.010643198
                    },
                    {
                        "().": -0.6368469
                    },
                    {
                        "get": -0.04541407
                    },
                    {
                        "(": -0.0029189459
                    },
                    {
                        "Flow": -0.99445957
                    },
                    {
                        "Node": -0.19969398
                    },
                    {
                        ".": -0.59764844
                    },
                    {
                        ".": -0.0010421444
                    },
                    {
                        "class": -0.0036659886
                    },
                    {
                        ")).": -0.2764392
                    },
                    {
                        "\n": -0.016044166
                    },
                    {
                        "                ": -0.0019278782
                    },
                    {
                        "          ": -0.0044562165
                    },
                    {
                        " with": -0.27474368
                    },
                    {
                        "Callback": -0.34076995
                    },
                    {
                        "(": -0.00044523858
                    },
                    {
                        "Body": -0.5735878
                    },
                    {
                        "Exec": -0.016699364
                    },
                    {
                        "ution": -4.277735e-07
                    },
                    {
                        "Callback": -0.00448184
                    },
                    {
                        ".": -0.00022075453
                    },
                    {
                        "wrap": -0.0020619598
                    },
                    {
                        "(": -0.0024050954
                    },
                    {
                        "get": -0.030925563
                    },
                    {
                        "Context": -0.0008688892
                    },
                    {
                        "())": -0.030546634
                    },
                    {
                        ").": -0.0008475321
                    },
                    {
                        "\n": -0.20545013
                    },
                    {
                        "                ": -0.0014941056
                    },
                    {
                        "          ": -0.0015108811
                    },
                    {
                        " start": -0.0058901394
                    },
                    {
                        "();": -0.038917076
                    },
                    {
                        "\n": -0.017092364
                    },
                    {
                        "              ": -0.55199856
                    },
                    {
                        " }": -0.000883504
                    },
                    {
                        "\n": -0.19509898
                    },
                    {
                        "<|endoftext|>": -0.60038024
                    },
                    {
                        " if": -1.6141118
                    },
                    {
                        " (": -0.4451456
                    },
                    {
                        "pre": -0.6060323
                    },
                    {
                        "vious": -2.3078366e-05
                    },
                    {
                        "Build": -4.5135734e-05
                    },
                    {
                        " !=": -0.15402997
                    },
                    {
                        " null": -0.008813384
                    },
                    {
                        ")": -0.18507323
                    },
                    {
                        " {": -0.0089654075
                    },
                    {
                        "\n": -0.014206078
                    },
                    {
                        "                  ": -0.0075607896
                    },
                    {
                        " node": -0.59359455
                    },
                    {
                        ".": -0.013128039
                    },
                    {
                        "add": -0.004817786
                    },
                    {
                        "Action": -0.05896087
                    },
                    {
                        "(": -0.005361341
                    },
                    {
                        "new": -0.028359339
                    },
                    {
                        " Cause": -1.3255517
                    },
                    {
                        "ing": -0.010906674
                    },
                    {
                        "Action": -0.009020917
                    },
                    {
                        "(": -0.00200235
                    },
                    {
                        "pre": -0.5862192
                    },
                    {
                        "vious": -4.6010214e-06
                    },
                    {
                        "Build": -1.6165199e-05
                    },
                    {
                        "));": -0.45218652
                    },
                    {
                        "\n": -0.0076866164
                    },
                    {
                        "              ": -0.08400999
                    },
                    {
                        " }": -9.365555e-05
                    },
                    {
                        "\n": -0.095989205
                    },
                    {
                        "<|endoftext|>": -0.49825394
                    },
                    {
                        "package": -1.4755665
                    },
                    {
                        " com": -0.71576494
                    },
                    {
                        ".": -0.0013519244
                    },
                    {
                        "example": -2.1202984
                    },
                    {
                        "ress": -1.7064548
                    },
                    {
                        "mis": -2.4750342
                    },
                    {
                        ".": -0.3565511
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6589,
                    6590,
                    6604,
                    6608,
                    6613,
                    6618,
                    6620,
                    6629,
                    6632,
                    6633,
                    6636,
                    6642,
                    6645,
                    6648,
                    6652,
                    6657,
                    6660,
                    6661,
                    6675,
                    6679,
                    6688,
                    6693,
                    6695,
                    6700,
                    6705,
                    6708,
                    6717,
                    6720,
                    6722,
                    6727,
                    6729,
                    6734,
                    6739,
                    6740,
                    6741,
                    6755,
                    6760,
                    6764,
                    6769,
                    6771,
                    6775,
                    6782,
                    6785,
                    6788,
                    6789,
                    6793,
                    6797,
                    6798,
                    6803,
                    6805,
                    6806,
                    6820,
                    6823,
                    6825,
                    6829,
                    6832,
                    6837,
                    6838,
                    6840,
                    6841,
                    6859,
                    6864,
                    6866,
                    6870,
                    6875,
                    6879,
                    6880,
                    6883,
                    6888,
                    6892,
                    6893,
                    6897,
                    6899,
                    6903,
                    6904,
                    6907,
                    6912,
                    6915,
                    6916,
                    6919,
                    6925,
                    6927,
                    6929,
                    6931,
                    6934,
                    6935,
                    6941,
                    6942,
                    6945,
                    6948,
                    6950,
                    6956,
                    6960,
                    6961,
                    6979,
                    6984,
                    6985,
                    6988,
                    6995,
                    6999,
                    7000,
                    7004,
                    7008,
                    7009,
                    7014,
                    7021,
                    7025,
                    7026,
                    7030,
                    7037,
                    7041,
                    7045,
                    7046,
                    7064,
                    7068,
                    7075,
                    7078,
                    7081,
                    7085,
                    7088,
                    7092,
                    7095,
                    7096,
                    7112,
                    7122,
                    7127,
                    7134,
                    7135,
                    7136,
                    7140,
                    7141,
                    7144,
                    7150,
                    7151,
                    7155,
                    7159,
                    7160,
                    7165,
                    7167,
                    7172,
                    7173,
                    7177,
                    7184,
                    7187,
                    7190,
                    7191,
                    7195,
                    7199,
                    7205,
                    7206,
                    7211,
                    7214,
                    7215,
                    7231,
                    7241,
                    7246,
                    7254,
                    7255,
                    7259,
                    7263,
                    7268,
                    7276,
                    7277,
                    7281,
                    7282,
                    7285,
                    7292,
                    7295,
                    7297,
                    7298,
                    7314,
                    7324,
                    7330,
                    7333,
                    7334,
                    7348,
                    7350,
                    7351,
                    7365,
                    7368,
                    7370,
                    7373,
                    7378,
                    7383,
                    7386,
                    7391,
                    7392,
                    7394,
                    7395,
                    7413,
                    7418,
                    7419,
                    7422,
                    7428,
                    7429,
                    7432,
                    7436,
                    7439,
                    7445,
                    7446,
                    7449,
                    7454,
                    7459,
                    7462,
                    7463,
                    7477,
                    7479,
                    7480,
                    7480,
                    7480,
                    7480,
                    7480,
                    7480,
                    7480,
                    7480
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 1393,
        "completion_tokens": 692,
        "total_tokens": 2085
    },
    "validation_result": [
        {
            "patch": "           if (!(item instanceof Job) && !step.getWait()) {\n               throw new AbortException(\"Item type does not support non-waiting builds\");\n           }\n           if (item instanceof Job) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run<?,?> invokingBuild = getContext().get(Run.class);\n               TaskListener listener = getContext().get(TaskListener.class);\n               Node node = getContext().get(Node.class);\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Node node = invokingRun.getExecutor().getOwner();\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run<?, ?> invokingRun = getContext().get(Run.class);\n               Node node = getContext().get(Node.class);\n               EnvVars envVars = getContext().get(EnvVars.class);\n               TaskListener listener = getContext().get(TaskListener.class);\n               envVars.overrideAll(getContext().get(Launcher.class).getChannel().call(new Callable<Map<String, String>, IOException>() {\n                   @Override\n                   ",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) ) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               \n               Run lastBuild = invokingRun.getParent().getLastBuild();\n               Run previousBuild = lastBuild == invokingRun ? null : lastBuild;\n               FlowNode node = getContext().get(FlowNode.class);\n               if (node == null) {\n                   node = new FlowNode(new FlowHead.HeadByItem(invokingRun.getParent()), UUID.randomUUID().toString());\n                   node.setDisplayName(Messages.BuildTriggerStep_TaskDisplayName());\n                   getContext().newBodyInvoker().\n                           withContexts(node.getAction(FlowNode.class), node, getContext().get(FlowNodeAction.class)).\n                           withCallback(BodyExecutionCallback.wrap(getContext())).\n                           start();\n               }\n               if (previousBuild != null) {\n                   node.addAction(new TimingAction(previousBuild));\n               }\n",
            "correctness": "uncompilable"
        }
    ]
}