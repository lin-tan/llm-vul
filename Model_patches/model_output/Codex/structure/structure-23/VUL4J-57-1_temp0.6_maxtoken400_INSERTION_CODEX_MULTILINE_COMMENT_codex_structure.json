{
    "id": "cmpl-6lf349Pq7Vm1aSASjjDKy8fFZcgmu",
    "object": "text_completion",
    "created": 1676817226,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Node node = executingNode();\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " executing",
                    "Node",
                    "();",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    ".",
                    "dem",
                    "o"
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -0.45596248,
                    -0.20597365,
                    -0.018219119,
                    -9.055464e-07,
                    -0.0012539848,
                    -0.00025527156,
                    -0.19275646,
                    -0.12248955,
                    -0.15723257,
                    -0.032773115,
                    -0.01867223,
                    -2.0696069e-05,
                    -0.46855068,
                    -0.5658461,
                    -0.08890405,
                    -0.23893519,
                    -0.041518163,
                    -0.0062726196,
                    -8.653179e-06,
                    -0.19241312,
                    -2.9041616e-05,
                    -0.0014947035,
                    -0.0012891982,
                    -0.30788884,
                    -0.09529706,
                    -0.071891576,
                    -0.75168943,
                    -2.4671955,
                    -0.008619776,
                    -0.022626627,
                    -3.3034692,
                    -0.001929551,
                    -0.25309166,
                    -0.020083878,
                    -0.56367433,
                    -1.4712255,
                    -0.7171202,
                    -0.0013839774,
                    -2.127371,
                    -0.009925245,
                    -2.7146244,
                    -0.035579287
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.45596248
                    },
                    {
                        " !": -0.20597365
                    },
                    {
                        "step": -0.018219119
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012539848
                    },
                    {
                        "Wait": -0.00025527156
                    },
                    {
                        "()": -0.19275646
                    },
                    {
                        " ||": -0.12248955
                    },
                    {
                        " (": -0.15723257
                    },
                    {
                        "item": -0.032773115
                    },
                    {
                        " instance": -0.01867223
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.46855068
                    },
                    {
                        ")": -0.5658461
                    },
                    {
                        " ||": -0.08890405
                    },
                    {
                        " (": -0.23893519
                    },
                    {
                        "item": -0.041518163
                    },
                    {
                        " instance": -0.0062726196
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19241312
                    },
                    {
                        "ue": -2.9041616e-05
                    },
                    {
                        ".": -0.0014947035
                    },
                    {
                        "Task": -0.0012891982
                    },
                    {
                        "))": -0.30788884
                    },
                    {
                        " {": -0.09529706
                    },
                    {
                        "\n": -0.071891576
                    },
                    {
                        "              ": -0.75168943
                    },
                    {
                        " Run": -1.8993492
                    },
                    {
                        " node": -0.008619776
                    },
                    {
                        " =": -0.022626627
                    },
                    {
                        " Exec": -1.6052644
                    },
                    {
                        "Node": -0.001929551
                    },
                    {
                        "();": -0.25309166
                    },
                    {
                        "\n": -0.020083878
                    },
                    {
                        "<|endoftext|>": -0.56367433
                    },
                    {
                        "package": -1.4712255
                    },
                    {
                        " com": -0.7171202
                    },
                    {
                        ".": -0.0013839774
                    },
                    {
                        "example": -2.127371
                    },
                    {
                        ".": -0.009925245
                    },
                    {
                        "dem": -2.7146244
                    },
                    {
                        "o": -0.035579287
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6593,
                    6598,
                    6600,
                    6610,
                    6614,
                    6617,
                    6618,
                    6618,
                    6618,
                    6618,
                    6618,
                    6618,
                    6618,
                    6618
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if (step.getWait() || (item instanceof Job)) {\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com"
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.070265725,
                    -0.4549547,
                    -3.7982655,
                    -0.0032121453,
                    -0.014627616,
                    -0.039645553,
                    -0.18687557,
                    -0.28458726,
                    -0.068176195,
                    -0.003209992,
                    -0.0016498585,
                    -2.8138238e-06,
                    -0.02521263,
                    -0.04801814,
                    -0.03732205,
                    -0.05372984,
                    -0.53324854,
                    -1.4669702,
                    -0.7137607
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.070265725
                    },
                    {
                        " (": -0.4549547
                    },
                    {
                        " !": -0.20631447
                    },
                    {
                        ".": -0.0032121453
                    },
                    {
                        "get": -0.014627616
                    },
                    {
                        "Wait": -0.039645553
                    },
                    {
                        "()": -0.18687557
                    },
                    {
                        " ||": -0.28458726
                    },
                    {
                        " (": -0.068176195
                    },
                    {
                        "item": -0.003209992
                    },
                    {
                        " instance": -0.0016498585
                    },
                    {
                        "of": -2.8138238e-06
                    },
                    {
                        " Job": -0.02521263
                    },
                    {
                        "))": -0.04801814
                    },
                    {
                        " {": -0.03732205
                    },
                    {
                        "\n": -0.05372984
                    },
                    {
                        "<|endoftext|>": -0.53324854
                    },
                    {
                        "package": -1.4669702
                    },
                    {
                        " com": -0.7137607
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6501,
                    6502,
                    6505,
                    6509,
                    6511,
                    6514,
                    6516,
                    6520,
                    6529,
                    6531,
                    6535,
                    6537,
                    6539,
                    6540,
                    6540,
                    6540
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Queue.Task)) {\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    ".",
                    "my"
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -0.45596248,
                    -0.20597365,
                    -0.018219119,
                    -9.055464e-07,
                    -0.0012539848,
                    -0.00025527156,
                    -0.19275646,
                    -0.12248955,
                    -0.15723257,
                    -0.032773115,
                    -0.01867223,
                    -2.0696069e-05,
                    -2.3524342,
                    -0.00077869144,
                    -0.007452393,
                    -0.013245933,
                    -0.30553135,
                    -0.027928665,
                    -0.06363571,
                    -0.7769966,
                    -1.4718846,
                    -0.71536195,
                    -0.0013821865,
                    -2.126923,
                    -0.010043482,
                    -3.5669131
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.45596248
                    },
                    {
                        " !": -0.20597365
                    },
                    {
                        "step": -0.018219119
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012539848
                    },
                    {
                        "Wait": -0.00025527156
                    },
                    {
                        "()": -0.19275646
                    },
                    {
                        " ||": -0.12248955
                    },
                    {
                        " (": -0.15723257
                    },
                    {
                        "item": -0.032773115
                    },
                    {
                        " instance": -0.01867223
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.46855068
                    },
                    {
                        "ue": -0.00077869144
                    },
                    {
                        ".": -0.007452393
                    },
                    {
                        "Task": -0.013245933
                    },
                    {
                        "))": -0.30553135
                    },
                    {
                        " {": -0.027928665
                    },
                    {
                        "\n": -0.06363571
                    },
                    {
                        "<|endoftext|>": -0.7769966
                    },
                    {
                        "package": -1.4718846
                    },
                    {
                        " com": -0.71536195
                    },
                    {
                        ".": -0.0013821865
                    },
                    {
                        "example": -2.126923
                    },
                    {
                        ".": -0.010043482
                    },
                    {
                        "dem": -2.7140386
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6539,
                    6540,
                    6544,
                    6546,
                    6548,
                    6549,
                    6549,
                    6549,
                    6549,
                    6549,
                    6549,
                    6549
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               if (step.getParameters() == null || step.getParameters().isEmpty()) {\n                   String itemEncoded = ModelHyperlinkNote.encodeTo(item);\n                   listener.getLogger().println(\"Scheduling item: \" + itemEncoded);\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(item.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate ));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{item, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       try {\n                           Class itemClass = item.getClass();\n                           Method getQuietPeriod = itemClass.getMethod(\"getQuietPeriod\");\n                           Class returnType  = getQuietPeriod.getReturnType();\n                           if (returnType.equals(int.class)) {\n                               quietPeriod = (Integer) getQuietPeriod.invoke(item);\n                           }\n                       } catch (NoSuchMethodException e) {\n                       } catch (",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    " ||",
                    " item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Parameters",
                    "()",
                    " ==",
                    " null",
                    " ||",
                    " step",
                    ".",
                    "get",
                    "Parameters",
                    "().",
                    "is",
                    "Empty",
                    "())",
                    " {",
                    "\n",
                    "                  ",
                    " String",
                    " item",
                    "Enc",
                    "oded",
                    " =",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "item",
                    ");",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " item",
                    ":",
                    " \"",
                    " +",
                    " item",
                    "Enc",
                    "oded",
                    ");",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Label",
                    "Action",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "item",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "()",
                    "))",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Action",
                    ">",
                    " actions",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    ">",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "                      ",
                    " Step",
                    "Context",
                    " context",
                    " =",
                    " get",
                    "Context",
                    "();",
                    "\n",
                    "                      ",
                    " boolean",
                    " is",
                    "Prop",
                    "agate",
                    " =",
                    " ",
                    " step",
                    ".",
                    "is",
                    "Prop",
                    "agate",
                    "();",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Build",
                    "Trigger",
                    "Action",
                    "(",
                    "context",
                    ",",
                    "is",
                    "Prop",
                    "agate",
                    " ));",
                    "\n",
                    "                      ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "sc",
                    "hed",
                    "uling",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "item",
                    ",",
                    " context",
                    "});",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ");",
                    "\n",
                    "                  ",
                    " Cause",
                    "Action",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Cause",
                    "Action",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                  ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "cause",
                    "Action",
                    ");",
                    "\n",
                    "                  ",
                    " Integer",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "quiet",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " try",
                    " {",
                    "\n",
                    "                ",
                    "          ",
                    " Class",
                    " item",
                    "Class",
                    " =",
                    " item",
                    ".",
                    "get",
                    "Class",
                    "();",
                    "\n",
                    "                ",
                    "          ",
                    " Method",
                    " get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    " =",
                    " item",
                    "Class",
                    ".",
                    "get",
                    "Method",
                    "(\"",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "\");",
                    "\n",
                    "                ",
                    "          ",
                    " Class",
                    " return",
                    "Type",
                    " ",
                    " =",
                    " get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    ".",
                    "get",
                    "Return",
                    "Type",
                    "();",
                    "\n",
                    "                ",
                    "          ",
                    " if",
                    " (",
                    "return",
                    "Type",
                    ".",
                    "equ",
                    "als",
                    "(",
                    "int",
                    ".",
                    "class",
                    "))",
                    " {",
                    "\n",
                    "                ",
                    "              ",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " (",
                    "Integer",
                    ")",
                    " get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    ".",
                    "invoke",
                    "(",
                    "item",
                    ");",
                    "\n",
                    "                ",
                    "          ",
                    " }",
                    "\n",
                    "                      ",
                    " }",
                    " catch",
                    " (",
                    "No",
                    "Such",
                    "Method",
                    "Exception",
                    " e",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " }",
                    " catch",
                    " ("
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -0.45596248,
                    -0.20597365,
                    -0.018219119,
                    -9.055464e-07,
                    -0.0012539848,
                    -0.00025527156,
                    -0.19275646,
                    -0.12248955,
                    -0.15723257,
                    -0.032773115,
                    -0.01867223,
                    -2.0696069e-05,
                    -0.46855068,
                    -1.9117161,
                    -0.24047746,
                    -0.012513796,
                    -1.8788729e-05,
                    -0.20645544,
                    -2.8206221e-05,
                    -0.0013905423,
                    -0.0015246698,
                    -0.30920938,
                    -0.045486737,
                    -0.06802625,
                    -0.79990834,
                    -2.0125344,
                    -0.7988115,
                    -1.2394134,
                    -0.008017491,
                    -0.07253192,
                    -0.833066,
                    -0.008462092,
                    -1.2205836,
                    -0.004591534,
                    -0.48019516,
                    -0.039142918,
                    -0.000115950395,
                    -0.0003016569,
                    -0.0010559285,
                    -0.000502546,
                    -0.0041096206,
                    -1.8310955e-05,
                    -0.09056131,
                    -0.0026597755,
                    -0.01645981,
                    -0.1392307,
                    -1.7322907,
                    -0.34935066,
                    -0.038817678,
                    -0.00060870085,
                    -0.01553817,
                    -0.025676928,
                    -1.1278585e-05,
                    -1.855031e-05,
                    -1.5805701e-05,
                    -8.6025255e-05,
                    -3.0947078e-05,
                    -2.2159093e-06,
                    -8.2807564e-05,
                    -0.001468258,
                    -0.002341224,
                    -0.0019861637,
                    -0.005737384,
                    -0.005416351,
                    -0.037387017,
                    -0.0003287257,
                    -0.0003042804,
                    -2.0966954e-06,
                    -5.460492e-07,
                    -0.00017699462,
                    -0.0014344739,
                    -0.015981419,
                    -0.016855747,
                    -0.00011320953,
                    -0.0005893778,
                    -0.084066845,
                    -0.009437869,
                    -0.005886962,
                    -0.00076974515,
                    -0.97315556,
                    -0.00088183413,
                    -4.277735e-07,
                    -0.07674795,
                    -0.010335345,
                    -0.32061353,
                    -0.49639952,
                    -0.001032957,
                    -0.00023834205,
                    -1.7953334e-05,
                    -0.00046157953,
                    -0.01026615,
                    -0.0017121305,
                    -0.000106295425,
                    -0.010253564,
                    -0.021758508,
                    -8.0580685e-06,
                    -0.0019936298,
                    -0.0036795083,
                    -0.0008103671,
                    -0.0024248126,
                    -0.003680106,
                    -4.477904e-05,
                    -0.0001599459,
                    -0.004548062,
                    -0.0059378096,
                    -0.052046165,
                    -0.07045483,
                    -0.00016817037,
                    -0.0190103,
                    -0.08091214,
                    -2.6060465e-05,
                    -0.00077642646,
                    -0.0005629566,
                    -0.00046432132,
                    -0.017344626,
                    -0.11795836,
                    -0.200068,
                    -0.0010435778,
                    -0.0030369577,
                    -2.1051823e-05,
                    -0.009768617,
                    -0.0051578535,
                    -0.003698773,
                    -0.0007741596,
                    -2.3675353e-05,
                    -0.003068224,
                    -0.074460365,
                    -0.00020513259,
                    -0.0062489253,
                    -0.0053305384,
                    -0.039049823,
                    -0.012349759,
                    -0.004950875,
                    -3.9292627e-05,
                    -0.0010706062,
                    -0.00053492666,
                    -0.005567746,
                    -0.00020978546,
                    -0.0024478144,
                    -0.0045377645,
                    -0.06110029,
                    -0.0001589913,
                    -0.0020859668,
                    -0.0010990717,
                    -0.0019383293,
                    -5.061746e-05,
                    -0.0002423942,
                    -0.0015612049,
                    -0.00428422,
                    -0.05593975,
                    -0.018378956,
                    -0.0015495638,
                    -0.003076774,
                    -0.010577655,
                    -0.26325646,
                    -0.0008654275,
                    -3.5120327e-05,
                    -0.00036754078,
                    -4.811501e-05,
                    -2.4866502e-05,
                    -0.0011311135,
                    -0.00743702,
                    -0.0024827695,
                    -0.016512953,
                    -5.0856816e-05,
                    -1.7595703e-05,
                    -0.00022182555,
                    -0.008867682,
                    -0.0012483763,
                    -0.00024811528,
                    -0.000246207,
                    -0.0014622909,
                    -0.0086563295,
                    -0.00673391,
                    -1.0550338,
                    -4.477904e-05,
                    -5.07376e-05,
                    -0.29087996,
                    -0.0034894617,
                    -0.008004094,
                    -0.0061694584,
                    -1.4974988e-05,
                    -5.1810483e-05,
                    -0.0022681004,
                    -3.7266083e-05,
                    -0.00038698118,
                    -6.6294406e-06,
                    -0.008351493,
                    -2.8138238e-06,
                    -0.0018527535,
                    -0.001154684,
                    -0.005078654,
                    -5.460492e-07,
                    -6.13453e-05,
                    -0.0012066026,
                    -0.000331888,
                    -0.0005088669,
                    -0.0012274274,
                    -0.00024287197,
                    -7.517727e-05,
                    -0.0008477705,
                    -0.00018533925,
                    -8.9960085e-05,
                    -0.00034488458,
                    -0.0008168091,
                    -0.004427716,
                    -0.00043235742,
                    -0.00012679932,
                    -0.027518889,
                    -0.012795693,
                    -0.0063706893,
                    -0.009479567,
                    -0.0009970966,
                    -0.0031656858,
                    -0.004015122,
                    -6.3134365e-05,
                    -0.0108306315,
                    -0.0051561752,
                    -0.02521379,
                    -0.012505648,
                    -0.0002860377,
                    -9.130952e-06,
                    -7.11223e-05,
                    -0.0013299019,
                    -0.0018334041,
                    -0.00083351333,
                    -0.00022003835,
                    -3.1185496e-05,
                    -1.6999666e-05,
                    -2.0218295e-05,
                    -1.5448071e-05,
                    -0.0013202928,
                    -0.003036479,
                    -6.3900848e-06,
                    -5.4075444e-05,
                    -0.0005363581,
                    -0.001167275,
                    -0.00128478,
                    -0.025443712,
                    -5.3597672e-05,
                    -0.0033143444,
                    -0.00013383264,
                    -0.00057309505,
                    -0.0014911215,
                    -7.24364e-05,
                    -9.490449e-06,
                    -0.00015589187,
                    -0.00076425495,
                    -0.0002925942,
                    -0.0016545171,
                    -0.0013567003,
                    -0.0067997393,
                    -0.00017675622,
                    -2.0815281e-05,
                    -0.0004079713,
                    -0.055416774,
                    -4.859278e-05,
                    -0.0007414092,
                    -0.018726401,
                    -0.014746713,
                    -0.45032328,
                    -0.001050857,
                    -0.00014671094,
                    -2.5744682e-06,
                    -0.009660222,
                    -0.0055268677,
                    -5.3477528e-05,
                    -0.0013895868,
                    -5.7652644e-05,
                    -3.529076e-06,
                    -6.9861335e-06,
                    0,
                    -0.002224072,
                    -0.006443696,
                    -0.01115051,
                    -0.2180879,
                    -0.011936901,
                    -0.032330636,
                    -3.2906587e-06,
                    -5.460492e-07,
                    -0.0118221175,
                    -0.00045644888,
                    -0.11704497,
                    -0.0010671472,
                    -0.0022406206,
                    -0.007827417,
                    -1.0056741,
                    -0.0025461116,
                    -0.0020703794,
                    -0.0030191394,
                    -0.002744943,
                    -0.114734314,
                    -0.8708816,
                    -0.004484476,
                    -0.00416283,
                    -0.0055555776,
                    -0.00041983582,
                    -6.2699432e-06,
                    -4.8233283e-05,
                    -0.00045883397,
                    -0.0017933979,
                    -0.00062373054,
                    -0.0006990019,
                    -0.014703342,
                    -0.0051849964,
                    -0.0010685805,
                    -0.0002940247,
                    -0.00080929237,
                    -0.00031358056,
                    -0.00978132,
                    -0.0057658576,
                    -0.0006425167,
                    -0.0003525167,
                    -3.3450466e-05,
                    -0.0034639228,
                    -0.0007734435,
                    -0.00026123386,
                    -0.00021145344,
                    -1.7834122e-05,
                    -3.678925e-05,
                    -2.7251614e-05,
                    -0.005487251,
                    -0.0014684964,
                    -0.0005937923,
                    -0.00078954885,
                    -0.025720041,
                    -0.009818876,
                    -0.00089663005,
                    -0.24778883,
                    -5.0778563e-06,
                    -0.0023419422,
                    -1.9143545e-05,
                    -1.5687427e-05,
                    -1.022884e-06,
                    -2.3360508e-06,
                    -0.00021491051,
                    -8.892534e-06,
                    -4.501652e-05,
                    -2.4543265e-06,
                    -9.425254e-05,
                    -0.0011036026,
                    -0.0008088165,
                    -0.0018667262,
                    -0.003963714,
                    -0.006867732,
                    -0.0020506077,
                    -1.4974988e-05,
                    -0.0022675034,
                    -0.00048906606,
                    -4.277735e-07,
                    -0.00020501523,
                    -0.0034333586,
                    -0.00011082348,
                    -2.3675353e-05,
                    -0.0036492387,
                    -0.002560872,
                    -0.0012575676,
                    -0.00034035373,
                    -0.0059974105,
                    -0.0042972094,
                    -4.2433903e-06,
                    -1.3823812e-06,
                    -0.0015437132,
                    -0.005594417,
                    -0.005660353,
                    -0.00036157944,
                    -0.0058172955,
                    -1.0084622e-05,
                    -2.0696069e-05,
                    -1.6207987e-06,
                    -2.8138238e-06,
                    -0.00013884035,
                    -9.532728e-05,
                    -0.00016900577,
                    -0.0016047846,
                    -0.0017428225,
                    -0.0022174406,
                    -0.00048525323,
                    -0.003919971,
                    -7.6964454e-05,
                    -0.013841827,
                    -0.015304462,
                    -0.00024358816,
                    -0.008187124,
                    -0.0008997314,
                    -0.010286807,
                    -2.1171965e-05,
                    -3.6074933e-05,
                    -0.0011800453,
                    -0.010061179,
                    -0.0017074768,
                    -0.002299704,
                    -0.0048124543,
                    -0.11825906,
                    -0.00026481107,
                    -0.008505133,
                    -0.00062074844
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.45596248
                    },
                    {
                        " !": -0.20597365
                    },
                    {
                        "step": -0.018219119
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012539848
                    },
                    {
                        "Wait": -0.00025527156
                    },
                    {
                        "()": -0.19275646
                    },
                    {
                        " ||": -0.12248955
                    },
                    {
                        " (": -0.15723257
                    },
                    {
                        "item": -0.032773115
                    },
                    {
                        " instance": -0.01867223
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.46855068
                    },
                    {
                        ")": -0.5658461
                    },
                    {
                        " item": -0.24047746
                    },
                    {
                        " instance": -0.012513796
                    },
                    {
                        "of": -1.8788729e-05
                    },
                    {
                        " Que": -0.20645544
                    },
                    {
                        "ue": -2.8206221e-05
                    },
                    {
                        ".": -0.0013905423
                    },
                    {
                        "Task": -0.0015246698
                    },
                    {
                        "))": -0.30920938
                    },
                    {
                        " {": -0.045486737
                    },
                    {
                        "\n": -0.06802625
                    },
                    {
                        "              ": -0.79990834
                    },
                    {
                        " Run": -1.8884451
                    },
                    {
                        " (": -0.7988115
                    },
                    {
                        "item": -0.73152554
                    },
                    {
                        ".": -0.008017491
                    },
                    {
                        "get": -0.07253192
                    },
                    {
                        "Parameters": -0.833066
                    },
                    {
                        "()": -0.008462092
                    },
                    {
                        " !=": -0.3908029
                    },
                    {
                        " null": -0.004591534
                    },
                    {
                        " ||": -0.48019516
                    },
                    {
                        " step": -0.039142918
                    },
                    {
                        ".": -0.000115950395
                    },
                    {
                        "get": -0.0003016569
                    },
                    {
                        "Parameters": -0.0010559285
                    },
                    {
                        "().": -0.000502546
                    },
                    {
                        "is": -0.0041096206
                    },
                    {
                        "Empty": -1.8310955e-05
                    },
                    {
                        "())": -0.09056131
                    },
                    {
                        " {": -0.0026597755
                    },
                    {
                        "\n": -0.01645981
                    },
                    {
                        "                  ": -0.1392307
                    },
                    {
                        " if": -1.461656
                    },
                    {
                        " item": -0.34935066
                    },
                    {
                        "Enc": -0.038817678
                    },
                    {
                        "oded": -0.00060870085
                    },
                    {
                        " =": -0.01553817
                    },
                    {
                        " Model": -0.025676928
                    },
                    {
                        "Hyper": -1.1278585e-05
                    },
                    {
                        "link": -1.855031e-05
                    },
                    {
                        "Note": -1.5805701e-05
                    },
                    {
                        ".": -8.6025255e-05
                    },
                    {
                        "en": -3.0947078e-05
                    },
                    {
                        "code": -2.2159093e-06
                    },
                    {
                        "To": -8.2807564e-05
                    },
                    {
                        "(": -0.001468258
                    },
                    {
                        "item": -0.002341224
                    },
                    {
                        ");": -0.0019861637
                    },
                    {
                        "\n": -0.005737384
                    },
                    {
                        "                  ": -0.005416351
                    },
                    {
                        " listener": -0.037387017
                    },
                    {
                        ".": -0.0003287257
                    },
                    {
                        "get": -0.0003042804
                    },
                    {
                        "Log": -2.0966954e-06
                    },
                    {
                        "ger": -5.460492e-07
                    },
                    {
                        "().": -0.00017699462
                    },
                    {
                        "println": -0.0014344739
                    },
                    {
                        "(\"": -0.015981419
                    },
                    {
                        "S": -0.016855747
                    },
                    {
                        "ched": -0.00011320953
                    },
                    {
                        "uling": -0.0005893778
                    },
                    {
                        " item": -0.084066845
                    },
                    {
                        ":": -0.009437869
                    },
                    {
                        " \"": -0.005886962
                    },
                    {
                        " +": -0.00076974515
                    },
                    {
                        "item": -0.4825072
                    },
                    {
                        "Enc": -0.00088183413
                    },
                    {
                        "oded": -4.277735e-07
                    },
                    {
                        ");": -0.07674795
                    },
                    {
                        "\n": -0.010335345
                    },
                    {
                        "                  ": -0.32061353
                    },
                    {
                        " node": -0.49639952
                    },
                    {
                        ".": -0.001032957
                    },
                    {
                        "add": -0.00023834205
                    },
                    {
                        "Action": -1.7953334e-05
                    },
                    {
                        "(": -0.00046157953
                    },
                    {
                        "new": -0.01026615
                    },
                    {
                        " Label": -0.0017121305
                    },
                    {
                        "Action": -0.000106295425
                    },
                    {
                        "(": -0.010253564
                    },
                    {
                        "Mess": -0.021758508
                    },
                    {
                        "ages": -8.0580685e-06
                    },
                    {
                        ".": -0.0019936298
                    },
                    {
                        "Build": -0.0036795083
                    },
                    {
                        "Trigger": -0.0008103671
                    },
                    {
                        "Step": -0.0024248126
                    },
                    {
                        "Exec": -0.003680106
                    },
                    {
                        "ution": -4.477904e-05
                    },
                    {
                        "_": -0.0001599459
                    },
                    {
                        "building": -0.004548062
                    },
                    {
                        "_(": -0.0059378096
                    },
                    {
                        "item": -0.052046165
                    },
                    {
                        ".": -0.07045483
                    },
                    {
                        "get": -0.00016817037
                    },
                    {
                        "Full": -0.0190103
                    },
                    {
                        "Display": -0.08091214
                    },
                    {
                        "Name": -2.6060465e-05
                    },
                    {
                        "()": -0.00077642646
                    },
                    {
                        "))": -0.0005629566
                    },
                    {
                        ");": -0.00046432132
                    },
                    {
                        "\n": -0.017344626
                    },
                    {
                        "                  ": -0.11795836
                    },
                    {
                        " List": -0.200068
                    },
                    {
                        "<": -0.0010435778
                    },
                    {
                        "Action": -0.0030369577
                    },
                    {
                        ">": -2.1051823e-05
                    },
                    {
                        " actions": -0.009768617
                    },
                    {
                        " =": -0.0051578535
                    },
                    {
                        " new": -0.003698773
                    },
                    {
                        " Array": -0.0007741596
                    },
                    {
                        "List": -2.3675353e-05
                    },
                    {
                        "<": -0.003068224
                    },
                    {
                        ">": -0.074460365
                    },
                    {
                        "();": -0.00020513259
                    },
                    {
                        "\n": -0.0062489253
                    },
                    {
                        "                  ": -0.0053305384
                    },
                    {
                        " if": -0.039049823
                    },
                    {
                        " (": -0.012349759
                    },
                    {
                        "step": -0.004950875
                    },
                    {
                        ".": -3.9292627e-05
                    },
                    {
                        "get": -0.0010706062
                    },
                    {
                        "Wait": -0.00053492666
                    },
                    {
                        "())": -0.005567746
                    },
                    {
                        " {": -0.00020978546
                    },
                    {
                        "\n": -0.0024478144
                    },
                    {
                        "                      ": -0.0045377645
                    },
                    {
                        " Step": -0.06110029
                    },
                    {
                        "Context": -0.0001589913
                    },
                    {
                        " context": -0.0020859668
                    },
                    {
                        " =": -0.0010990717
                    },
                    {
                        " get": -0.0019383293
                    },
                    {
                        "Context": -5.061746e-05
                    },
                    {
                        "();": -0.0002423942
                    },
                    {
                        "\n": -0.0015612049
                    },
                    {
                        "                      ": -0.00428422
                    },
                    {
                        " boolean": -0.05593975
                    },
                    {
                        " is": -0.018378956
                    },
                    {
                        "Prop": -0.0015495638
                    },
                    {
                        "agate": -0.003076774
                    },
                    {
                        " =": -0.010577655
                    },
                    {
                        " ": -0.26325646
                    },
                    {
                        " step": -0.0008654275
                    },
                    {
                        ".": -3.5120327e-05
                    },
                    {
                        "is": -0.00036754078
                    },
                    {
                        "Prop": -4.811501e-05
                    },
                    {
                        "agate": -2.4866502e-05
                    },
                    {
                        "();": -0.0011311135
                    },
                    {
                        "\n": -0.00743702
                    },
                    {
                        "                      ": -0.0024827695
                    },
                    {
                        " actions": -0.016512953
                    },
                    {
                        ".": -5.0856816e-05
                    },
                    {
                        "add": -1.7595703e-05
                    },
                    {
                        "(": -0.00022182555
                    },
                    {
                        "new": -0.008867682
                    },
                    {
                        " Build": -0.0012483763
                    },
                    {
                        "Trigger": -0.00024811528
                    },
                    {
                        "Action": -0.000246207
                    },
                    {
                        "(": -0.0014622909
                    },
                    {
                        "context": -0.0086563295
                    },
                    {
                        ",": -0.00673391
                    },
                    {
                        " is": -0.442094
                    },
                    {
                        "Prop": -4.477904e-05
                    },
                    {
                        "agate": -5.07376e-05
                    },
                    {
                        " ));": -0.29087996
                    },
                    {
                        "\n": -0.0034894617
                    },
                    {
                        "                      ": -0.008004094
                    },
                    {
                        " LOG": -0.0061694584
                    },
                    {
                        "GER": -1.4974988e-05
                    },
                    {
                        ".": -5.1810483e-05
                    },
                    {
                        "log": -0.0022681004
                    },
                    {
                        "(": -3.7266083e-05
                    },
                    {
                        "Level": -0.00038698118
                    },
                    {
                        ".": -6.6294406e-06
                    },
                    {
                        "FIN": -0.008351493
                    },
                    {
                        "ER": -2.8138238e-06
                    },
                    {
                        ",": -0.0018527535
                    },
                    {
                        " \"": -0.001154684
                    },
                    {
                        "sc": -0.005078654
                    },
                    {
                        "hed": -5.460492e-07
                    },
                    {
                        "uling": -6.13453e-05
                    },
                    {
                        " a": -0.0012066026
                    },
                    {
                        " build": -0.000331888
                    },
                    {
                        " of": -0.0005088669
                    },
                    {
                        " {": -0.0012274274
                    },
                    {
                        "0": -0.00024287197
                    },
                    {
                        "}": -7.517727e-05
                    },
                    {
                        " from": -0.0008477705
                    },
                    {
                        " {": -0.00018533925
                    },
                    {
                        "1": -8.9960085e-05
                    },
                    {
                        "}": -0.00034488458
                    },
                    {
                        "\",": -0.0008168091
                    },
                    {
                        " new": -0.004427716
                    },
                    {
                        " Object": -0.00043235742
                    },
                    {
                        "[]": -0.00012679932
                    },
                    {
                        "{": -0.027518889
                    },
                    {
                        "item": -0.012795693
                    },
                    {
                        ",": -0.0063706893
                    },
                    {
                        " context": -0.009479567
                    },
                    {
                        "});": -0.0009970966
                    },
                    {
                        "\n": -0.0031656858
                    },
                    {
                        "                  ": -0.004015122
                    },
                    {
                        " }": -6.3134365e-05
                    },
                    {
                        "\n": -0.0108306315
                    },
                    {
                        "                  ": -0.0051561752
                    },
                    {
                        " Cause": -0.02521379
                    },
                    {
                        ".": -0.012505648
                    },
                    {
                        "Up": -0.0002860377
                    },
                    {
                        "stream": -9.130952e-06
                    },
                    {
                        "Cause": -7.11223e-05
                    },
                    {
                        " cause": -0.0013299019
                    },
                    {
                        " =": -0.0018334041
                    },
                    {
                        " new": -0.00083351333
                    },
                    {
                        " Cause": -0.00022003835
                    },
                    {
                        ".": -3.1185496e-05
                    },
                    {
                        "Up": -1.6999666e-05
                    },
                    {
                        "stream": -2.0218295e-05
                    },
                    {
                        "Cause": -1.5448071e-05
                    },
                    {
                        "(": -0.0013202928
                    },
                    {
                        "inv": -0.003036479
                    },
                    {
                        "oking": -6.3900848e-06
                    },
                    {
                        "Run": -5.4075444e-05
                    },
                    {
                        ");": -0.0005363581
                    },
                    {
                        "\n": -0.001167275
                    },
                    {
                        "                  ": -0.00128478
                    },
                    {
                        " Cause": -0.025443712
                    },
                    {
                        "Action": -5.3597672e-05
                    },
                    {
                        " cause": -0.0033143444
                    },
                    {
                        "Action": -0.00013383264
                    },
                    {
                        " =": -0.00057309505
                    },
                    {
                        " new": -0.0014911215
                    },
                    {
                        " Cause": -7.24364e-05
                    },
                    {
                        "Action": -9.490449e-06
                    },
                    {
                        "(": -0.00015589187
                    },
                    {
                        "cause": -0.00076425495
                    },
                    {
                        ");": -0.0002925942
                    },
                    {
                        "\n": -0.0016545171
                    },
                    {
                        "                  ": -0.0013567003
                    },
                    {
                        " actions": -0.0067997393
                    },
                    {
                        ".": -0.00017675622
                    },
                    {
                        "add": -2.0815281e-05
                    },
                    {
                        "(": -0.0004079713
                    },
                    {
                        "cause": -0.055416774
                    },
                    {
                        "Action": -4.859278e-05
                    },
                    {
                        ");": -0.0007414092
                    },
                    {
                        "\n": -0.018726401
                    },
                    {
                        "                  ": -0.014746713
                    },
                    {
                        " Integer": -0.45032328
                    },
                    {
                        " quiet": -0.001050857
                    },
                    {
                        "Per": -0.00014671094
                    },
                    {
                        "iod": -2.5744682e-06
                    },
                    {
                        " =": -0.009660222
                    },
                    {
                        " step": -0.0055268677
                    },
                    {
                        ".": -5.3477528e-05
                    },
                    {
                        "get": -0.0013895868
                    },
                    {
                        "Qu": -5.7652644e-05
                    },
                    {
                        "iet": -3.529076e-06
                    },
                    {
                        "Per": -6.9861335e-06
                    },
                    {
                        "iod": 0
                    },
                    {
                        "();": -0.002224072
                    },
                    {
                        "\n": -0.006443696
                    },
                    {
                        "                  ": -0.01115051
                    },
                    {
                        " if": -0.2180879
                    },
                    {
                        " (": -0.011936901
                    },
                    {
                        "quiet": -0.032330636
                    },
                    {
                        "Per": -3.2906587e-06
                    },
                    {
                        "iod": -5.460492e-07
                    },
                    {
                        " ==": -0.0118221175
                    },
                    {
                        " null": -0.00045644888
                    },
                    {
                        ")": -0.11704497
                    },
                    {
                        " {": -0.0010671472
                    },
                    {
                        "\n": -0.0022406206
                    },
                    {
                        "                      ": -0.007827417
                    },
                    {
                        " try": -1.0056741
                    },
                    {
                        " {": -0.0025461116
                    },
                    {
                        "\n": -0.0020703794
                    },
                    {
                        "                ": -0.0030191394
                    },
                    {
                        "          ": -0.002744943
                    },
                    {
                        " Class": -0.114734314
                    },
                    {
                        " item": -0.8708816
                    },
                    {
                        "Class": -0.004484476
                    },
                    {
                        " =": -0.00416283
                    },
                    {
                        " item": -0.0055555776
                    },
                    {
                        ".": -0.00041983582
                    },
                    {
                        "get": -6.2699432e-06
                    },
                    {
                        "Class": -4.8233283e-05
                    },
                    {
                        "();": -0.00045883397
                    },
                    {
                        "\n": -0.0017933979
                    },
                    {
                        "                ": -0.00062373054
                    },
                    {
                        "          ": -0.0006990019
                    },
                    {
                        " Method": -0.014703342
                    },
                    {
                        " get": -0.0051849964
                    },
                    {
                        "Qu": -0.0010685805
                    },
                    {
                        "iet": -0.0002940247
                    },
                    {
                        "Per": -0.00080929237
                    },
                    {
                        "iod": -0.00031358056
                    },
                    {
                        " =": -0.00978132
                    },
                    {
                        " item": -0.0057658576
                    },
                    {
                        "Class": -0.0006425167
                    },
                    {
                        ".": -0.0003525167
                    },
                    {
                        "get": -3.3450466e-05
                    },
                    {
                        "Method": -0.0034639228
                    },
                    {
                        "(\"": -0.0007734435
                    },
                    {
                        "get": -0.00026123386
                    },
                    {
                        "Qu": -0.00021145344
                    },
                    {
                        "iet": -1.7834122e-05
                    },
                    {
                        "Per": -3.678925e-05
                    },
                    {
                        "iod": -2.7251614e-05
                    },
                    {
                        "\");": -0.005487251
                    },
                    {
                        "\n": -0.0014684964
                    },
                    {
                        "                ": -0.0005937923
                    },
                    {
                        "          ": -0.00078954885
                    },
                    {
                        " Class": -0.025720041
                    },
                    {
                        " return": -0.009818876
                    },
                    {
                        "Type": -0.00089663005
                    },
                    {
                        " ": -0.24778883
                    },
                    {
                        " =": -5.0778563e-06
                    },
                    {
                        " get": -0.0023419422
                    },
                    {
                        "Qu": -1.9143545e-05
                    },
                    {
                        "iet": -1.5687427e-05
                    },
                    {
                        "Per": -1.022884e-06
                    },
                    {
                        "iod": -2.3360508e-06
                    },
                    {
                        ".": -0.00021491051
                    },
                    {
                        "get": -8.892534e-06
                    },
                    {
                        "Return": -4.501652e-05
                    },
                    {
                        "Type": -2.4543265e-06
                    },
                    {
                        "();": -9.425254e-05
                    },
                    {
                        "\n": -0.0011036026
                    },
                    {
                        "                ": -0.0008088165
                    },
                    {
                        "          ": -0.0018667262
                    },
                    {
                        " if": -0.003963714
                    },
                    {
                        " (": -0.006867732
                    },
                    {
                        "return": -0.0020506077
                    },
                    {
                        "Type": -1.4974988e-05
                    },
                    {
                        ".": -0.0022675034
                    },
                    {
                        "equ": -0.00048906606
                    },
                    {
                        "als": -4.277735e-07
                    },
                    {
                        "(": -0.00020501523
                    },
                    {
                        "int": -0.0034333586
                    },
                    {
                        ".": -0.00011082348
                    },
                    {
                        "class": -2.3675353e-05
                    },
                    {
                        "))": -0.0036492387
                    },
                    {
                        " {": -0.002560872
                    },
                    {
                        "\n": -0.0012575676
                    },
                    {
                        "                ": -0.00034035373
                    },
                    {
                        "              ": -0.0059974105
                    },
                    {
                        " quiet": -0.0042972094
                    },
                    {
                        "Per": -4.2433903e-06
                    },
                    {
                        "iod": -1.3823812e-06
                    },
                    {
                        " =": -0.0015437132
                    },
                    {
                        " (": -0.005594417
                    },
                    {
                        "Integer": -0.005660353
                    },
                    {
                        ")": -0.00036157944
                    },
                    {
                        " get": -0.0058172955
                    },
                    {
                        "Qu": -1.0084622e-05
                    },
                    {
                        "iet": -2.0696069e-05
                    },
                    {
                        "Per": -1.6207987e-06
                    },
                    {
                        "iod": -2.8138238e-06
                    },
                    {
                        ".": -0.00013884035
                    },
                    {
                        "invoke": -9.532728e-05
                    },
                    {
                        "(": -0.00016900577
                    },
                    {
                        "item": -0.0016047846
                    },
                    {
                        ");": -0.0017428225
                    },
                    {
                        "\n": -0.0022174406
                    },
                    {
                        "                ": -0.00048525323
                    },
                    {
                        "          ": -0.003919971
                    },
                    {
                        " }": -7.6964454e-05
                    },
                    {
                        "\n": -0.013841827
                    },
                    {
                        "                      ": -0.015304462
                    },
                    {
                        " }": -0.00024358816
                    },
                    {
                        " catch": -0.008187124
                    },
                    {
                        " (": -0.0008997314
                    },
                    {
                        "No": -0.010286807
                    },
                    {
                        "Such": -2.1171965e-05
                    },
                    {
                        "Method": -3.6074933e-05
                    },
                    {
                        "Exception": -0.0011800453
                    },
                    {
                        " e": -0.010061179
                    },
                    {
                        ")": -0.0017074768
                    },
                    {
                        " {": -0.002299704
                    },
                    {
                        "\n": -0.0048124543
                    },
                    {
                        "                      ": -0.11825906
                    },
                    {
                        " }": -0.00026481107
                    },
                    {
                        " catch": -0.008505133
                    },
                    {
                        " (": -0.00062074844
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6540,
                    6545,
                    6554,
                    6556,
                    6560,
                    6562,
                    6563,
                    6567,
                    6569,
                    6571,
                    6572,
                    6586,
                    6589,
                    6591,
                    6595,
                    6596,
                    6599,
                    6609,
                    6611,
                    6614,
                    6619,
                    6622,
                    6627,
                    6628,
                    6631,
                    6641,
                    6644,
                    6646,
                    6651,
                    6654,
                    6656,
                    6657,
                    6675,
                    6682,
                    6687,
                    6690,
                    6694,
                    6696,
                    6702,
                    6707,
                    6711,
                    6715,
                    6716,
                    6718,
                    6722,
                    6724,
                    6725,
                    6729,
                    6731,
                    6732,
                    6750,
                    6759,
                    6760,
                    6763,
                    6766,
                    6769,
                    6772,
                    6779,
                    6781,
                    6782,
                    6786,
                    6791,
                    6796,
                    6797,
                    6799,
                    6801,
                    6806,
                    6809,
                    6813,
                    6815,
                    6816,
                    6834,
                    6839,
                    6840,
                    6843,
                    6849,
                    6850,
                    6853,
                    6859,
                    6865,
                    6866,
                    6870,
                    6874,
                    6875,
                    6880,
                    6887,
                    6891,
                    6895,
                    6900,
                    6901,
                    6909,
                    6911,
                    6915,
                    6916,
                    6919,
                    6923,
                    6930,
                    6934,
                    6936,
                    6938,
                    6940,
                    6941,
                    6959,
                    6964,
                    6965,
                    6971,
                    6972,
                    6980,
                    6982,
                    6986,
                    6992,
                    6996,
                    6997,
                    6998,
                    7001,
                    7002,
                    7020,
                    7023,
                    7025,
                    7029,
                    7030,
                    7033,
                    7037,
                    7040,
                    7042,
                    7043,
                    7065,
                    7070,
                    7077,
                    7085,
                    7087,
                    7091,
                    7098,
                    7101,
                    7102,
                    7124,
                    7132,
                    7135,
                    7139,
                    7144,
                    7146,
                    7147,
                    7152,
                    7153,
                    7155,
                    7159,
                    7164,
                    7167,
                    7168,
                    7190,
                    7198,
                    7199,
                    7202,
                    7203,
                    7206,
                    7212,
                    7219,
                    7225,
                    7226,
                    7233,
                    7234,
                    7236,
                    7240,
                    7245,
                    7249,
                    7250,
                    7272,
                    7276,
                    7279,
                    7280,
                    7283,
                    7284,
                    7289,
                    7290,
                    7293,
                    7295,
                    7296,
                    7298,
                    7300,
                    7303,
                    7308,
                    7310,
                    7316,
                    7319,
                    7321,
                    7322,
                    7323,
                    7328,
                    7330,
                    7331,
                    7332,
                    7334,
                    7338,
                    7345,
                    7347,
                    7348,
                    7352,
                    7353,
                    7361,
                    7364,
                    7365,
                    7383,
                    7385,
                    7386,
                    7404,
                    7410,
                    7411,
                    7413,
                    7419,
                    7424,
                    7430,
                    7432,
                    7436,
                    7442,
                    7443,
                    7445,
                    7451,
                    7456,
                    7457,
                    7460,
                    7465,
                    7468,
                    7470,
                    7471,
                    7489,
                    7495,
                    7501,
                    7507,
                    7513,
                    7515,
                    7519,
                    7525,
                    7531,
                    7532,
                    7537,
                    7539,
                    7540,
                    7558,
                    7566,
                    7567,
                    7570,
                    7571,
                    7576,
                    7582,
                    7584,
                    7585,
                    7603,
                    7611,
                    7617,
                    7620,
                    7623,
                    7625,
                    7630,
                    7631,
                    7634,
                    7636,
                    7639,
                    7642,
                    7645,
                    7648,
                    7649,
                    7667,
                    7670,
                    7672,
                    7677,
                    7680,
                    7683,
                    7686,
                    7691,
                    7692,
                    7694,
                    7695,
                    7717,
                    7721,
                    7723,
                    7724,
                    7740,
                    7750,
                    7756,
                    7761,
                    7766,
                    7768,
                    7773,
                    7774,
                    7777,
                    7782,
                    7785,
                    7786,
                    7802,
                    7812,
                    7819,
                    7823,
                    7825,
                    7828,
                    7831,
                    7834,
                    7836,
                    7841,
                    7846,
                    7847,
                    7850,
                    7856,
                    7858,
                    7861,
                    7863,
                    7866,
                    7869,
                    7872,
                    7875,
                    7876,
                    7892,
                    7902,
                    7908,
                    7915,
                    7919,
                    7920,
                    7922,
                    7926,
                    7928,
                    7931,
                    7934,
                    7937,
                    7938,
                    7941,
                    7947,
                    7951,
                    7954,
                    7955,
                    7971,
                    7981,
                    7984,
                    7986,
                    7992,
                    7996,
                    7997,
                    8000,
                    8003,
                    8004,
                    8007,
                    8008,
                    8013,
                    8015,
                    8017,
                    8018,
                    8034,
                    8048,
                    8054,
                    8057,
                    8060,
                    8062,
                    8064,
                    8071,
                    8072,
                    8076,
                    8078,
                    8081,
                    8084,
                    8087,
                    8088,
                    8094,
                    8095,
                    8099,
                    8101,
                    8102,
                    8118,
                    8128,
                    8130,
                    8131,
                    8153,
                    8155,
                    8161,
                    8163,
                    8165,
                    8169,
                    8175,
                    8184,
                    8186,
                    8187,
                    8189,
                    8190,
                    8212,
                    8214,
                    8220
                ]
            },
            "finish_reason": "length"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               listener.getLogger().println(\"Scheduling build of \" + job);\n               FlowNode node = getContext().get(FlowNode.class);\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " build",
                    " of",
                    " \"",
                    " +",
                    " job",
                    ");",
                    "\n",
                    "              ",
                    " Flow",
                    "Node",
                    " node",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Flow",
                    "Node",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example"
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -0.45596248,
                    -0.20597365,
                    -0.018219119,
                    -9.055464e-07,
                    -0.0012539848,
                    -0.00025527156,
                    -0.19275646,
                    -0.12248955,
                    -0.15723257,
                    -0.032773115,
                    -0.01867223,
                    -2.0696069e-05,
                    -0.46855068,
                    -0.5658461,
                    -0.08890405,
                    -0.23893519,
                    -0.041518163,
                    -0.0062726196,
                    -8.653179e-06,
                    -0.19241312,
                    -2.9041616e-05,
                    -0.0014947035,
                    -0.0012891982,
                    -0.30788884,
                    -0.09529706,
                    -0.071891576,
                    -0.75168943,
                    -3.144331,
                    -0.07078566,
                    -0.0044056834,
                    -1.9621319e-05,
                    -1.2468796e-05,
                    -0.0005120865,
                    -0.085391805,
                    -0.0928715,
                    -1.1229212,
                    -0.001632488,
                    -0.030448131,
                    -0.79973173,
                    -0.13391338,
                    -0.059401013,
                    -0.0068979207,
                    -1.311011,
                    -0.0969919,
                    -0.021137305,
                    -0.5920743,
                    -2.7528377,
                    -0.0205441,
                    -0.0119362995,
                    -0.015959797,
                    -0.09261279,
                    -0.011683587,
                    -0.0015408484,
                    -0.0041251825,
                    -0.0010722788,
                    -0.014181655,
                    -0.00016650239,
                    -2.9636725e-05,
                    -2.033751e-05,
                    -0.0021506574,
                    -0.01958843,
                    -0.59624493,
                    -1.4757779,
                    -0.7177604,
                    -0.0013686371,
                    -2.1282954
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.45596248
                    },
                    {
                        " !": -0.20597365
                    },
                    {
                        "step": -0.018219119
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012539848
                    },
                    {
                        "Wait": -0.00025527156
                    },
                    {
                        "()": -0.19275646
                    },
                    {
                        " ||": -0.12248955
                    },
                    {
                        " (": -0.15723257
                    },
                    {
                        "item": -0.032773115
                    },
                    {
                        " instance": -0.01867223
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.46855068
                    },
                    {
                        ")": -0.5658461
                    },
                    {
                        " ||": -0.08890405
                    },
                    {
                        " (": -0.23893519
                    },
                    {
                        "item": -0.041518163
                    },
                    {
                        " instance": -0.0062726196
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19241312
                    },
                    {
                        "ue": -2.9041616e-05
                    },
                    {
                        ".": -0.0014947035
                    },
                    {
                        "Task": -0.0012891982
                    },
                    {
                        "))": -0.30788884
                    },
                    {
                        " {": -0.09529706
                    },
                    {
                        "\n": -0.071891576
                    },
                    {
                        "              ": -0.75168943
                    },
                    {
                        " Run": -1.8993492
                    },
                    {
                        ".": -0.07078566
                    },
                    {
                        "get": -0.0044056834
                    },
                    {
                        "Log": -1.9621319e-05
                    },
                    {
                        "ger": -1.2468796e-05
                    },
                    {
                        "().": -0.0005120865
                    },
                    {
                        "println": -0.085391805
                    },
                    {
                        "(\"": -0.0928715
                    },
                    {
                        "S": -1.1229212
                    },
                    {
                        "ched": -0.001632488
                    },
                    {
                        "uling": -0.030448131
                    },
                    {
                        " build": -0.79973173
                    },
                    {
                        " of": -0.13391338
                    },
                    {
                        " \"": -0.059401013
                    },
                    {
                        " +": -0.0068979207
                    },
                    {
                        " Model": -0.77938336
                    },
                    {
                        ");": -0.0969919
                    },
                    {
                        "\n": -0.021137305
                    },
                    {
                        "              ": -0.5920743
                    },
                    {
                        " Node": -1.3224281
                    },
                    {
                        "Node": -0.0205441
                    },
                    {
                        " node": -0.0119362995
                    },
                    {
                        " =": -0.015959797
                    },
                    {
                        " get": -0.09261279
                    },
                    {
                        "Context": -0.011683587
                    },
                    {
                        "().": -0.0015408484
                    },
                    {
                        "get": -0.0041251825
                    },
                    {
                        "(": -0.0010722788
                    },
                    {
                        "Flow": -0.014181655
                    },
                    {
                        "Node": -0.00016650239
                    },
                    {
                        ".": -2.9636725e-05
                    },
                    {
                        "class": -2.033751e-05
                    },
                    {
                        ");": -0.0021506574
                    },
                    {
                        "\n": -0.01958843
                    },
                    {
                        "<|endoftext|>": -0.59624493
                    },
                    {
                        "package": -1.4757779
                    },
                    {
                        " com": -0.7177604
                    },
                    {
                        ".": -0.0013686371
                    },
                    {
                        "example": -2.1282954
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6597,
                    6598,
                    6601,
                    6604,
                    6607,
                    6610,
                    6617,
                    6619,
                    6620,
                    6624,
                    6629,
                    6635,
                    6638,
                    6640,
                    6642,
                    6646,
                    6648,
                    6649,
                    6663,
                    6668,
                    6672,
                    6677,
                    6679,
                    6683,
                    6690,
                    6693,
                    6696,
                    6697,
                    6701,
                    6705,
                    6706,
                    6711,
                    6713,
                    6714,
                    6714,
                    6714,
                    6714,
                    6714
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    "!/",
                    "usr",
                    "/",
                    "bin",
                    "/",
                    "env"
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -0.458817,
                    -0.20475924,
                    -0.018362502,
                    -9.055464e-07,
                    -0.001256015,
                    -0.0002556273,
                    -0.19120508,
                    -0.1218269,
                    -0.15721422,
                    -0.03282769,
                    -0.017457316,
                    -2.0575926e-05,
                    -0.46781152,
                    -0.5658723,
                    -0.088844836,
                    -0.23902157,
                    -0.041491695,
                    -0.0062462264,
                    -8.653179e-06,
                    -0.19264753,
                    -2.880226e-05,
                    -0.0014915994,
                    -0.0012918236,
                    -0.30783662,
                    -0.09520068,
                    -0.07187147,
                    -0.85363513,
                    -2.269286,
                    -1.6517806,
                    -0.53186566,
                    -2.9636725e-05,
                    -0.017152151,
                    -0.00077380013,
                    -0.3370995
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.458817
                    },
                    {
                        " !": -0.20475924
                    },
                    {
                        "step": -0.018362502
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.001256015
                    },
                    {
                        "Wait": -0.0002556273
                    },
                    {
                        "()": -0.19120508
                    },
                    {
                        " ||": -0.1218269
                    },
                    {
                        " (": -0.15721422
                    },
                    {
                        "item": -0.03282769
                    },
                    {
                        " instance": -0.017457316
                    },
                    {
                        "of": -2.0575926e-05
                    },
                    {
                        " Job": -0.46781152
                    },
                    {
                        ")": -0.5658723
                    },
                    {
                        " ||": -0.088844836
                    },
                    {
                        " (": -0.23902157
                    },
                    {
                        "item": -0.041491695
                    },
                    {
                        " instance": -0.0062462264
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19264753
                    },
                    {
                        "ue": -2.880226e-05
                    },
                    {
                        ".": -0.0014915994
                    },
                    {
                        "Task": -0.0012918236
                    },
                    {
                        "))": -0.30783662
                    },
                    {
                        " {": -0.09520068
                    },
                    {
                        "\n": -0.07187147
                    },
                    {
                        "              ": -0.7512134
                    },
                    {
                        "package": -1.4719044
                    },
                    {
                        "include": -1.0924038
                    },
                    {
                        "usr": -0.53186566
                    },
                    {
                        "/": -2.9636725e-05
                    },
                    {
                        "bin": -0.017152151
                    },
                    {
                        "/": -0.00077380013
                    },
                    {
                        "env": -0.3370995
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait()) {\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -0.45596248,
                    -0.20597365,
                    -0.018219119,
                    -9.055464e-07,
                    -0.0012539848,
                    -0.00025527156,
                    -1.7426832,
                    -0.002989786,
                    -0.053551923,
                    -0.56072235
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.45596248
                    },
                    {
                        " !": -0.20597365
                    },
                    {
                        "step": -0.018219119
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012539848
                    },
                    {
                        "Wait": -0.00025527156
                    },
                    {
                        "()": -0.19275646
                    },
                    {
                        " {": -0.002989786
                    },
                    {
                        "\n": -0.053551923
                    },
                    {
                        "<|endoftext|>": -0.56072235
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6514,
                    6516,
                    6517
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if (!step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               Run lastBuild = null;\n               if (step.getLastBuild()) {\n                   lastBuild = ((Job) item).getLastBuild();\n               }\n               if (lastBuild == null) {\n                   lastBuild = ((Job) item).getLastSuccessfulBuild();\n               }\n               if (lastBuild != null) {\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(lastBuild));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(lastBuild.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<Action>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context, isPropagate));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{lastBuild, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = Jenkins.getActiveInstance().getQuietPeriod();\n                   }\n                   boolean b = lastBuild.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (!b) {\n                       throw new AbortException(\"",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (!",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    " ||",
                    " item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    " last",
                    "Build",
                    " =",
                    " null",
                    ";",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Last",
                    "Build",
                    "())",
                    " {",
                    "\n",
                    "                  ",
                    " last",
                    "Build",
                    " =",
                    " ((",
                    "Job",
                    ")",
                    " item",
                    ").",
                    "get",
                    "Last",
                    "Build",
                    "();",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "last",
                    "Build",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " last",
                    "Build",
                    " =",
                    " ((",
                    "Job",
                    ")",
                    " item",
                    ").",
                    "get",
                    "Last",
                    "Success",
                    "ful",
                    "Build",
                    "();",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "last",
                    "Build",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " project",
                    ":",
                    " \"",
                    " +",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "last",
                    "Build",
                    "));",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Label",
                    "Action",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "last",
                    "Build",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "()",
                    "))",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Action",
                    ">",
                    " actions",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    "Action",
                    ">",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "                      ",
                    " Step",
                    "Context",
                    " context",
                    " =",
                    " get",
                    "Context",
                    "();",
                    "\n",
                    "                      ",
                    " boolean",
                    " is",
                    "Prop",
                    "agate",
                    " =",
                    " ",
                    " step",
                    ".",
                    "is",
                    "Prop",
                    "agate",
                    "();",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Build",
                    "Trigger",
                    "Action",
                    "(",
                    "context",
                    ",",
                    " is",
                    "Prop",
                    "agate",
                    "));",
                    "\n",
                    "                      ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "sc",
                    "hed",
                    "uling",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "last",
                    "Build",
                    ",",
                    " context",
                    "});",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ");",
                    "\n",
                    "                  ",
                    " Cause",
                    "Action",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Cause",
                    "Action",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                  ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "cause",
                    "Action",
                    ");",
                    "\n",
                    "                  ",
                    " Integer",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "quiet",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " Jenkins",
                    ".",
                    "get",
                    "Active",
                    "Instance",
                    "().",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " boolean",
                    " b",
                    " =",
                    " last",
                    "Build",
                    ".",
                    "sche",
                    "dule",
                    "Build",
                    "2",
                    "(",
                    "quiet",
                    "Per",
                    "iod",
                    ",",
                    " actions",
                    ".",
                    "to",
                    "Array",
                    "(",
                    "new",
                    " Action",
                    "[",
                    "actions",
                    ".",
                    "size",
                    "()",
                    "])",
                    ");",
                    "\n",
                    "                  ",
                    " if",
                    " (!",
                    "b",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\""
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -1.7108204,
                    -0.11296678,
                    -3.529076e-06,
                    -0.001949976,
                    -0.00032085512,
                    -0.48248017,
                    -0.15443897,
                    -0.2165285,
                    -0.026887912,
                    -0.016826285,
                    -1.6165199e-05,
                    -0.4265442,
                    -2.2259634,
                    -0.23461223,
                    -0.015072804,
                    -1.8788729e-05,
                    -0.22386739,
                    -3.201996e-05,
                    -0.0015240738,
                    -0.0018774164,
                    -0.26213473,
                    -0.07543685,
                    -0.0626551,
                    -0.7019379,
                    -1.7581679,
                    -2.6464546,
                    -0.28675923,
                    -0.08565424,
                    -1.8438824,
                    -0.005989135,
                    -0.020373942,
                    -0.026100572,
                    -0.29518056,
                    -0.25141013,
                    -1.1849352,
                    -0.0060873595,
                    -0.118611805,
                    -0.7510506,
                    -0.5045758,
                    -0.28392705,
                    -0.004222864,
                    -0.0053349137,
                    -0.017431477,
                    -0.29433638,
                    -3.6074933e-05,
                    -0.0063043507,
                    -0.69099003,
                    -0.034934927,
                    -0.16461325,
                    -0.11202443,
                    -0.0011769431,
                    -0.00019189759,
                    -0.023365464,
                    -0.041402295,
                    -0.0010328386,
                    -0.008758783,
                    -0.58135027,
                    -0.0004351002,
                    -0.39013255,
                    -0.35703862,
                    -0.36291465,
                    -0.12266937,
                    -0.25812545,
                    -6.5092986e-06,
                    -1.3516047,
                    -0.003975682,
                    -0.21569635,
                    -0.0045560277,
                    -0.017804256,
                    -0.25249165,
                    -0.79218364,
                    -0.00016900577,
                    -0.005404007,
                    -0.6572142,
                    -0.016158283,
                    -0.0038183727,
                    -0.0084872795,
                    -0.0010447716,
                    -0.005310106,
                    -0.15965909,
                    -0.36595997,
                    -5.4791635e-05,
                    -1.8788729e-05,
                    -0.0019647232,
                    -0.005080747,
                    -0.09048059,
                    -0.00012000537,
                    -0.02056138,
                    -0.105553396,
                    -0.10218847,
                    -0.034308627,
                    -0.06793751,
                    -3.7743856e-05,
                    -1.438695,
                    -0.0026241567,
                    -0.16478387,
                    -0.0015466972,
                    -0.005072242,
                    -0.0077023534,
                    -0.9843821,
                    -0.0014050454,
                    -0.13188179,
                    -1.6282536e-05,
                    -1.4139594e-05,
                    -0.0021927708,
                    -0.04142435,
                    -0.15680383,
                    -1.1763263,
                    -0.014033183,
                    -0.0063847858,
                    -0.92949647,
                    -0.028973084,
                    -0.0053997533,
                    -0.019114671,
                    -0.35885057,
                    -5.0260765e-05,
                    -0.0005194802,
                    -5.2288255e-05,
                    -0.0005982039,
                    -0.00011523515,
                    -3.762558e-05,
                    -7.255186e-05,
                    -0.021953275,
                    -0.4216385,
                    -1.0681599e-05,
                    -0.17433178,
                    -0.007832764,
                    -0.033497248,
                    -0.34392694,
                    -0.0015346966,
                    -0.00034607758,
                    -6.6829845e-05,
                    -0.0003553787,
                    -0.004687047,
                    -0.004166481,
                    -0.00038101888,
                    -0.0071365177,
                    -0.019018985,
                    -2.8138238e-06,
                    -0.00096010824,
                    -0.010028732,
                    -0.0013069228,
                    -0.0046335123,
                    -0.0027294627,
                    -3.762558e-05,
                    -8.173468e-05,
                    -0.04706221,
                    -0.023374677,
                    -0.20810269,
                    -1.0323977e-05,
                    -0.03539173,
                    -0.0029216963,
                    -0.10089937,
                    -7.8752586e-05,
                    -3.0947078e-05,
                    -0.003288929,
                    -0.0026796777,
                    -0.00069983635,
                    -0.022231875,
                    -0.14777264,
                    -0.7119768,
                    -0.0040418115,
                    -0.013630026,
                    -1.9980816e-05,
                    -0.021522857,
                    -0.012197279,
                    -0.012395202,
                    -0.001214061,
                    -1.1991961e-05,
                    -0.0016998942,
                    -2.9625735,
                    -0.013435908,
                    -0.0007693875,
                    -0.009160104,
                    -0.0031134274,
                    -0.086990714,
                    -0.015203755,
                    -0.0029813556,
                    -4.048565e-05,
                    -0.0039016046,
                    -0.015473033,
                    -0.005097164,
                    -0.0002513358,
                    -0.0023467229,
                    -0.005264324,
                    -0.075949766,
                    -0.0001856978,
                    -0.0021750887,
                    -0.00048846815,
                    -0.0013441055,
                    -6.051553e-05,
                    -0.0002496669,
                    -0.0014849133,
                    -0.0065467046,
                    -0.15459263,
                    -0.025568264,
                    -0.0019564219,
                    -0.0034749887,
                    -0.009681707,
                    -0.1383803,
                    -0.00092663785,
                    -3.0947078e-05,
                    -0.0004278247,
                    -5.896488e-05,
                    -3.6074933e-05,
                    -0.0015195354,
                    -0.007574003,
                    -0.0040182928,
                    -0.022769302,
                    -8.065993e-05,
                    -2.28437e-05,
                    -0.00020966532,
                    -0.0069987555,
                    -0.0047041136,
                    -0.0013256647,
                    -0.00052043487,
                    -0.0022328543,
                    -0.0063269027,
                    -0.0075445734,
                    -0.55608,
                    -3.023464e-05,
                    -2.9519388e-05,
                    -0.4524812,
                    -0.0055752364,
                    -0.017344141,
                    -0.011044194,
                    -6.8669196e-06,
                    -0.000113328744,
                    -0.0031090027,
                    -1.7356348e-05,
                    -0.0006388203,
                    -1.5567284e-05,
                    -0.011446375,
                    -5.3162735e-06,
                    -0.001254822,
                    -0.0023480367,
                    -0.0062527065,
                    -1.8841804e-07,
                    -7.255186e-05,
                    -0.017673448,
                    -0.018286498,
                    -0.009824656,
                    -0.0070702475,
                    -0.00031179338,
                    -0.0005040948,
                    -0.020819206,
                    -0.00045418294,
                    -0.0001957132,
                    -0.00053993624,
                    -0.0046823155,
                    -0.0075799488,
                    -0.00023738743,
                    -8.185389e-05,
                    -0.05104868,
                    -0.110533334,
                    -1.8788729e-05,
                    -0.021152157,
                    -0.010083039,
                    -0.0013615934,
                    -0.0029800397,
                    -0.002750264,
                    -4.811501e-05,
                    -0.027527038,
                    -0.005587824,
                    -0.28328112,
                    -0.09038938,
                    -0.0012125105,
                    -7.064452e-05,
                    -9.437268e-05,
                    -0.01017956,
                    -0.0035047748,
                    -0.0011044398,
                    -0.00019392508,
                    -9.606849e-06,
                    -5.7413286e-05,
                    -5.79217e-06,
                    -1.8788729e-05,
                    -0.011206504,
                    -0.019407554,
                    -2.693682e-06,
                    -0.00057285564,
                    -0.0031155196,
                    -0.0011241909,
                    -0.0007615132,
                    -0.091083996,
                    -0.00024120306,
                    -0.008792697,
                    -0.00019380587,
                    -0.00055568025,
                    -0.0010159514,
                    -0.00012846824,
                    -2.8326363e-05,
                    -9.5442745e-05,
                    -0.00028424585,
                    -0.00045513758,
                    -0.0014243271,
                    -0.0016256217,
                    -0.0153882895,
                    -0.00012000537,
                    -1.7595703e-05,
                    -0.00053874415,
                    -0.046909533,
                    -5.7057543e-05,
                    -0.00040415474,
                    -0.01885267,
                    -0.011158165,
                    -1.1378087,
                    -0.0052860766,
                    -0.00029533787,
                    -4.9308033e-05,
                    -0.0065090265,
                    -0.009279154,
                    -4.2392992e-05,
                    -0.0009144692,
                    -0.00020942597,
                    -7.8540467e-07,
                    -2.0218295e-05,
                    -2.2159093e-06,
                    -0.0026444755,
                    -0.0029024463,
                    -0.0029276146,
                    -0.1812181,
                    -0.009738946,
                    -0.005446974,
                    -3.051303e-06,
                    -3.076318e-07,
                    -0.016955467,
                    -0.00071832864,
                    -0.024049347,
                    -0.0024291137,
                    -0.0012490934,
                    -0.0025182047,
                    -0.23491946,
                    -2.4543265e-06,
                    -4.0040345e-06,
                    -0.0006194353,
                    -1.7710491,
                    -0.00015589187,
                    -0.0009857005,
                    -0.0299619,
                    -2.4510746e-05,
                    -0.00033975672,
                    -8.3404535e-05,
                    -0.00040737336,
                    -2.0098154e-05,
                    -7.584048e-06,
                    -2.4543265e-06,
                    -0.0006407295,
                    -0.0025791577,
                    -0.0053220913,
                    -8.900641e-05,
                    -0.014056155,
                    -0.012523935,
                    -2.7797194,
                    -1.7296232,
                    -0.032391336,
                    -0.6028835,
                    -2.6538237e-05,
                    -0.033119872,
                    -0.12057304,
                    -2.4543265e-06,
                    -0.0018374056,
                    -1.0765055,
                    -0.000828026,
                    -0.027702954,
                    -2.8138238e-06,
                    -2.8138238e-06,
                    -0.0051980577,
                    -0.3925773,
                    -0.021639671,
                    -0.0009114852,
                    -1.0800813e-05,
                    -0.00035192163,
                    -0.0010883289,
                    -0.0013310958,
                    -0.0012261152,
                    -0.015475758,
                    -0.0008123946,
                    -3.655083e-05,
                    -9.270188e-05,
                    -0.026851967,
                    -0.05937109,
                    -0.005447335,
                    -0.0041667176,
                    -0.011481102,
                    -0.046288177,
                    -0.0035715308,
                    -0.005723295,
                    -0.0040398967,
                    -0.0011687065,
                    -0.0026298345,
                    -0.0134762,
                    -8.054166e-05,
                    -0.00297496,
                    -5.5556293e-06,
                    -0.0001707939,
                    -0.0074280137
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.45596248
                    },
                    {
                        "step": -0.11296678
                    },
                    {
                        ".": -3.529076e-06
                    },
                    {
                        "get": -0.001949976
                    },
                    {
                        "Wait": -0.00032085512
                    },
                    {
                        "()": -0.48248017
                    },
                    {
                        " ||": -0.15443897
                    },
                    {
                        " (": -0.2165285
                    },
                    {
                        "item": -0.026887912
                    },
                    {
                        " instance": -0.016826285
                    },
                    {
                        "of": -1.6165199e-05
                    },
                    {
                        " Job": -0.4265442
                    },
                    {
                        ")": -0.7083197
                    },
                    {
                        " item": -0.23461223
                    },
                    {
                        " instance": -0.015072804
                    },
                    {
                        "of": -1.8788729e-05
                    },
                    {
                        " Que": -0.22386739
                    },
                    {
                        "ue": -3.201996e-05
                    },
                    {
                        ".": -0.0015240738
                    },
                    {
                        "Task": -0.0018774164
                    },
                    {
                        "))": -0.26213473
                    },
                    {
                        " {": -0.07543685
                    },
                    {
                        "\n": -0.0626551
                    },
                    {
                        "              ": -0.7019379
                    },
                    {
                        " Run": -1.7581679
                    },
                    {
                        "<": -1.8886182
                    },
                    {
                        "Build": -0.28675923
                    },
                    {
                        " =": -0.08565424
                    },
                    {
                        " ((": -1.0988559
                    },
                    {
                        ";": -0.005989135
                    },
                    {
                        "\n": -0.020373942
                    },
                    {
                        "              ": -0.026100572
                    },
                    {
                        " if": -0.29518056
                    },
                    {
                        " (": -0.25141013
                    },
                    {
                        "item": -0.5057265
                    },
                    {
                        ".": -0.0060873595
                    },
                    {
                        "get": -0.118611805
                    },
                    {
                        "Last": -0.7510506
                    },
                    {
                        "Build": -0.5045758
                    },
                    {
                        "())": -0.28392705
                    },
                    {
                        " {": -0.004222864
                    },
                    {
                        "\n": -0.0053349137
                    },
                    {
                        "                  ": -0.017431477
                    },
                    {
                        " last": -0.29433638
                    },
                    {
                        "Build": -3.6074933e-05
                    },
                    {
                        " =": -0.0063043507
                    },
                    {
                        " ((": -0.69099003
                    },
                    {
                        "Job": -0.034934927
                    },
                    {
                        ")": -0.16461325
                    },
                    {
                        " item": -0.11202443
                    },
                    {
                        ").": -0.0011769431
                    },
                    {
                        "get": -0.00019189759
                    },
                    {
                        "Last": -0.023365464
                    },
                    {
                        "Build": -0.041402295
                    },
                    {
                        "();": -0.0010328386
                    },
                    {
                        "\n": -0.008758783
                    },
                    {
                        "              ": -0.58135027
                    },
                    {
                        " }": -0.0004351002
                    },
                    {
                        "\n": -0.39013255
                    },
                    {
                        "              ": -0.35703862
                    },
                    {
                        " if": -0.36291465
                    },
                    {
                        " (": -0.12266937
                    },
                    {
                        "last": -0.25812545
                    },
                    {
                        "Build": -6.5092986e-06
                    },
                    {
                        " !=": -0.32454127
                    },
                    {
                        " null": -0.003975682
                    },
                    {
                        ")": -0.21569635
                    },
                    {
                        " {": -0.0045560277
                    },
                    {
                        "\n": -0.017804256
                    },
                    {
                        "                  ": -0.25249165
                    },
                    {
                        " last": -0.79218364
                    },
                    {
                        "Build": -0.00016900577
                    },
                    {
                        " =": -0.005404007
                    },
                    {
                        " ((": -0.6572142
                    },
                    {
                        "Job": -0.016158283
                    },
                    {
                        ")": -0.0038183727
                    },
                    {
                        " item": -0.0084872795
                    },
                    {
                        ").": -0.0010447716
                    },
                    {
                        "get": -0.005310106
                    },
                    {
                        "Last": -0.15965909
                    },
                    {
                        "Success": -0.36595997
                    },
                    {
                        "ful": -5.4791635e-05
                    },
                    {
                        "Build": -1.8788729e-05
                    },
                    {
                        "();": -0.0019647232
                    },
                    {
                        "\n": -0.005080747
                    },
                    {
                        "              ": -0.09048059
                    },
                    {
                        " }": -0.00012000537
                    },
                    {
                        "\n": -0.02056138
                    },
                    {
                        "              ": -0.105553396
                    },
                    {
                        " if": -0.10218847
                    },
                    {
                        " (": -0.034308627
                    },
                    {
                        "last": -0.06793751
                    },
                    {
                        "Build": -3.7743856e-05
                    },
                    {
                        " ==": -0.27584928
                    },
                    {
                        " null": -0.0026241567
                    },
                    {
                        ")": -0.16478387
                    },
                    {
                        " {": -0.0015466972
                    },
                    {
                        "\n": -0.005072242
                    },
                    {
                        "                  ": -0.0077023534
                    },
                    {
                        " listener": -0.9843821
                    },
                    {
                        ".": -0.0014050454
                    },
                    {
                        "get": -0.13188179
                    },
                    {
                        "Log": -1.6282536e-05
                    },
                    {
                        "ger": -1.4139594e-05
                    },
                    {
                        "().": -0.0021927708
                    },
                    {
                        "println": -0.04142435
                    },
                    {
                        "(\"": -0.15680383
                    },
                    {
                        "S": -1.1763263
                    },
                    {
                        "ched": -0.014033183
                    },
                    {
                        "uling": -0.0063847858
                    },
                    {
                        " project": -0.92949647
                    },
                    {
                        ":": -0.028973084
                    },
                    {
                        " \"": -0.0053997533
                    },
                    {
                        " +": -0.019114671
                    },
                    {
                        " Model": -0.35885057
                    },
                    {
                        "Hyper": -5.0260765e-05
                    },
                    {
                        "link": -0.0005194802
                    },
                    {
                        "Note": -5.2288255e-05
                    },
                    {
                        ".": -0.0005982039
                    },
                    {
                        "en": -0.00011523515
                    },
                    {
                        "code": -3.762558e-05
                    },
                    {
                        "To": -7.255186e-05
                    },
                    {
                        "(": -0.021953275
                    },
                    {
                        "last": -0.4216385
                    },
                    {
                        "Build": -1.0681599e-05
                    },
                    {
                        "));": -0.17433178
                    },
                    {
                        "\n": -0.007832764
                    },
                    {
                        "                  ": -0.033497248
                    },
                    {
                        " node": -0.34392694
                    },
                    {
                        ".": -0.0015346966
                    },
                    {
                        "add": -0.00034607758
                    },
                    {
                        "Action": -6.6829845e-05
                    },
                    {
                        "(": -0.0003553787
                    },
                    {
                        "new": -0.004687047
                    },
                    {
                        " Label": -0.004166481
                    },
                    {
                        "Action": -0.00038101888
                    },
                    {
                        "(": -0.0071365177
                    },
                    {
                        "Mess": -0.019018985
                    },
                    {
                        "ages": -2.8138238e-06
                    },
                    {
                        ".": -0.00096010824
                    },
                    {
                        "Build": -0.010028732
                    },
                    {
                        "Trigger": -0.0013069228
                    },
                    {
                        "Step": -0.0046335123
                    },
                    {
                        "Exec": -0.0027294627
                    },
                    {
                        "ution": -3.762558e-05
                    },
                    {
                        "_": -8.173468e-05
                    },
                    {
                        "building": -0.04706221
                    },
                    {
                        "_(": -0.023374677
                    },
                    {
                        "last": -0.20810269
                    },
                    {
                        "Build": -1.0323977e-05
                    },
                    {
                        ".": -0.03539173
                    },
                    {
                        "get": -0.0029216963
                    },
                    {
                        "Full": -0.10089937
                    },
                    {
                        "Display": -7.8752586e-05
                    },
                    {
                        "Name": -3.0947078e-05
                    },
                    {
                        "()": -0.003288929
                    },
                    {
                        "))": -0.0026796777
                    },
                    {
                        ");": -0.00069983635
                    },
                    {
                        "\n": -0.022231875
                    },
                    {
                        "                  ": -0.14777264
                    },
                    {
                        " List": -0.7119768
                    },
                    {
                        "<": -0.0040418115
                    },
                    {
                        "Action": -0.013630026
                    },
                    {
                        ">": -1.9980816e-05
                    },
                    {
                        " actions": -0.021522857
                    },
                    {
                        " =": -0.012197279
                    },
                    {
                        " new": -0.012395202
                    },
                    {
                        " Array": -0.001214061
                    },
                    {
                        "List": -1.1991961e-05
                    },
                    {
                        "<": -0.0016998942
                    },
                    {
                        ">": -0.058109216
                    },
                    {
                        ">": -0.013435908
                    },
                    {
                        "();": -0.0007693875
                    },
                    {
                        "\n": -0.009160104
                    },
                    {
                        "                  ": -0.0031134274
                    },
                    {
                        " if": -0.086990714
                    },
                    {
                        " (": -0.015203755
                    },
                    {
                        "step": -0.0029813556
                    },
                    {
                        ".": -4.048565e-05
                    },
                    {
                        "get": -0.0039016046
                    },
                    {
                        "Wait": -0.015473033
                    },
                    {
                        "())": -0.005097164
                    },
                    {
                        " {": -0.0002513358
                    },
                    {
                        "\n": -0.0023467229
                    },
                    {
                        "                      ": -0.005264324
                    },
                    {
                        " Step": -0.075949766
                    },
                    {
                        "Context": -0.0001856978
                    },
                    {
                        " context": -0.0021750887
                    },
                    {
                        " =": -0.00048846815
                    },
                    {
                        " get": -0.0013441055
                    },
                    {
                        "Context": -6.051553e-05
                    },
                    {
                        "();": -0.0002496669
                    },
                    {
                        "\n": -0.0014849133
                    },
                    {
                        "                      ": -0.0065467046
                    },
                    {
                        " boolean": -0.15459263
                    },
                    {
                        " is": -0.025568264
                    },
                    {
                        "Prop": -0.0019564219
                    },
                    {
                        "agate": -0.0034749887
                    },
                    {
                        " =": -0.009681707
                    },
                    {
                        " ": -0.1383803
                    },
                    {
                        " step": -0.00092663785
                    },
                    {
                        ".": -3.0947078e-05
                    },
                    {
                        "is": -0.0004278247
                    },
                    {
                        "Prop": -5.896488e-05
                    },
                    {
                        "agate": -3.6074933e-05
                    },
                    {
                        "();": -0.0015195354
                    },
                    {
                        "\n": -0.007574003
                    },
                    {
                        "                      ": -0.0040182928
                    },
                    {
                        " actions": -0.022769302
                    },
                    {
                        ".": -8.065993e-05
                    },
                    {
                        "add": -2.28437e-05
                    },
                    {
                        "(": -0.00020966532
                    },
                    {
                        "new": -0.0069987555
                    },
                    {
                        " Build": -0.0047041136
                    },
                    {
                        "Trigger": -0.0013256647
                    },
                    {
                        "Action": -0.00052043487
                    },
                    {
                        "(": -0.0022328543
                    },
                    {
                        "context": -0.0063269027
                    },
                    {
                        ",": -0.0075445734
                    },
                    {
                        " is": -0.55608
                    },
                    {
                        "Prop": -3.023464e-05
                    },
                    {
                        "agate": -2.9519388e-05
                    },
                    {
                        "));": -0.4524812
                    },
                    {
                        "\n": -0.0055752364
                    },
                    {
                        "                      ": -0.017344141
                    },
                    {
                        " LOG": -0.011044194
                    },
                    {
                        "GER": -6.8669196e-06
                    },
                    {
                        ".": -0.000113328744
                    },
                    {
                        "log": -0.0031090027
                    },
                    {
                        "(": -1.7356348e-05
                    },
                    {
                        "Level": -0.0006388203
                    },
                    {
                        ".": -1.5567284e-05
                    },
                    {
                        "FIN": -0.011446375
                    },
                    {
                        "ER": -5.3162735e-06
                    },
                    {
                        ",": -0.001254822
                    },
                    {
                        " \"": -0.0023480367
                    },
                    {
                        "sc": -0.0062527065
                    },
                    {
                        "hed": -1.8841804e-07
                    },
                    {
                        "uling": -7.255186e-05
                    },
                    {
                        " a": -0.017673448
                    },
                    {
                        " build": -0.018286498
                    },
                    {
                        " of": -0.009824656
                    },
                    {
                        " {": -0.0070702475
                    },
                    {
                        "0": -0.00031179338
                    },
                    {
                        "}": -0.0005040948
                    },
                    {
                        " from": -0.020819206
                    },
                    {
                        " {": -0.00045418294
                    },
                    {
                        "1": -0.0001957132
                    },
                    {
                        "}": -0.00053993624
                    },
                    {
                        "\",": -0.0046823155
                    },
                    {
                        " new": -0.0075799488
                    },
                    {
                        " Object": -0.00023738743
                    },
                    {
                        "[]": -8.185389e-05
                    },
                    {
                        "{": -0.05104868
                    },
                    {
                        "last": -0.110533334
                    },
                    {
                        "Build": -1.8788729e-05
                    },
                    {
                        ",": -0.021152157
                    },
                    {
                        " context": -0.010083039
                    },
                    {
                        "});": -0.0013615934
                    },
                    {
                        "\n": -0.0029800397
                    },
                    {
                        "                  ": -0.002750264
                    },
                    {
                        " }": -4.811501e-05
                    },
                    {
                        "\n": -0.027527038
                    },
                    {
                        "                  ": -0.005587824
                    },
                    {
                        " Cause": -0.28328112
                    },
                    {
                        ".": -0.09038938
                    },
                    {
                        "Up": -0.0012125105
                    },
                    {
                        "stream": -7.064452e-05
                    },
                    {
                        "Cause": -9.437268e-05
                    },
                    {
                        " cause": -0.01017956
                    },
                    {
                        " =": -0.0035047748
                    },
                    {
                        " new": -0.0011044398
                    },
                    {
                        " Cause": -0.00019392508
                    },
                    {
                        ".": -9.606849e-06
                    },
                    {
                        "Up": -5.7413286e-05
                    },
                    {
                        "stream": -5.79217e-06
                    },
                    {
                        "Cause": -1.8788729e-05
                    },
                    {
                        "(": -0.011206504
                    },
                    {
                        "inv": -0.019407554
                    },
                    {
                        "oking": -2.693682e-06
                    },
                    {
                        "Run": -0.00057285564
                    },
                    {
                        ");": -0.0031155196
                    },
                    {
                        "\n": -0.0011241909
                    },
                    {
                        "                  ": -0.0007615132
                    },
                    {
                        " Cause": -0.091083996
                    },
                    {
                        "Action": -0.00024120306
                    },
                    {
                        " cause": -0.008792697
                    },
                    {
                        "Action": -0.00019380587
                    },
                    {
                        " =": -0.00055568025
                    },
                    {
                        " new": -0.0010159514
                    },
                    {
                        " Cause": -0.00012846824
                    },
                    {
                        "Action": -2.8326363e-05
                    },
                    {
                        "(": -9.5442745e-05
                    },
                    {
                        "cause": -0.00028424585
                    },
                    {
                        ");": -0.00045513758
                    },
                    {
                        "\n": -0.0014243271
                    },
                    {
                        "                  ": -0.0016256217
                    },
                    {
                        " actions": -0.0153882895
                    },
                    {
                        ".": -0.00012000537
                    },
                    {
                        "add": -1.7595703e-05
                    },
                    {
                        "(": -0.00053874415
                    },
                    {
                        "cause": -0.046909533
                    },
                    {
                        "Action": -5.7057543e-05
                    },
                    {
                        ");": -0.00040415474
                    },
                    {
                        "\n": -0.01885267
                    },
                    {
                        "                  ": -0.011158165
                    },
                    {
                        " Integer": -1.1378087
                    },
                    {
                        " quiet": -0.0052860766
                    },
                    {
                        "Per": -0.00029533787
                    },
                    {
                        "iod": -4.9308033e-05
                    },
                    {
                        " =": -0.0065090265
                    },
                    {
                        " step": -0.009279154
                    },
                    {
                        ".": -4.2392992e-05
                    },
                    {
                        "get": -0.0009144692
                    },
                    {
                        "Qu": -0.00020942597
                    },
                    {
                        "iet": -7.8540467e-07
                    },
                    {
                        "Per": -2.0218295e-05
                    },
                    {
                        "iod": -2.2159093e-06
                    },
                    {
                        "();": -0.0026444755
                    },
                    {
                        "\n": -0.0029024463
                    },
                    {
                        "                  ": -0.0029276146
                    },
                    {
                        " if": -0.1812181
                    },
                    {
                        " (": -0.009738946
                    },
                    {
                        "quiet": -0.005446974
                    },
                    {
                        "Per": -3.051303e-06
                    },
                    {
                        "iod": -3.076318e-07
                    },
                    {
                        " ==": -0.016955467
                    },
                    {
                        " null": -0.00071832864
                    },
                    {
                        ")": -0.024049347
                    },
                    {
                        " {": -0.0024291137
                    },
                    {
                        "\n": -0.0012490934
                    },
                    {
                        "                      ": -0.0025182047
                    },
                    {
                        " quiet": -0.23491946
                    },
                    {
                        "Per": -2.4543265e-06
                    },
                    {
                        "iod": -4.0040345e-06
                    },
                    {
                        " =": -0.0006194353
                    },
                    {
                        " ((": -0.5217995
                    },
                    {
                        ".": -0.00015589187
                    },
                    {
                        "get": -0.0009857005
                    },
                    {
                        "Active": -0.0299619
                    },
                    {
                        "Instance": -2.4510746e-05
                    },
                    {
                        "().": -0.00033975672
                    },
                    {
                        "get": -8.3404535e-05
                    },
                    {
                        "Qu": -0.00040737336
                    },
                    {
                        "iet": -2.0098154e-05
                    },
                    {
                        "Per": -7.584048e-06
                    },
                    {
                        "iod": -2.4543265e-06
                    },
                    {
                        "();": -0.0006407295
                    },
                    {
                        "\n": -0.0025791577
                    },
                    {
                        "                  ": -0.0053220913
                    },
                    {
                        " }": -8.900641e-05
                    },
                    {
                        "\n": -0.014056155
                    },
                    {
                        "                  ": -0.012523935
                    },
                    {
                        " Que": -1.4064474
                    },
                    {
                        " is": -1.5707601
                    },
                    {
                        " =": -0.032391336
                    },
                    {
                        " last": -0.6028835
                    },
                    {
                        "Build": -2.6538237e-05
                    },
                    {
                        ".": -0.033119872
                    },
                    {
                        "sche": -0.12057304
                    },
                    {
                        "dule": -2.4543265e-06
                    },
                    {
                        "Build": -0.0018374056
                    },
                    {
                        "(": -0.41818792
                    },
                    {
                        "(": -0.000828026
                    },
                    {
                        "quiet": -0.027702954
                    },
                    {
                        "Per": -2.8138238e-06
                    },
                    {
                        "iod": -2.8138238e-06
                    },
                    {
                        ",": -0.0051980577
                    },
                    {
                        " actions": -0.3925773
                    },
                    {
                        ".": -0.021639671
                    },
                    {
                        "to": -0.0009114852
                    },
                    {
                        "Array": -1.0800813e-05
                    },
                    {
                        "(": -0.00035192163
                    },
                    {
                        "new": -0.0010883289
                    },
                    {
                        " Action": -0.0013310958
                    },
                    {
                        "[": -0.0012261152
                    },
                    {
                        "actions": -0.015475758
                    },
                    {
                        ".": -0.0008123946
                    },
                    {
                        "size": -3.655083e-05
                    },
                    {
                        "()": -9.270188e-05
                    },
                    {
                        "])": -0.026851967
                    },
                    {
                        ");": -0.05937109
                    },
                    {
                        "\n": -0.005447335
                    },
                    {
                        "                  ": -0.0041667176
                    },
                    {
                        " if": -0.011481102
                    },
                    {
                        " (!": -0.046288177
                    },
                    {
                        "b": -0.0035715308
                    },
                    {
                        ")": -0.005723295
                    },
                    {
                        " {": -0.0040398967
                    },
                    {
                        "\n": -0.0011687065
                    },
                    {
                        "                      ": -0.0026298345
                    },
                    {
                        " throw": -0.0134762
                    },
                    {
                        " new": -8.054166e-05
                    },
                    {
                        " Ab": -0.00297496
                    },
                    {
                        "ort": -5.5556293e-06
                    },
                    {
                        "Exception": -0.0001707939
                    },
                    {
                        "(\"": -0.0074280137
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6498,
                    6502,
                    6503,
                    6506,
                    6510,
                    6512,
                    6515,
                    6517,
                    6521,
                    6530,
                    6532,
                    6536,
                    6539,
                    6544,
                    6553,
                    6555,
                    6559,
                    6561,
                    6562,
                    6566,
                    6568,
                    6570,
                    6571,
                    6585,
                    6589,
                    6594,
                    6599,
                    6601,
                    6606,
                    6607,
                    6608,
                    6622,
                    6625,
                    6627,
                    6631,
                    6632,
                    6635,
                    6639,
                    6644,
                    6647,
                    6649,
                    6650,
                    6668,
                    6673,
                    6678,
                    6680,
                    6683,
                    6686,
                    6687,
                    6692,
                    6694,
                    6697,
                    6701,
                    6706,
                    6709,
                    6710,
                    6724,
                    6726,
                    6727,
                    6741,
                    6744,
                    6746,
                    6750,
                    6755,
                    6758,
                    6763,
                    6764,
                    6766,
                    6767,
                    6785,
                    6790,
                    6795,
                    6797,
                    6800,
                    6803,
                    6804,
                    6809,
                    6811,
                    6814,
                    6818,
                    6825,
                    6828,
                    6833,
                    6836,
                    6837,
                    6851,
                    6853,
                    6854,
                    6868,
                    6871,
                    6873,
                    6877,
                    6882,
                    6885,
                    6890,
                    6891,
                    6893,
                    6894,
                    6912,
                    6921,
                    6922,
                    6925,
                    6928,
                    6931,
                    6934,
                    6941,
                    6943,
                    6944,
                    6948,
                    6953,
                    6961,
                    6962,
                    6964,
                    6966,
                    6972,
                    6977,
                    6981,
                    6985,
                    6986,
                    6988,
                    6992,
                    6994,
                    6995,
                    6999,
                    7004,
                    7007,
                    7008,
                    7026,
                    7031,
                    7032,
                    7035,
                    7041,
                    7042,
                    7045,
                    7051,
                    7057,
                    7058,
                    7062,
                    7066,
                    7067,
                    7072,
                    7079,
                    7083,
                    7087,
                    7092,
                    7093,
                    7101,
                    7103,
                    7107,
                    7112,
                    7113,
                    7116,
                    7120,
                    7127,
                    7131,
                    7133,
                    7135,
                    7137,
                    7138,
                    7156,
                    7161,
                    7162,
                    7168,
                    7169,
                    7177,
                    7179,
                    7183,
                    7189,
                    7193,
                    7194,
                    7200,
                    7201,
                    7204,
                    7205,
                    7223,
                    7226,
                    7228,
                    7232,
                    7233,
                    7236,
                    7240,
                    7243,
                    7245,
                    7246,
                    7268,
                    7273,
                    7280,
                    7288,
                    7290,
                    7294,
                    7301,
                    7304,
                    7305,
                    7327,
                    7335,
                    7338,
                    7342,
                    7347,
                    7349,
                    7350,
                    7355,
                    7356,
                    7358,
                    7362,
                    7367,
                    7370,
                    7371,
                    7393,
                    7401,
                    7402,
                    7405,
                    7406,
                    7409,
                    7415,
                    7422,
                    7428,
                    7429,
                    7436,
                    7437,
                    7440,
                    7444,
                    7449,
                    7452,
                    7453,
                    7475,
                    7479,
                    7482,
                    7483,
                    7486,
                    7487,
                    7492,
                    7493,
                    7496,
                    7498,
                    7499,
                    7501,
                    7503,
                    7506,
                    7511,
                    7513,
                    7519,
                    7522,
                    7524,
                    7525,
                    7526,
                    7531,
                    7533,
                    7534,
                    7535,
                    7537,
                    7541,
                    7548,
                    7550,
                    7551,
                    7555,
                    7560,
                    7561,
                    7569,
                    7572,
                    7573,
                    7591,
                    7593,
                    7594,
                    7612,
                    7618,
                    7619,
                    7621,
                    7627,
                    7632,
                    7638,
                    7640,
                    7644,
                    7650,
                    7651,
                    7653,
                    7659,
                    7664,
                    7665,
                    7668,
                    7673,
                    7676,
                    7678,
                    7679,
                    7697,
                    7703,
                    7709,
                    7715,
                    7721,
                    7723,
                    7727,
                    7733,
                    7739,
                    7740,
                    7745,
                    7747,
                    7748,
                    7766,
                    7774,
                    7775,
                    7778,
                    7779,
                    7784,
                    7790,
                    7792,
                    7793,
                    7811,
                    7819,
                    7825,
                    7828,
                    7831,
                    7833,
                    7838,
                    7839,
                    7842,
                    7844,
                    7847,
                    7850,
                    7853,
                    7856,
                    7857,
                    7875,
                    7878,
                    7880,
                    7885,
                    7888,
                    7891,
                    7894,
                    7899,
                    7900,
                    7902,
                    7903,
                    7925,
                    7931,
                    7934,
                    7937,
                    7939,
                    7947,
                    7948,
                    7951,
                    7957,
                    7965,
                    7968,
                    7971,
                    7973,
                    7976,
                    7979,
                    7982,
                    7985,
                    7986,
                    8004,
                    8006,
                    8007,
                    8025,
                    8033,
                    8035,
                    8037,
                    8042,
                    8047,
                    8048,
                    8052,
                    8056,
                    8061,
                    8062,
                    8063,
                    8068,
                    8071,
                    8074,
                    8075,
                    8083,
                    8084,
                    8086,
                    8091,
                    8092,
                    8095,
                    8102,
                    8103,
                    8110,
                    8111,
                    8115,
                    8117,
                    8119,
                    8121,
                    8122,
                    8140,
                    8143,
                    8146,
                    8147,
                    8148,
                    8150,
                    8151,
                    8173,
                    8179,
                    8183,
                    8186,
                    8189,
                    8198
                ]
            },
            "finish_reason": "length"
        },
        {
            "text": "           if (!step.getWait()) {\n               if (item instanceof Job) {\n                   final Job project = (Job) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n                       throw new AbortException(\"Failed to trigger build of \" + project.getFullName());\n                   }\n               } else {\n                   LOGGER.log(Level.FINE, \"Triggering non-job item {0} without waiting\", item.getFullName());\n                   if (item instanceof Queue.Task) {\n                       Queue.Task task = (Queue.Task) item;\n                       String itemEncoded = ModelHyperlinkNote.encodeTo(item);\n                       listener.getLogger().",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (!",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " final",
                    " Job",
                    " project",
                    " =",
                    " (",
                    "Job",
                    ")",
                    " item",
                    ";",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " project",
                    ":",
                    " \"",
                    " +",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "project",
                    "));",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Label",
                    "Action",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "project",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "()",
                    "))",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Action",
                    ">",
                    " actions",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    ">",
                    "();",
                    "\n",
                    "                  ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ");",
                    "\n",
                    "                  ",
                    " Cause",
                    "Action",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Cause",
                    "Action",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                  ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "cause",
                    "Action",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Parameter",
                    "Value",
                    ">",
                    " parameters",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Parameters",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "param",
                    "eters",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " parameters",
                    " =",
                    " complete",
                    "Default",
                    "Parameters",
                    "(",
                    "param",
                    "eters",
                    ",",
                    " project",
                    ");",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Parameters",
                    "Action",
                    "(",
                    "param",
                    "eters",
                    "));",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Integer",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "quiet",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " project",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Que",
                    "ue",
                    "Task",
                    "Future",
                    "<?",
                    ">",
                    " f",
                    " =",
                    " project",
                    ".",
                    "sche",
                    "dule",
                    "Build",
                    "2",
                    "(",
                    "quiet",
                    "Per",
                    "iod",
                    ",",
                    " actions",
                    ".",
                    "to",
                    "Array",
                    "(",
                    "new",
                    " Action",
                    "[",
                    "actions",
                    ".",
                    "size",
                    "()",
                    "])",
                    ");",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "f",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "F",
                    "ailed",
                    " to",
                    " trigger",
                    " build",
                    " of",
                    " \"",
                    " +",
                    " project",
                    ".",
                    "get",
                    "Full",
                    "Name",
                    "());",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "              ",
                    " }",
                    " else",
                    " {",
                    "\n",
                    "                  ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FINE",
                    ",",
                    " \"",
                    "Trigger",
                    "ing",
                    " non",
                    "-",
                    "job",
                    " item",
                    " {",
                    "0",
                    "}",
                    " without",
                    " waiting",
                    "\",",
                    " item",
                    ".",
                    "get",
                    "Full",
                    "Name",
                    "());",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    " task",
                    " =",
                    " (",
                    "Queue",
                    ".",
                    "Task",
                    ")",
                    " item",
                    ";",
                    "\n",
                    "                      ",
                    " String",
                    " item",
                    "Enc",
                    "oded",
                    " =",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "item",
                    ");",
                    "\n",
                    "                      ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "()."
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.07009361,
                    -1.7108204,
                    -0.11296678,
                    -3.529076e-06,
                    -0.001949976,
                    -0.00032085512,
                    -0.96140766,
                    -0.0024567184,
                    -0.025259636,
                    -0.5559042,
                    -0.49256817,
                    -1.0523174,
                    -0.16629039,
                    -0.009642408,
                    -9.846204e-06,
                    -0.211387,
                    -0.077887625,
                    -0.0027458996,
                    -0.015895545,
                    -0.0369499,
                    -0.91961026,
                    -0.252897,
                    -0.48420212,
                    -0.0037143282,
                    -0.01008894,
                    -0.001128488,
                    -0.0011521796,
                    -0.021915864,
                    -0.0004910945,
                    -0.011139421,
                    -0.0068589738,
                    -0.35844693,
                    -0.000292475,
                    -0.00016626397,
                    -2.3360508e-06,
                    -5.460492e-07,
                    -0.00039485365,
                    -0.001597143,
                    -0.016009765,
                    -0.007697428,
                    -6.528106e-05,
                    -0.00051900244,
                    -0.008701903,
                    -0.001111063,
                    -0.0022909227,
                    -0.0016798908,
                    -0.116106525,
                    -2.272356e-05,
                    -1.855031e-05,
                    -1.1159372e-05,
                    -0.00012799047,
                    -2.8445576e-05,
                    -3.2140102e-05,
                    -5.300351e-05,
                    -0.0006177654,
                    -0.0064574336,
                    -0.0055011557,
                    -0.005114239,
                    -0.0033118327,
                    -0.051998194,
                    -0.00030725967,
                    -0.00012620141,
                    -8.5358415e-06,
                    -6.623567e-05,
                    -0.003782474,
                    -0.0005058838,
                    -0.00011618975,
                    -0.0010130885,
                    -0.0055150003,
                    -2.8138238e-06,
                    -0.00031596568,
                    -0.002311713,
                    -0.00039962292,
                    -0.002360046,
                    -0.0005853219,
                    -2.7371756e-05,
                    -3.8217877e-05,
                    -0.0012817387,
                    -0.0018118488,
                    -0.009594805,
                    -0.0013452994,
                    -0.00012155601,
                    -0.004961057,
                    -0.010481821,
                    -1.0920954e-05,
                    -0.00034798586,
                    -0.00023357182,
                    -0.00011821817,
                    -0.016610274,
                    -0.008398495,
                    -0.14004552,
                    -0.0009997239,
                    -0.008073132,
                    -9.846204e-06,
                    -0.0055402326,
                    -0.0017574513,
                    -0.0026298345,
                    -0.0004182852,
                    -3.7684315e-06,
                    -0.0009494883,
                    -0.04389853,
                    -0.0001395556,
                    -0.007843621,
                    -0.00795038,
                    -1.2442561,
                    -0.008608773,
                    -0.00023404865,
                    -1.855031e-05,
                    -5.669991e-05,
                    -0.0023480367,
                    -0.0017264016,
                    -0.0011821948,
                    -0.00023202116,
                    -9.72699e-06,
                    -2.3675353e-05,
                    -4.2433903e-06,
                    -5.0778563e-06,
                    -0.0019592883,
                    -0.0033349167,
                    -3.4089344e-06,
                    -7.255186e-05,
                    -0.00060738955,
                    -0.0010898814,
                    -0.0014927924,
                    -0.033530653,
                    -6.909574e-05,
                    -0.0020220587,
                    -0.00016459411,
                    -0.0011215664,
                    -0.0009879703,
                    -9.9142904e-05,
                    -2.665838e-05,
                    -6.408898e-05,
                    -0.0004310471,
                    -0.00027888143,
                    -0.0013705472,
                    -0.0015797724,
                    -0.01605719,
                    -5.4075444e-05,
                    -1.2708151e-05,
                    -0.0002665992,
                    -0.033502303,
                    -0.00013168594,
                    -0.0011484785,
                    -0.007938484,
                    -0.0058620833,
                    -0.11109894,
                    -0.00039437588,
                    -0.0008176436,
                    -5.4194657e-05,
                    -5.675771e-06,
                    -0.0036546825,
                    -0.001318025,
                    -0.009330049,
                    -0.00013478725,
                    -8.161453e-05,
                    -5.956092e-05,
                    -0.0008429984,
                    -0.0025688175,
                    -0.0047383104,
                    -0.026958387,
                    -0.015011328,
                    -0.0041658813,
                    -1.37819625e-05,
                    -0.005422766,
                    -0.0004953888,
                    -0.014347013,
                    -0.0003563333,
                    -0.0015034789,
                    -0.004648602,
                    -0.014010276,
                    -0.0010001989,
                    -0.0032101122,
                    -0.0001270368,
                    -3.7863996e-05,
                    -0.0008965109,
                    -0.0026817098,
                    -9.72699e-06,
                    -0.0008660254,
                    -0.26821372,
                    -0.0012827506,
                    -0.0016938034,
                    -0.0025467086,
                    -0.0151354335,
                    -9.925743e-05,
                    -1.1514188e-05,
                    -0.00022039504,
                    -0.00098606,
                    -0.00037791664,
                    -8.5358415e-06,
                    -5.6340414e-05,
                    -0.0015385778,
                    -2.1889093e-05,
                    -0.00033200442,
                    -0.0012255172,
                    -0.0032379206,
                    -5.669991e-05,
                    -0.012617248,
                    -0.0083111655,
                    -0.17630151,
                    -0.0006500334,
                    -9.0795475e-05,
                    -2.3675353e-05,
                    -0.0024466186,
                    -0.0024913142,
                    -6.635395e-05,
                    -0.00012882493,
                    -4.8353428e-05,
                    -1.7400124e-06,
                    -3.2906587e-06,
                    -1.8601542e-06,
                    -0.00223835,
                    -0.0016286067,
                    -0.0029069313,
                    -0.029286418,
                    -0.003367331,
                    -0.0015455042,
                    -3.7684315e-06,
                    -1.7400124e-06,
                    -0.0086545255,
                    -0.00018712736,
                    -0.006948338,
                    -0.00080619013,
                    -0.00061347015,
                    -0.0026160297,
                    -0.034864932,
                    -1.5006569e-06,
                    -2.3360508e-06,
                    -0.0004602654,
                    -0.0255309,
                    -0.0015372656,
                    -0.00015946814,
                    -0.00013657632,
                    -9.012677e-06,
                    -0.00021729656,
                    -7.8540467e-07,
                    -0.00027625792,
                    -0.00075047655,
                    -0.0024689678,
                    -2.1051823e-05,
                    -0.0126886,
                    -0.011627264,
                    -0.30022827,
                    -3.529076e-06,
                    -0.007487763,
                    -1.2351458e-05,
                    -0.00715729,
                    -0.001527772,
                    -0.024189234,
                    -0.0056399712,
                    -0.09643355,
                    -0.0028423108,
                    -0.00012679932,
                    -2.3360508e-06,
                    -8.5358415e-06,
                    -0.01130283,
                    -0.00030368532,
                    -0.014225727,
                    -7.8540467e-07,
                    -1.3823812e-06,
                    -0.0032808555,
                    -0.13782834,
                    -0.0034686492,
                    -0.00023023302,
                    -7.698572e-06,
                    -0.00011630989,
                    -0.00080141716,
                    -0.0003244323,
                    -0.0012789923,
                    -0.005495343,
                    -0.0002519309,
                    -1.5214344e-05,
                    -5.312365e-05,
                    -0.0009699528,
                    -0.00046336767,
                    -0.0039050158,
                    -0.002286621,
                    -0.0073039,
                    -0.007388863,
                    -0.0027739312,
                    -0.007971226,
                    -0.00012858746,
                    -0.0018861956,
                    -0.0011160753,
                    -0.000792652,
                    -0.0012312467,
                    -0.005791698,
                    -4.0246297e-05,
                    -0.001197293,
                    -2.3360508e-06,
                    -8.209043e-05,
                    -0.0017433002,
                    -0.003247188,
                    -1.5094201e-05,
                    -7.8038276e-05,
                    -0.013120128,
                    -0.0019763098,
                    -0.0023740863,
                    -0.0013658915,
                    -0.000246207,
                    -0.014072235,
                    -0.0007090229,
                    -4.0009756e-05,
                    -0.0013082369,
                    -0.009719144,
                    -0.00038733694,
                    -0.00051960035,
                    -0.0008501566,
                    -4.2631407e-05,
                    -0.053246796,
                    -0.2545014,
                    -0.0044609467,
                    -0.86347467,
                    -0.17693882,
                    -0.012607953,
                    -0.068177596,
                    -4.507567,
                    -0.00013919984,
                    -0.00038590643,
                    -0.15955554,
                    -0.00038101888,
                    -0.0136462785,
                    -0.00013443055,
                    -1.5625484,
                    -0.02808424,
                    -0.1603384,
                    -3.403995,
                    -0.15750855,
                    -1.3604285,
                    -0.038785085,
                    -0.5568565,
                    -0.852286,
                    -0.38804236,
                    -0.0022850665,
                    -0.041758146,
                    -2.2681804,
                    -0.10418493,
                    -0.64754,
                    -0.35119206,
                    -0.48533538,
                    -0.0019481841,
                    -0.11650773,
                    -0.035813145,
                    -0.0009973361,
                    -0.008192471,
                    -0.69921243,
                    -1.2726922,
                    -0.29187003,
                    -0.27326524,
                    -0.01447261,
                    -2.6060465e-05,
                    -0.48558635,
                    -0.00013097163,
                    -0.001824808,
                    -0.007865369,
                    -0.029618332,
                    -0.001179331,
                    -0.004523514,
                    -0.0090799825,
                    -0.36959535,
                    -1.9028084e-05,
                    -0.03834271,
                    -0.0031635347,
                    -0.055647884,
                    -0.0018418237,
                    -0.0023360879,
                    -0.0010531849,
                    -6.2699432e-06,
                    -9.130952e-06,
                    -5.550595e-05,
                    -0.008189284,
                    -0.00024930926,
                    -0.004123508,
                    -0.003842126,
                    -0.51779926,
                    -0.23940246,
                    -0.0063435785,
                    -0.00010068981,
                    -0.0009955469,
                    -0.0038778484,
                    -9.966347e-06,
                    -3.051303e-06,
                    -0.00010355082,
                    -7.255186e-05,
                    -3.7386224e-05,
                    -1.3542607e-05,
                    -2.6538237e-05,
                    -0.0003848345,
                    -0.06790989,
                    -0.0002694602,
                    -0.0015748754,
                    -0.0010864197,
                    -0.012342218,
                    -4.608659e-05,
                    -9.0198504e-05,
                    -1.6642034e-05,
                    -9.055464e-07,
                    -0.00020107947
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.07009361
                    },
                    {
                        " (": -0.45596248
                    },
                    {
                        "step": -0.11296678
                    },
                    {
                        ".": -3.529076e-06
                    },
                    {
                        "get": -0.001949976
                    },
                    {
                        "Wait": -0.00032085512
                    },
                    {
                        "()": -0.48248017
                    },
                    {
                        " {": -0.0024567184
                    },
                    {
                        "\n": -0.025259636
                    },
                    {
                        "              ": -0.5559042
                    },
                    {
                        " if": -0.49256817
                    },
                    {
                        "(": -0.62483865
                    },
                    {
                        "item": -0.16629039
                    },
                    {
                        " instance": -0.009642408
                    },
                    {
                        "of": -9.846204e-06
                    },
                    {
                        " Job": -0.211387
                    },
                    {
                        ")": -0.077887625
                    },
                    {
                        " {": -0.0027458996
                    },
                    {
                        "\n": -0.015895545
                    },
                    {
                        "                  ": -0.0369499
                    },
                    {
                        " final": -0.91961026
                    },
                    {
                        " Job": -0.252897
                    },
                    {
                        " project": -0.48420212
                    },
                    {
                        " =": -0.0037143282
                    },
                    {
                        " (": -0.01008894
                    },
                    {
                        "Job": -0.001128488
                    },
                    {
                        ")": -0.0011521796
                    },
                    {
                        " item": -0.021915864
                    },
                    {
                        ";": -0.0004910945
                    },
                    {
                        "\n": -0.011139421
                    },
                    {
                        "                  ": -0.0068589738
                    },
                    {
                        " listener": -0.35844693
                    },
                    {
                        ".": -0.000292475
                    },
                    {
                        "get": -0.00016626397
                    },
                    {
                        "Log": -2.3360508e-06
                    },
                    {
                        "ger": -5.460492e-07
                    },
                    {
                        "().": -0.00039485365
                    },
                    {
                        "println": -0.001597143
                    },
                    {
                        "(\"": -0.016009765
                    },
                    {
                        "S": -0.007697428
                    },
                    {
                        "ched": -6.528106e-05
                    },
                    {
                        "uling": -0.00051900244
                    },
                    {
                        " project": -0.008701903
                    },
                    {
                        ":": -0.001111063
                    },
                    {
                        " \"": -0.0022909227
                    },
                    {
                        " +": -0.0016798908
                    },
                    {
                        " Model": -0.116106525
                    },
                    {
                        "Hyper": -2.272356e-05
                    },
                    {
                        "link": -1.855031e-05
                    },
                    {
                        "Note": -1.1159372e-05
                    },
                    {
                        ".": -0.00012799047
                    },
                    {
                        "en": -2.8445576e-05
                    },
                    {
                        "code": -3.2140102e-05
                    },
                    {
                        "To": -5.300351e-05
                    },
                    {
                        "(": -0.0006177654
                    },
                    {
                        "project": -0.0064574336
                    },
                    {
                        "));": -0.0055011557
                    },
                    {
                        "\n": -0.005114239
                    },
                    {
                        "                  ": -0.0033118327
                    },
                    {
                        " node": -0.051998194
                    },
                    {
                        ".": -0.00030725967
                    },
                    {
                        "add": -0.00012620141
                    },
                    {
                        "Action": -8.5358415e-06
                    },
                    {
                        "(": -6.623567e-05
                    },
                    {
                        "new": -0.003782474
                    },
                    {
                        " Label": -0.0005058838
                    },
                    {
                        "Action": -0.00011618975
                    },
                    {
                        "(": -0.0010130885
                    },
                    {
                        "Mess": -0.0055150003
                    },
                    {
                        "ages": -2.8138238e-06
                    },
                    {
                        ".": -0.00031596568
                    },
                    {
                        "Build": -0.002311713
                    },
                    {
                        "Trigger": -0.00039962292
                    },
                    {
                        "Step": -0.002360046
                    },
                    {
                        "Exec": -0.0005853219
                    },
                    {
                        "ution": -2.7371756e-05
                    },
                    {
                        "_": -3.8217877e-05
                    },
                    {
                        "building": -0.0012817387
                    },
                    {
                        "_(": -0.0018118488
                    },
                    {
                        "project": -0.009594805
                    },
                    {
                        ".": -0.0013452994
                    },
                    {
                        "get": -0.00012155601
                    },
                    {
                        "Full": -0.004961057
                    },
                    {
                        "Display": -0.010481821
                    },
                    {
                        "Name": -1.0920954e-05
                    },
                    {
                        "()": -0.00034798586
                    },
                    {
                        "))": -0.00023357182
                    },
                    {
                        ");": -0.00011821817
                    },
                    {
                        "\n": -0.016610274
                    },
                    {
                        "                  ": -0.008398495
                    },
                    {
                        " List": -0.14004552
                    },
                    {
                        "<": -0.0009997239
                    },
                    {
                        "Action": -0.008073132
                    },
                    {
                        ">": -9.846204e-06
                    },
                    {
                        " actions": -0.0055402326
                    },
                    {
                        " =": -0.0017574513
                    },
                    {
                        " new": -0.0026298345
                    },
                    {
                        " Array": -0.0004182852
                    },
                    {
                        "List": -3.7684315e-06
                    },
                    {
                        "<": -0.0009494883
                    },
                    {
                        ">": -0.04389853
                    },
                    {
                        "();": -0.0001395556
                    },
                    {
                        "\n": -0.007843621
                    },
                    {
                        "                  ": -0.00795038
                    },
                    {
                        " if": -0.3946506
                    },
                    {
                        ".": -0.008608773
                    },
                    {
                        "Up": -0.00023404865
                    },
                    {
                        "stream": -1.855031e-05
                    },
                    {
                        "Cause": -5.669991e-05
                    },
                    {
                        " cause": -0.0023480367
                    },
                    {
                        " =": -0.0017264016
                    },
                    {
                        " new": -0.0011821948
                    },
                    {
                        " Cause": -0.00023202116
                    },
                    {
                        ".": -9.72699e-06
                    },
                    {
                        "Up": -2.3675353e-05
                    },
                    {
                        "stream": -4.2433903e-06
                    },
                    {
                        "Cause": -5.0778563e-06
                    },
                    {
                        "(": -0.0019592883
                    },
                    {
                        "inv": -0.0033349167
                    },
                    {
                        "oking": -3.4089344e-06
                    },
                    {
                        "Run": -7.255186e-05
                    },
                    {
                        ");": -0.00060738955
                    },
                    {
                        "\n": -0.0010898814
                    },
                    {
                        "                  ": -0.0014927924
                    },
                    {
                        " Cause": -0.033530653
                    },
                    {
                        "Action": -6.909574e-05
                    },
                    {
                        " cause": -0.0020220587
                    },
                    {
                        "Action": -0.00016459411
                    },
                    {
                        " =": -0.0011215664
                    },
                    {
                        " new": -0.0009879703
                    },
                    {
                        " Cause": -9.9142904e-05
                    },
                    {
                        "Action": -2.665838e-05
                    },
                    {
                        "(": -6.408898e-05
                    },
                    {
                        "cause": -0.0004310471
                    },
                    {
                        ");": -0.00027888143
                    },
                    {
                        "\n": -0.0013705472
                    },
                    {
                        "                  ": -0.0015797724
                    },
                    {
                        " actions": -0.01605719
                    },
                    {
                        ".": -5.4075444e-05
                    },
                    {
                        "add": -1.2708151e-05
                    },
                    {
                        "(": -0.0002665992
                    },
                    {
                        "cause": -0.033502303
                    },
                    {
                        "Action": -0.00013168594
                    },
                    {
                        ");": -0.0011484785
                    },
                    {
                        "\n": -0.007938484
                    },
                    {
                        "                  ": -0.0058620833
                    },
                    {
                        " List": -0.11109894
                    },
                    {
                        "<": -0.00039437588
                    },
                    {
                        "Parameter": -0.0008176436
                    },
                    {
                        "Value": -5.4194657e-05
                    },
                    {
                        ">": -5.675771e-06
                    },
                    {
                        " parameters": -0.0036546825
                    },
                    {
                        " =": -0.001318025
                    },
                    {
                        " step": -0.009330049
                    },
                    {
                        ".": -0.00013478725
                    },
                    {
                        "get": -8.161453e-05
                    },
                    {
                        "Parameters": -5.956092e-05
                    },
                    {
                        "();": -0.0008429984
                    },
                    {
                        "\n": -0.0025688175
                    },
                    {
                        "                  ": -0.0047383104
                    },
                    {
                        " if": -0.026958387
                    },
                    {
                        " (": -0.015011328
                    },
                    {
                        "param": -0.0041658813
                    },
                    {
                        "eters": -1.37819625e-05
                    },
                    {
                        " !=": -0.005422766
                    },
                    {
                        " null": -0.0004953888
                    },
                    {
                        ")": -0.014347013
                    },
                    {
                        " {": -0.0003563333
                    },
                    {
                        "\n": -0.0015034789
                    },
                    {
                        "                      ": -0.004648602
                    },
                    {
                        " parameters": -0.014010276
                    },
                    {
                        " =": -0.0010001989
                    },
                    {
                        " complete": -0.0032101122
                    },
                    {
                        "Default": -0.0001270368
                    },
                    {
                        "Parameters": -3.7863996e-05
                    },
                    {
                        "(": -0.0008965109
                    },
                    {
                        "param": -0.0026817098
                    },
                    {
                        "eters": -9.72699e-06
                    },
                    {
                        ",": -0.0008660254
                    },
                    {
                        " project": -0.26821372
                    },
                    {
                        ");": -0.0012827506
                    },
                    {
                        "\n": -0.0016938034
                    },
                    {
                        "                      ": -0.0025467086
                    },
                    {
                        " actions": -0.0151354335
                    },
                    {
                        ".": -9.925743e-05
                    },
                    {
                        "add": -1.1514188e-05
                    },
                    {
                        "(": -0.00022039504
                    },
                    {
                        "new": -0.00098606
                    },
                    {
                        " Parameters": -0.00037791664
                    },
                    {
                        "Action": -8.5358415e-06
                    },
                    {
                        "(": -5.6340414e-05
                    },
                    {
                        "param": -0.0015385778
                    },
                    {
                        "eters": -2.1889093e-05
                    },
                    {
                        "));": -0.00033200442
                    },
                    {
                        "\n": -0.0012255172
                    },
                    {
                        "                  ": -0.0032379206
                    },
                    {
                        " }": -5.669991e-05
                    },
                    {
                        "\n": -0.012617248
                    },
                    {
                        "                  ": -0.0083111655
                    },
                    {
                        " Integer": -0.17630151
                    },
                    {
                        " quiet": -0.0006500334
                    },
                    {
                        "Per": -9.0795475e-05
                    },
                    {
                        "iod": -2.3675353e-05
                    },
                    {
                        " =": -0.0024466186
                    },
                    {
                        " step": -0.0024913142
                    },
                    {
                        ".": -6.635395e-05
                    },
                    {
                        "get": -0.00012882493
                    },
                    {
                        "Qu": -4.8353428e-05
                    },
                    {
                        "iet": -1.7400124e-06
                    },
                    {
                        "Per": -3.2906587e-06
                    },
                    {
                        "iod": -1.8601542e-06
                    },
                    {
                        "();": -0.00223835
                    },
                    {
                        "\n": -0.0016286067
                    },
                    {
                        "                  ": -0.0029069313
                    },
                    {
                        " if": -0.029286418
                    },
                    {
                        " (": -0.003367331
                    },
                    {
                        "quiet": -0.0015455042
                    },
                    {
                        "Per": -3.7684315e-06
                    },
                    {
                        "iod": -1.7400124e-06
                    },
                    {
                        " ==": -0.0086545255
                    },
                    {
                        " null": -0.00018712736
                    },
                    {
                        ")": -0.006948338
                    },
                    {
                        " {": -0.00080619013
                    },
                    {
                        "\n": -0.00061347015
                    },
                    {
                        "                      ": -0.0026160297
                    },
                    {
                        " quiet": -0.034864932
                    },
                    {
                        "Per": -1.5006569e-06
                    },
                    {
                        "iod": -2.3360508e-06
                    },
                    {
                        " =": -0.0004602654
                    },
                    {
                        " project": -0.0255309
                    },
                    {
                        ".": -0.0015372656
                    },
                    {
                        "get": -0.00015946814
                    },
                    {
                        "Qu": -0.00013657632
                    },
                    {
                        "iet": -9.012677e-06
                    },
                    {
                        "Per": -0.00021729656
                    },
                    {
                        "iod": -7.8540467e-07
                    },
                    {
                        "();": -0.00027625792
                    },
                    {
                        "\n": -0.00075047655
                    },
                    {
                        "                  ": -0.0024689678
                    },
                    {
                        " }": -2.1051823e-05
                    },
                    {
                        "\n": -0.0126886
                    },
                    {
                        "                  ": -0.011627264
                    },
                    {
                        " Que": -0.30022827
                    },
                    {
                        "ue": -3.529076e-06
                    },
                    {
                        "Task": -0.007487763
                    },
                    {
                        "Future": -1.2351458e-05
                    },
                    {
                        "<?": -0.00715729
                    },
                    {
                        ">": -0.001527772
                    },
                    {
                        " f": -0.024189234
                    },
                    {
                        " =": -0.0056399712
                    },
                    {
                        " project": -0.09643355
                    },
                    {
                        ".": -0.0028423108
                    },
                    {
                        "sche": -0.00012679932
                    },
                    {
                        "dule": -2.3360508e-06
                    },
                    {
                        "Build": -8.5358415e-06
                    },
                    {
                        "2": -0.01130283
                    },
                    {
                        "(": -0.00030368532
                    },
                    {
                        "quiet": -0.014225727
                    },
                    {
                        "Per": -7.8540467e-07
                    },
                    {
                        "iod": -1.3823812e-06
                    },
                    {
                        ",": -0.0032808555
                    },
                    {
                        " actions": -0.13782834
                    },
                    {
                        ".": -0.0034686492
                    },
                    {
                        "to": -0.00023023302
                    },
                    {
                        "Array": -7.698572e-06
                    },
                    {
                        "(": -0.00011630989
                    },
                    {
                        "new": -0.00080141716
                    },
                    {
                        " Action": -0.0003244323
                    },
                    {
                        "[": -0.0012789923
                    },
                    {
                        "actions": -0.005495343
                    },
                    {
                        ".": -0.0002519309
                    },
                    {
                        "size": -1.5214344e-05
                    },
                    {
                        "()": -5.312365e-05
                    },
                    {
                        "])": -0.0009699528
                    },
                    {
                        ");": -0.00046336767
                    },
                    {
                        "\n": -0.0039050158
                    },
                    {
                        "                  ": -0.002286621
                    },
                    {
                        " if": -0.0073039
                    },
                    {
                        " (": -0.007388863
                    },
                    {
                        "f": -0.0027739312
                    },
                    {
                        " ==": -0.007971226
                    },
                    {
                        " null": -0.00012858746
                    },
                    {
                        ")": -0.0018861956
                    },
                    {
                        " {": -0.0011160753
                    },
                    {
                        "\n": -0.000792652
                    },
                    {
                        "                      ": -0.0012312467
                    },
                    {
                        " throw": -0.005791698
                    },
                    {
                        " new": -4.0246297e-05
                    },
                    {
                        " Ab": -0.001197293
                    },
                    {
                        "ort": -2.3360508e-06
                    },
                    {
                        "Exception": -8.209043e-05
                    },
                    {
                        "(\"": -0.0017433002
                    },
                    {
                        "F": -0.003247188
                    },
                    {
                        "ailed": -1.5094201e-05
                    },
                    {
                        " to": -7.8038276e-05
                    },
                    {
                        " trigger": -0.013120128
                    },
                    {
                        " build": -0.0019763098
                    },
                    {
                        " of": -0.0023740863
                    },
                    {
                        " \"": -0.0013658915
                    },
                    {
                        " +": -0.000246207
                    },
                    {
                        " project": -0.014072235
                    },
                    {
                        ".": -0.0007090229
                    },
                    {
                        "get": -4.0009756e-05
                    },
                    {
                        "Full": -0.0013082369
                    },
                    {
                        "Name": -0.009719144
                    },
                    {
                        "());": -0.00038733694
                    },
                    {
                        "\n": -0.00051960035
                    },
                    {
                        "                  ": -0.0008501566
                    },
                    {
                        " }": -4.2631407e-05
                    },
                    {
                        "\n": -0.053246796
                    },
                    {
                        "              ": -0.2545014
                    },
                    {
                        " }": -0.0044609467
                    },
                    {
                        " else": -0.86347467
                    },
                    {
                        " {": -0.17693882
                    },
                    {
                        "\n": -0.012607953
                    },
                    {
                        "                  ": -0.068177596
                    },
                    {
                        " throw": -0.9285989
                    },
                    {
                        "GER": -0.00013919984
                    },
                    {
                        ".": -0.00038590643
                    },
                    {
                        "log": -0.15955554
                    },
                    {
                        "(": -0.00038101888
                    },
                    {
                        "Level": -0.0136462785
                    },
                    {
                        ".": -0.00013443055
                    },
                    {
                        "WARNING": -0.6556955
                    },
                    {
                        ",": -0.02808424
                    },
                    {
                        " \"": -0.1603384
                    },
                    {
                        "S": -2.435964
                    },
                    {
                        "ing": -0.15750855
                    },
                    {
                        " a": -1.3225229
                    },
                    {
                        "-": -0.038785085
                    },
                    {
                        "job": -0.5568565
                    },
                    {
                        " item": -0.852286
                    },
                    {
                        " {": -0.38804236
                    },
                    {
                        "0": -0.0022850665
                    },
                    {
                        "}": -0.041758146
                    },
                    {
                        "\",": -0.723497
                    },
                    {
                        " waiting": -0.10418493
                    },
                    {
                        "\",": -0.64754
                    },
                    {
                        " item": -0.35119206
                    },
                    {
                        ".": -0.48533538
                    },
                    {
                        "get": -0.0019481841
                    },
                    {
                        "Full": -0.11650773
                    },
                    {
                        "Name": -0.035813145
                    },
                    {
                        "());": -0.0009973361
                    },
                    {
                        "\n": -0.008192471
                    },
                    {
                        "                  ": -0.69921243
                    },
                    {
                        " if": -1.2726922
                    },
                    {
                        " (": -0.29187003
                    },
                    {
                        "item": -0.27326524
                    },
                    {
                        " instance": -0.01447261
                    },
                    {
                        "of": -2.6060465e-05
                    },
                    {
                        " Que": -0.48558635
                    },
                    {
                        "ue": -0.00013097163
                    },
                    {
                        ".": -0.001824808
                    },
                    {
                        "Task": -0.007865369
                    },
                    {
                        ")": -0.029618332
                    },
                    {
                        " {": -0.001179331
                    },
                    {
                        "\n": -0.004523514
                    },
                    {
                        "                      ": -0.0090799825
                    },
                    {
                        " Que": -0.36959535
                    },
                    {
                        "ue": -1.9028084e-05
                    },
                    {
                        ".": -0.03834271
                    },
                    {
                        "Task": -0.0031635347
                    },
                    {
                        " task": -0.055647884
                    },
                    {
                        " =": -0.0018418237
                    },
                    {
                        " (": -0.0023360879
                    },
                    {
                        "Queue": -0.0010531849
                    },
                    {
                        ".": -6.2699432e-06
                    },
                    {
                        "Task": -9.130952e-06
                    },
                    {
                        ")": -5.550595e-05
                    },
                    {
                        " item": -0.008189284
                    },
                    {
                        ";": -0.00024930926
                    },
                    {
                        "\n": -0.004123508
                    },
                    {
                        "                      ": -0.003842126
                    },
                    {
                        " String": -0.51779926
                    },
                    {
                        " item": -0.23940246
                    },
                    {
                        "Enc": -0.0063435785
                    },
                    {
                        "oded": -0.00010068981
                    },
                    {
                        " =": -0.0009955469
                    },
                    {
                        " Model": -0.0038778484
                    },
                    {
                        "Hyper": -9.966347e-06
                    },
                    {
                        "link": -3.051303e-06
                    },
                    {
                        "Note": -0.00010355082
                    },
                    {
                        ".": -7.255186e-05
                    },
                    {
                        "en": -3.7386224e-05
                    },
                    {
                        "code": -1.3542607e-05
                    },
                    {
                        "To": -2.6538237e-05
                    },
                    {
                        "(": -0.0003848345
                    },
                    {
                        "item": -0.06790989
                    },
                    {
                        ");": -0.0002694602
                    },
                    {
                        "\n": -0.0015748754
                    },
                    {
                        "                      ": -0.0010864197
                    },
                    {
                        " listener": -0.012342218
                    },
                    {
                        ".": -4.608659e-05
                    },
                    {
                        "get": -9.0198504e-05
                    },
                    {
                        "Log": -1.6642034e-05
                    },
                    {
                        "ger": -9.055464e-07
                    },
                    {
                        "().": -0.00020107947
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6498,
                    6502,
                    6503,
                    6506,
                    6510,
                    6513,
                    6515,
                    6516,
                    6530,
                    6533,
                    6535,
                    6539,
                    6548,
                    6550,
                    6554,
                    6555,
                    6557,
                    6558,
                    6576,
                    6582,
                    6586,
                    6594,
                    6596,
                    6598,
                    6601,
                    6602,
                    6607,
                    6608,
                    6609,
                    6627,
                    6636,
                    6637,
                    6640,
                    6643,
                    6646,
                    6649,
                    6656,
                    6658,
                    6659,
                    6663,
                    6668,
                    6676,
                    6677,
                    6679,
                    6681,
                    6687,
                    6692,
                    6696,
                    6700,
                    6701,
                    6703,
                    6707,
                    6709,
                    6710,
                    6717,
                    6720,
                    6721,
                    6739,
                    6744,
                    6745,
                    6748,
                    6754,
                    6755,
                    6758,
                    6764,
                    6770,
                    6771,
                    6775,
                    6779,
                    6780,
                    6785,
                    6792,
                    6796,
                    6800,
                    6805,
                    6806,
                    6814,
                    6816,
                    6823,
                    6824,
                    6827,
                    6831,
                    6838,
                    6842,
                    6844,
                    6846,
                    6848,
                    6849,
                    6867,
                    6872,
                    6873,
                    6879,
                    6880,
                    6888,
                    6890,
                    6894,
                    6900,
                    6904,
                    6905,
                    6906,
                    6909,
                    6910,
                    6928,
                    6934,
                    6935,
                    6937,
                    6943,
                    6948,
                    6954,
                    6956,
                    6960,
                    6966,
                    6967,
                    6969,
                    6975,
                    6980,
                    6981,
                    6984,
                    6989,
                    6992,
                    6994,
                    6995,
                    7013,
                    7019,
                    7025,
                    7031,
                    7037,
                    7039,
                    7043,
                    7049,
                    7055,
                    7056,
                    7061,
                    7063,
                    7064,
                    7082,
                    7090,
                    7091,
                    7094,
                    7095,
                    7100,
                    7106,
                    7108,
                    7109,
                    7127,
                    7132,
                    7133,
                    7142,
                    7147,
                    7148,
                    7159,
                    7161,
                    7166,
                    7167,
                    7170,
                    7180,
                    7183,
                    7184,
                    7202,
                    7205,
                    7207,
                    7212,
                    7217,
                    7220,
                    7225,
                    7226,
                    7228,
                    7229,
                    7251,
                    7262,
                    7264,
                    7273,
                    7280,
                    7290,
                    7291,
                    7296,
                    7301,
                    7302,
                    7310,
                    7312,
                    7313,
                    7335,
                    7343,
                    7344,
                    7347,
                    7348,
                    7351,
                    7362,
                    7368,
                    7369,
                    7374,
                    7379,
                    7382,
                    7383,
                    7401,
                    7403,
                    7404,
                    7422,
                    7430,
                    7436,
                    7439,
                    7442,
                    7444,
                    7449,
                    7450,
                    7453,
                    7455,
                    7458,
                    7461,
                    7464,
                    7467,
                    7468,
                    7486,
                    7489,
                    7491,
                    7496,
                    7499,
                    7502,
                    7505,
                    7510,
                    7511,
                    7513,
                    7514,
                    7536,
                    7542,
                    7545,
                    7548,
                    7550,
                    7558,
                    7559,
                    7562,
                    7564,
                    7567,
                    7570,
                    7573,
                    7576,
                    7577,
                    7595,
                    7597,
                    7598,
                    7616,
                    7620,
                    7622,
                    7626,
                    7632,
                    7634,
                    7635,
                    7637,
                    7639,
                    7647,
                    7648,
                    7652,
                    7656,
                    7661,
                    7662,
                    7663,
                    7668,
                    7671,
                    7674,
                    7675,
                    7683,
                    7684,
                    7686,
                    7691,
                    7692,
                    7695,
                    7702,
                    7703,
                    7710,
                    7711,
                    7715,
                    7717,
                    7719,
                    7721,
                    7722,
                    7740,
                    7743,
                    7745,
                    7746,
                    7749,
                    7754,
                    7755,
                    7757,
                    7758,
                    7780,
                    7786,
                    7790,
                    7793,
                    7796,
                    7805,
                    7807,
                    7808,
                    7813,
                    7816,
                    7824,
                    7830,
                    7833,
                    7835,
                    7837,
                    7845,
                    7846,
                    7849,
                    7853,
                    7857,
                    7861,
                    7862,
                    7880,
                    7882,
                    7883,
                    7897,
                    7899,
                    7904,
                    7906,
                    7907,
                    7925,
                    7929,
                    7932,
                    7933,
                    7936,
                    7937,
                    7942,
                    7943,
                    7947,
                    7948,
                    7950,
                    7957,
                    7960,
                    7964,
                    7965,
                    7968,
                    7973,
                    7975,
                    7976,
                    7977,
                    7985,
                    7993,
                    7995,
                    8000,
                    8001,
                    8004,
                    8008,
                    8012,
                    8016,
                    8017,
                    8035,
                    8038,
                    8040,
                    8044,
                    8053,
                    8055,
                    8059,
                    8061,
                    8062,
                    8066,
                    8067,
                    8069,
                    8070,
                    8092,
                    8096,
                    8098,
                    8099,
                    8103,
                    8108,
                    8110,
                    8112,
                    8117,
                    8118,
                    8122,
                    8123,
                    8128,
                    8129,
                    8130,
                    8152,
                    8159,
                    8164,
                    8167,
                    8171,
                    8173,
                    8179,
                    8184,
                    8188,
                    8192,
                    8193,
                    8195,
                    8199,
                    8201,
                    8202,
                    8206,
                    8208,
                    8209,
                    8231,
                    8240,
                    8241,
                    8244,
                    8247,
                    8250
                ]
            },
            "finish_reason": "length"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               LOGGER.log(Level.FINER, \"Triggering {0} from {1}\", new Object[]{item, getContext()});\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "Trigger",
                    "ing",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "item",
                    ",",
                    " get",
                    "Context",
                    "()",
                    "});",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    ".",
                    "android"
                ],
                "token_logprobs": [
                    -0.0038316557,
                    -0.0710014,
                    -0.070167646,
                    -0.45671242,
                    -0.203658,
                    -0.018374886,
                    -9.055464e-07,
                    -0.0012719505,
                    -0.00024787875,
                    -0.19065706,
                    -0.12163268,
                    -0.15780506,
                    -0.032850046,
                    -0.018667918,
                    -1.9028084e-05,
                    -0.43832693,
                    -0.55637306,
                    -0.08766093,
                    -0.24398504,
                    -0.041517664,
                    -0.0063201236,
                    -8.653179e-06,
                    -0.19380176,
                    -2.9280032e-05,
                    -0.0014812093,
                    -0.0013081167,
                    -0.3063318,
                    -0.094829105,
                    -0.07192226,
                    -0.74547684,
                    -2.3203506,
                    -0.00026791144,
                    -0.00024429872,
                    -0.0555649,
                    -0.00029867573,
                    -0.0044719023,
                    -9.985534e-05,
                    -1.3541051,
                    -3.7743856e-05,
                    -0.036483794,
                    -0.03886384,
                    -2.4467454,
                    -0.03235095,
                    -0.88849354,
                    -0.0031044576,
                    -0.013632625,
                    -1.2813749,
                    -0.07887935,
                    -0.003011188,
                    -0.010426168,
                    -0.06905633,
                    -0.010704106,
                    -0.0022986291,
                    -0.0002395332,
                    -0.14060612,
                    -0.22884564,
                    -0.15390964,
                    -0.18468003,
                    -0.0026338978,
                    -0.016999904,
                    -0.0037703873,
                    -0.019034538,
                    -0.62285066,
                    -1.4789077,
                    -0.7165235,
                    -0.0013946019,
                    -2.12476,
                    -0.009924642,
                    -3.3548083
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0038316557
                    },
                    {
                        "          ": -0.0710014
                    },
                    {
                        " if": -0.070167646
                    },
                    {
                        " (": -0.45671242
                    },
                    {
                        " !": -0.203658
                    },
                    {
                        "step": -0.018374886
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012719505
                    },
                    {
                        "Wait": -0.00024787875
                    },
                    {
                        "()": -0.19065706
                    },
                    {
                        " ||": -0.12163268
                    },
                    {
                        " (": -0.15780506
                    },
                    {
                        "item": -0.032850046
                    },
                    {
                        " instance": -0.018667918
                    },
                    {
                        "of": -1.9028084e-05
                    },
                    {
                        " Job": -0.43832693
                    },
                    {
                        ")": -0.55637306
                    },
                    {
                        " ||": -0.08766093
                    },
                    {
                        " (": -0.24398504
                    },
                    {
                        "item": -0.041517664
                    },
                    {
                        " instance": -0.0063201236
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19380176
                    },
                    {
                        "ue": -2.9280032e-05
                    },
                    {
                        ".": -0.0014812093
                    },
                    {
                        "Task": -0.0013081167
                    },
                    {
                        "))": -0.3063318
                    },
                    {
                        " {": -0.094829105
                    },
                    {
                        "\n": -0.07192226
                    },
                    {
                        "              ": -0.74547684
                    },
                    {
                        " Run": -1.8930331
                    },
                    {
                        "GER": -0.00026791144
                    },
                    {
                        ".": -0.00024429872
                    },
                    {
                        "log": -0.0555649
                    },
                    {
                        "(": -0.00029867573
                    },
                    {
                        "Level": -0.0044719023
                    },
                    {
                        ".": -9.985534e-05
                    },
                    {
                        "FINE": -0.6852304
                    },
                    {
                        "ER": -3.7743856e-05
                    },
                    {
                        ",": -0.036483794
                    },
                    {
                        " \"": -0.03886384
                    },
                    {
                        "sc": -1.9079909
                    },
                    {
                        "ing": -0.03235095
                    },
                    {
                        " {": -0.88849354
                    },
                    {
                        "0": -0.0031044576
                    },
                    {
                        "}": -0.013632625
                    },
                    {
                        "\",": -0.5798977
                    },
                    {
                        " {": -0.07887935
                    },
                    {
                        "1": -0.003011188
                    },
                    {
                        "}": -0.010426168
                    },
                    {
                        "\",": -0.06905633
                    },
                    {
                        " new": -0.010704106
                    },
                    {
                        " Object": -0.0022986291
                    },
                    {
                        "[]": -0.0002395332
                    },
                    {
                        "{": -0.14060612
                    },
                    {
                        "item": -0.22884564
                    },
                    {
                        ",": -0.15390964
                    },
                    {
                        " get": -0.18468003
                    },
                    {
                        "Context": -0.0026338978
                    },
                    {
                        "()": -0.016999904
                    },
                    {
                        "});": -0.0037703873
                    },
                    {
                        "\n": -0.019034538
                    },
                    {
                        "<|endoftext|>": -0.62285066
                    },
                    {
                        "package": -1.4789077
                    },
                    {
                        " com": -0.7165235
                    },
                    {
                        ".": -0.0013946019
                    },
                    {
                        "example": -2.12476
                    },
                    {
                        ".": -0.009924642
                    },
                    {
                        "dem": -2.710224
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6595,
                    6596,
                    6599,
                    6600,
                    6605,
                    6606,
                    6609,
                    6611,
                    6612,
                    6614,
                    6621,
                    6624,
                    6626,
                    6627,
                    6628,
                    6633,
                    6635,
                    6636,
                    6637,
                    6639,
                    6643,
                    6650,
                    6652,
                    6653,
                    6657,
                    6658,
                    6662,
                    6669,
                    6671,
                    6674,
                    6675,
                    6675,
                    6675,
                    6675,
                    6675,
                    6675,
                    6675
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 1393,
        "completion_tokens": 1444,
        "total_tokens": 2837
    },
    "validation_result": [
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Node node = executingNode();\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if (step.getWait() || (item instanceof Job)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               if (step.getParameters() == null || step.getParameters().isEmpty()) {\n                   String itemEncoded = ModelHyperlinkNote.encodeTo(item);\n                   listener.getLogger().println(\"Scheduling item: \" + itemEncoded);\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(item.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate ));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{item, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       try {\n                           Class itemClass = item.getClass();\n                           Method getQuietPeriod = itemClass.getMethod(\"getQuietPeriod\");\n                           Class returnType  = getQuietPeriod.getReturnType();\n                           if (returnType.equals(int.class)) {\n                               quietPeriod = (Integer) getQuietPeriod.invoke(item);\n                           }\n                       } catch (NoSuchMethodException e) {\n                       } catch (",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               listener.getLogger().println(\"Scheduling build of \" + job);\n               FlowNode node = getContext().get(FlowNode.class);\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait()) {\n",
            "correctness": "test_timeout"
        },
        {
            "patch": "           if (!step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               Run lastBuild = null;\n               if (step.getLastBuild()) {\n                   lastBuild = ((Job) item).getLastBuild();\n               }\n               if (lastBuild == null) {\n                   lastBuild = ((Job) item).getLastSuccessfulBuild();\n               }\n               if (lastBuild != null) {\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(lastBuild));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(lastBuild.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<Action>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context, isPropagate));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{lastBuild, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = Jenkins.getActiveInstance().getQuietPeriod();\n                   }\n                   boolean b = lastBuild.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (!b) {\n                       throw new AbortException(\"",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if (!step.getWait()) {\n               if (item instanceof Job) {\n                   final Job project = (Job) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n                       throw new AbortException(\"Failed to trigger build of \" + project.getFullName());\n                   }\n               } else {\n                   LOGGER.log(Level.FINE, \"Triggering non-job item {0} without waiting\", item.getFullName());\n                   if (item instanceof Queue.Task) {\n                       Queue.Task task = (Queue.Task) item;\n                       String itemEncoded = ModelHyperlinkNote.encodeTo(item);\n                       listener.getLogger().",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               LOGGER.log(Level.FINER, \"Triggering {0} from {1}\", new Object[]{item, getContext()});\n",
            "correctness": "compile_success"
        }
    ]
}