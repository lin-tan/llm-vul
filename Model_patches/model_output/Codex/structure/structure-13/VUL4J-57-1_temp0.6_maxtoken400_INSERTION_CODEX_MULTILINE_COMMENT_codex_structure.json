{
    "id": "cmpl-6lZ4VeMRZO8NYESphcHoRCUN6c5DI",
    "object": "text_completion",
    "created": 1676794251,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "q",
                    "f",
                    ".",
                    "j"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -0.47959396,
                    -0.5727739,
                    -0.085422315,
                    -0.24215469,
                    -0.041222338,
                    -0.0062189396,
                    -8.653179e-06,
                    -0.19180082,
                    -2.880226e-05,
                    -0.0014661076,
                    -0.0012868103,
                    -0.3062643,
                    -0.09595371,
                    -0.07170804,
                    -0.8627463,
                    -1.4718992,
                    -0.71478736,
                    -0.0013774115,
                    -5.1968007,
                    -2.1015778,
                    -0.287072,
                    -2.9367647
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        ")": -0.5727739
                    },
                    {
                        " ||": -0.085422315
                    },
                    {
                        " (": -0.24215469
                    },
                    {
                        "item": -0.041222338
                    },
                    {
                        " instance": -0.0062189396
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19180082
                    },
                    {
                        "ue": -2.880226e-05
                    },
                    {
                        ".": -0.0014661076
                    },
                    {
                        "Task": -0.0012868103
                    },
                    {
                        "))": -0.3062643
                    },
                    {
                        " {": -0.09595371
                    },
                    {
                        "\n": -0.07170804
                    },
                    {
                        "              ": -0.7412891
                    },
                    {
                        "package": -1.4718992
                    },
                    {
                        " com": -0.71478736
                    },
                    {
                        ".": -0.0013774115
                    },
                    {
                        "example": -2.126824
                    },
                    {
                        "f": -2.1015778
                    },
                    {
                        ".": -0.287072
                    },
                    {
                        "service": -2.0397444
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               listener.getLogger().println(\"Triggering a new build of \" + job);\n               Node node = invokingRun.getExecutor().getOwner().getNode();\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Param",
                    "eter",
                    "ized",
                    "Job",
                    "Mix",
                    "In",
                    ".",
                    "Parameter",
                    "ized",
                    "Job",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "Trigger",
                    "ing",
                    " a",
                    " new",
                    " build",
                    " of",
                    " \"",
                    " +",
                    " job",
                    ");",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " invoking",
                    "Run",
                    ".",
                    "get",
                    "Exec",
                    "utor",
                    "().",
                    "get",
                    "Owner",
                    "().",
                    "get",
                    "Node",
                    "();",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -1.7044857,
                    -7.326899e-05,
                    -0.00081406545,
                    -0.0002983181,
                    -0.040139355,
                    -0.00064180145,
                    -0.0042576445,
                    -4.8353428e-05,
                    -6.885639e-05,
                    -8.531094e-05,
                    -0.4049005,
                    -0.03837114,
                    -0.059355028,
                    -0.7498303,
                    -3.078284,
                    -0.07264664,
                    -0.006545085,
                    -1.9980816e-05,
                    -2.7728449e-05,
                    -0.0005427982,
                    -0.072314054,
                    -0.100618735,
                    -1.4028044,
                    -0.014068728,
                    -0.04646724,
                    -0.002353114,
                    -0.0021738939,
                    -0.0045072283,
                    -0.04008761,
                    -0.005877967,
                    -1.2048082,
                    -0.0961312,
                    -0.021715261,
                    -0.5289234,
                    -1.3155547,
                    -0.005898714,
                    -0.015737358,
                    -1.9340206,
                    -0.032570448,
                    -0.011112296,
                    -0.0015952329,
                    -0.57831174,
                    -5.860725e-05,
                    -0.0089953,
                    -0.0014344739,
                    -0.02289852,
                    -0.19798507,
                    -0.012397679,
                    -0.00060226076,
                    -0.0018288685,
                    -0.016308095,
                    -0.31546253,
                    -1.4727023,
                    -0.71815395
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        "eter": -7.326899e-05
                    },
                    {
                        "ized": -0.00081406545
                    },
                    {
                        "Job": -0.0002983181
                    },
                    {
                        "Mix": -0.040139355
                    },
                    {
                        "In": -0.00064180145
                    },
                    {
                        ".": -0.0042576445
                    },
                    {
                        "Parameter": -4.8353428e-05
                    },
                    {
                        "ized": -6.885639e-05
                    },
                    {
                        "Job": -8.531094e-05
                    },
                    {
                        "))": -0.4049005
                    },
                    {
                        " {": -0.03837114
                    },
                    {
                        "\n": -0.059355028
                    },
                    {
                        "              ": -0.7498303
                    },
                    {
                        " Run": -2.007511
                    },
                    {
                        ".": -0.07264664
                    },
                    {
                        "get": -0.006545085
                    },
                    {
                        "Log": -1.9980816e-05
                    },
                    {
                        "ger": -2.7728449e-05
                    },
                    {
                        "().": -0.0005427982
                    },
                    {
                        "println": -0.072314054
                    },
                    {
                        "(\"": -0.100618735
                    },
                    {
                        "S": -1.0272903
                    },
                    {
                        "ing": -0.014068728
                    },
                    {
                        " a": -0.04646724
                    },
                    {
                        " new": -0.002353114
                    },
                    {
                        " build": -0.0021738939
                    },
                    {
                        " of": -0.0045072283
                    },
                    {
                        " \"": -0.04008761
                    },
                    {
                        " +": -0.005877967
                    },
                    {
                        " Model": -0.7621021
                    },
                    {
                        ");": -0.0961312
                    },
                    {
                        "\n": -0.021715261
                    },
                    {
                        "              ": -0.5289234
                    },
                    {
                        " Node": -1.3155547
                    },
                    {
                        " node": -0.005898714
                    },
                    {
                        " =": -0.015737358
                    },
                    {
                        " Exec": -1.5081307
                    },
                    {
                        "Run": -0.032570448
                    },
                    {
                        ".": -0.011112296
                    },
                    {
                        "get": -0.0015952329
                    },
                    {
                        "Exec": -0.57831174
                    },
                    {
                        "utor": -5.860725e-05
                    },
                    {
                        "().": -0.0089953
                    },
                    {
                        "get": -0.0014344739
                    },
                    {
                        "Owner": -0.02289852
                    },
                    {
                        "().": -0.19798507
                    },
                    {
                        "get": -0.012397679
                    },
                    {
                        "Node": -0.00060226076
                    },
                    {
                        "();": -0.0018288685
                    },
                    {
                        "\n": -0.016308095
                    },
                    {
                        "<|endoftext|>": -0.31546253
                    },
                    {
                        "package": -1.4727023
                    },
                    {
                        " com": -0.71815395
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6539,
                    6543,
                    6547,
                    6550,
                    6553,
                    6555,
                    6556,
                    6565,
                    6569,
                    6572,
                    6574,
                    6576,
                    6577,
                    6591,
                    6600,
                    6601,
                    6604,
                    6607,
                    6610,
                    6613,
                    6620,
                    6622,
                    6629,
                    6632,
                    6634,
                    6638,
                    6644,
                    6647,
                    6649,
                    6651,
                    6655,
                    6657,
                    6658,
                    6672,
                    6677,
                    6682,
                    6684,
                    6693,
                    6696,
                    6697,
                    6700,
                    6704,
                    6708,
                    6711,
                    6714,
                    6719,
                    6722,
                    6725,
                    6729,
                    6732,
                    6733,
                    6733,
                    6733
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if (!step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               \n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (!",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    " ||",
                    " item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "               ",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -1.7171063,
                    -0.114027485,
                    -3.529076e-06,
                    -0.0019697421,
                    -0.0003218097,
                    -0.47425473,
                    -0.15260273,
                    -0.21747202,
                    -0.026813094,
                    -0.017362697,
                    -1.6521892e-05,
                    -0.44787234,
                    -2.1631796,
                    -0.22389579,
                    -0.014837874,
                    -1.843017e-05,
                    -0.2218124,
                    -3.3809963e-05,
                    -0.001509568,
                    -0.0018519762,
                    -0.2616018,
                    -0.07545234,
                    -0.06313478,
                    -3.0089507,
                    -0.3328433,
                    -0.7491907
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        "step": -0.114027485
                    },
                    {
                        ".": -3.529076e-06
                    },
                    {
                        "get": -0.0019697421
                    },
                    {
                        "Wait": -0.0003218097
                    },
                    {
                        "()": -0.47425473
                    },
                    {
                        " ||": -0.15260273
                    },
                    {
                        " (": -0.21747202
                    },
                    {
                        "item": -0.026813094
                    },
                    {
                        " instance": -0.017362697
                    },
                    {
                        "of": -1.6521892e-05
                    },
                    {
                        " Job": -0.44787234
                    },
                    {
                        ")": -0.6990999
                    },
                    {
                        " item": -0.22389579
                    },
                    {
                        " instance": -0.014837874
                    },
                    {
                        "of": -1.843017e-05
                    },
                    {
                        " Que": -0.2218124
                    },
                    {
                        "ue": -3.3809963e-05
                    },
                    {
                        ".": -0.001509568
                    },
                    {
                        "Task": -0.0018519762
                    },
                    {
                        "))": -0.2616018
                    },
                    {
                        " {": -0.07545234
                    },
                    {
                        "\n": -0.06313478
                    },
                    {
                        "              ": -0.6902768
                    },
                    {
                        "\n": -0.3328433
                    },
                    {
                        "<|endoftext|>": -0.7491907
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6498,
                    6502,
                    6503,
                    6506,
                    6510,
                    6512,
                    6515,
                    6517,
                    6521,
                    6530,
                    6532,
                    6536,
                    6539,
                    6544,
                    6553,
                    6555,
                    6559,
                    6561,
                    6562,
                    6566,
                    6568,
                    6570,
                    6571,
                    6586,
                    6587
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() ) {\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " )",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "/*",
                    "\n",
                    " *",
                    " Copyright",
                    " (",
                    "C",
                    ")"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -2.5494416,
                    -0.044385362,
                    -0.06387204,
                    -0.5649428,
                    -2.6382296,
                    -0.35721204,
                    -0.2184357,
                    -1.0670252,
                    -0.6057115,
                    -0.8468578,
                    -0.0026521855
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " {": -0.044385362
                    },
                    {
                        "\n": -0.06387204
                    },
                    {
                        "<|endoftext|>": -0.5649428
                    },
                    {
                        "package": -1.469207
                    },
                    {
                        "\n": -0.35721204
                    },
                    {
                        " *": -0.2184357
                    },
                    {
                        " Copyright": -1.0670252
                    },
                    {
                        " (": -0.6057115
                    },
                    {
                        "c": -0.56078035
                    },
                    {
                        ")": -0.0026521855
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6515,
                    6517,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "<?",
                    "php",
                    "\n",
                    "/**",
                    "\n",
                    " *",
                    " Created"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -0.47959396,
                    -0.5727739,
                    -0.085422315,
                    -0.24215469,
                    -0.041222338,
                    -0.0062189396,
                    -8.653179e-06,
                    -0.19180082,
                    -2.880226e-05,
                    -0.0014661076,
                    -0.0012868103,
                    -0.3062643,
                    -0.09595371,
                    -0.07170804,
                    -0.8627463,
                    -2.400154,
                    -0.025697356,
                    -0.15493114,
                    -1.97853,
                    -0.014122893,
                    -0.051049683,
                    -1.4601402
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        ")": -0.5727739
                    },
                    {
                        " ||": -0.085422315
                    },
                    {
                        " (": -0.24215469
                    },
                    {
                        "item": -0.041222338
                    },
                    {
                        " instance": -0.0062189396
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19180082
                    },
                    {
                        "ue": -2.880226e-05
                    },
                    {
                        ".": -0.0014661076
                    },
                    {
                        "Task": -0.0012868103
                    },
                    {
                        "))": -0.3062643
                    },
                    {
                        " {": -0.09595371
                    },
                    {
                        "\n": -0.07170804
                    },
                    {
                        "              ": -0.7412891
                    },
                    {
                        "package": -1.4718992
                    },
                    {
                        "php": -0.025697356
                    },
                    {
                        "\n": -0.15493114
                    },
                    {
                        "\n": -0.6545659
                    },
                    {
                        "\n": -0.014122893
                    },
                    {
                        " *": -0.051049683
                    },
                    {
                        " Created": -1.4601402
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) ) {\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " )",
                    " {",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -0.47959396,
                    -0.5727739,
                    -3.3045938,
                    -0.11580238,
                    -0.07491604,
                    -0.62026954
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        ")": -0.5727739
                    },
                    {
                        " ||": -0.085422315
                    },
                    {
                        " {": -0.11580238
                    },
                    {
                        "\n": -0.07491604
                    },
                    {
                        "<|endoftext|>": -0.62026954
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6540,
                    6542,
                    6543
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               if (item instanceof Job) {\n                   final Job<?, ?> project = (Job<?, ?>) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate ));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " final",
                    " Job",
                    "<",
                    "?,",
                    " ?",
                    ">",
                    " project",
                    " =",
                    " (",
                    "Job",
                    "<",
                    "?,",
                    " ?",
                    ">)",
                    " item",
                    ";",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " project",
                    ":",
                    " \"",
                    " +",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "project",
                    "));",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Label",
                    "Action",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "project",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "()",
                    "))",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Action",
                    ">",
                    " actions",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    ">",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "                      ",
                    " Step",
                    "Context",
                    " context",
                    " =",
                    " get",
                    "Context",
                    "();",
                    "\n",
                    "                      ",
                    " boolean",
                    " is",
                    "Prop",
                    "agate",
                    " =",
                    " ",
                    " step",
                    ".",
                    "is",
                    "Prop",
                    "agate",
                    "();",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Build",
                    "Trigger",
                    "Action",
                    "(",
                    "context",
                    ",",
                    "is",
                    "Prop",
                    "agate",
                    " ));",
                    "\n",
                    "                      ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "sc",
                    "hed",
                    "uling",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "project",
                    ",",
                    " context",
                    "});",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ");",
                    "\n",
                    "                  ",
                    " Cause",
                    "Action",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Cause",
                    "Action",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                  ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "cause",
                    "Action",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Parameter",
                    "Value",
                    ">",
                    " parameters",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Parameters",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "param",
                    "eters",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " parameters",
                    " =",
                    " complete",
                    "Default",
                    "Parameters",
                    "(",
                    "param",
                    "eters",
                    ",",
                    " project",
                    ");",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Parameters",
                    "Action",
                    "(",
                    "param",
                    "eters",
                    "));",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Integer",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "quiet",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " project",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Que",
                    "ue",
                    "Task",
                    "Future",
                    "<?",
                    ">",
                    " f",
                    " =",
                    " project",
                    ".",
                    "sche",
                    "dule",
                    "Build",
                    "2",
                    "(",
                    "quiet",
                    "Per",
                    "iod",
                    ",",
                    " actions",
                    ".",
                    "to",
                    "Array",
                    "(",
                    "new",
                    " Action",
                    "[",
                    "actions",
                    ".",
                    "size",
                    "()",
                    "])",
                    ");",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "f",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -0.47959396,
                    -0.5727739,
                    -0.085422315,
                    -0.24215469,
                    -0.041222338,
                    -0.0062214583,
                    -8.653179e-06,
                    -0.19120456,
                    -2.8682118e-05,
                    -0.0014651567,
                    -0.0012858557,
                    -0.30639377,
                    -0.09588404,
                    -0.07169216,
                    -0.737665,
                    -2.0302725,
                    -0.79720974,
                    -0.6921983,
                    -0.082350075,
                    -8.653179e-06,
                    -0.6103606,
                    -0.22084662,
                    -0.0030486165,
                    -0.014642734,
                    -0.024036404,
                    -0.67711025,
                    -0.036348477,
                    -1.4375495,
                    -0.0020611216,
                    -0.62632155,
                    -0.0011910858,
                    -0.03272502,
                    -0.00330615,
                    -0.013902809,
                    -0.0004489359,
                    -0.6050611,
                    -5.657977e-05,
                    -0.0473792,
                    -0.00013228387,
                    -0.010233513,
                    -0.00040415474,
                    -0.015116495,
                    -0.008410457,
                    -0.34428567,
                    -0.0005467358,
                    -0.00017103326,
                    -5.4364154e-06,
                    -8.296486e-06,
                    -0.00063452503,
                    -0.0019073942,
                    -0.01683465,
                    -0.0036539647,
                    -2.3675353e-05,
                    -0.00019499795,
                    -0.008685851,
                    -0.00035514025,
                    -0.0012628793,
                    -0.0013473288,
                    -0.079408556,
                    -2.5225998e-05,
                    -4.072407e-05,
                    -1.0800813e-05,
                    -0.00012369896,
                    -1.8073477e-05,
                    -2.0218295e-05,
                    -5.6460554e-05,
                    -0.0013116975,
                    -0.0052874554,
                    -0.009217131,
                    -0.0049710628,
                    -0.0034529783,
                    -0.03515296,
                    -0.0006316021,
                    -0.0001463533,
                    -6.5092986e-06,
                    -6.4446605e-05,
                    -0.0022111104,
                    -0.00045680837,
                    -8.1136764e-05,
                    -0.0006623194,
                    -0.0037712255,
                    -1.1039229e-05,
                    -5.7293146e-05,
                    -0.0013146825,
                    -0.00032622044,
                    -0.0015930224,
                    -0.0004934796,
                    -1.8668587e-05,
                    -3.4403198e-05,
                    -0.00087682175,
                    -0.00092079,
                    -0.00674303,
                    -0.0010385644,
                    -2.3078366e-05,
                    -0.0036577934,
                    -0.011068662,
                    -5.675771e-06,
                    -0.00031823252,
                    -0.0001532674,
                    -0.00020119963,
                    -0.011186009,
                    -0.0063592354,
                    -0.041626774,
                    -0.00050302286,
                    -0.0018107733,
                    -6.6294406e-06,
                    -0.0026148339,
                    -0.0010370156,
                    -0.0011001427,
                    -0.00024477651,
                    -5.5556293e-06,
                    -0.00022337619,
                    -0.031856168,
                    -6.0276172e-05,
                    -0.0034208004,
                    -0.0023059177,
                    -0.018198844,
                    -0.0047011813,
                    -0.0006064359,
                    -2.319758e-05,
                    -0.00044953197,
                    -0.0004605048,
                    -0.0020060537,
                    -0.0001244142,
                    -0.0017103433,
                    -0.0032666828,
                    -0.019619063,
                    -6.7427754e-05,
                    -0.0005579471,
                    -0.0003131028,
                    -0.00074713683,
                    -9.012677e-06,
                    -7.2672e-05,
                    -0.0012604914,
                    -0.0032696733,
                    -0.03875987,
                    -0.011408212,
                    -0.00096285285,
                    -0.0019966175,
                    -0.006711288,
                    -0.07350856,
                    -0.0008367939,
                    -2.1768952e-05,
                    -0.00038375973,
                    -2.6538237e-05,
                    -7.224551e-06,
                    -0.0011671558,
                    -0.004846594,
                    -0.0023006604,
                    -0.015362384,
                    -0.00011964774,
                    -9.251094e-06,
                    -7.5892516e-05,
                    -0.00405869,
                    -0.0007247106,
                    -0.00011809803,
                    -0.00013001703,
                    -0.0010556901,
                    -0.0045927917,
                    -0.0055888435,
                    -0.6321849,
                    -1.9382902e-05,
                    -8.653179e-06,
                    -0.09331825,
                    -0.002657566,
                    -0.003274756,
                    -0.0041469103,
                    -4.4818075e-06,
                    -1.9263687e-05,
                    -0.0022538225,
                    -4.2433903e-06,
                    -8.781245e-05,
                    -2.3360508e-06,
                    -0.0028683143,
                    -1.5006569e-06,
                    -0.00026266437,
                    -0.00032347863,
                    -0.0015445487,
                    -3.076318e-07,
                    -1.9503042e-05,
                    -0.0002850831,
                    -0.00016912498,
                    -0.00012357882,
                    -0.0003838799,
                    -4.3586017e-05,
                    -2.6060465e-05,
                    -0.00031644345,
                    -6.6593304e-05,
                    -4.716134e-05,
                    -0.0001390797,
                    -0.00042997237,
                    -0.001012133,
                    -6.5041706e-05,
                    -2.1649737e-05,
                    -0.0060920957,
                    -0.0048124543,
                    -0.0009085022,
                    -0.002664677,
                    -0.00047690584,
                    -0.0015100456,
                    -0.00212796,
                    -2.8326363e-05,
                    -0.0059760637,
                    -0.0034588983,
                    -0.016034175,
                    -0.004828447,
                    -5.24084e-05,
                    -2.6773841e-05,
                    -0.00011416413,
                    -0.00044464157,
                    -0.0006916062,
                    -0.00036766095,
                    -5.216904e-05,
                    -9.606849e-06,
                    -1.4139594e-05,
                    -4.361666e-06,
                    -1.2588937e-05,
                    -0.00046038558,
                    -0.0013431536,
                    -3.170517e-06,
                    -4.4539687e-05,
                    -0.00044154216,
                    -0.00090945675,
                    -0.001464081,
                    -0.012154564,
                    -5.1215375e-05,
                    -0.0008936471,
                    -5.1810483e-05,
                    -0.00019487782,
                    -0.00060929876,
                    -7.422359e-05,
                    -2.2365928e-05,
                    -3.452334e-05,
                    -0.00025300472,
                    -0.00016662253,
                    -0.0010872569,
                    -0.0012352474,
                    -0.0049533914,
                    -5.264588e-05,
                    -6.8669196e-06,
                    -6.0753944e-05,
                    -0.023753155,
                    -3.0947078e-05,
                    -0.00018867897,
                    -0.0075242156,
                    -0.007964619,
                    -0.05598683,
                    -0.0004423766,
                    -0.0014469496,
                    -3.5001114e-05,
                    -2.4543265e-06,
                    -0.0017456891,
                    -0.0007662843,
                    -0.0052753505,
                    -3.595572e-05,
                    -6.587617e-05,
                    -7.97072e-05,
                    -0.0004253241,
                    -0.0020286283,
                    -0.0040096743,
                    -0.017486973,
                    -0.0051237056,
                    -0.0025224474,
                    -1.8310955e-05,
                    -0.0020270767,
                    -0.00032956016,
                    -0.009014182,
                    -0.00023905636,
                    -0.0014131638,
                    -0.004613091,
                    -0.013186139,
                    -0.0005067193,
                    -0.001957257,
                    -0.00010581859,
                    -3.142485e-05,
                    -0.00073675625,
                    -0.0015542204,
                    -1.8907942e-05,
                    -0.00080977014,
                    -0.48937488,
                    -0.0013598034,
                    -0.0015418039,
                    -0.004369825,
                    -0.01082581,
                    -5.3597672e-05,
                    -1.5094201e-05,
                    -0.00012846824,
                    -0.00038578815,
                    -0.000259442,
                    -7.4639065e-06,
                    -3.4642555e-05,
                    -0.0007381886,
                    -1.3542607e-05,
                    -0.0002694602,
                    -0.00092234253,
                    -0.0026031807,
                    -4.5135734e-05,
                    -0.008202629,
                    -0.0074668047,
                    -0.07136366,
                    -0.0005398189,
                    -3.142485e-05,
                    -9.251094e-06,
                    -0.0010024677,
                    -0.0009974561,
                    -1.6642034e-05,
                    -9.830563e-05,
                    -2.8565719e-05,
                    -3.883893e-06,
                    -2.693682e-06,
                    -1.3823812e-06,
                    -0.0009615406,
                    -0.0011704974,
                    -0.0025868067,
                    -0.024811905,
                    -0.0016210843,
                    -0.00079515536,
                    -1.9765537e-06,
                    -2.693682e-06,
                    -0.002643519,
                    -8.6025255e-05,
                    -0.003893048,
                    -0.00052711426,
                    -0.00047016633,
                    -0.0015934401,
                    -0.026501143,
                    -1.022884e-06,
                    -6.5092986e-06,
                    -0.0001735385,
                    -0.009244682,
                    -0.0013213666,
                    -7.1958624e-05,
                    -0.00010665305,
                    -8.176345e-06,
                    -5.7652644e-05,
                    -1.8601542e-06,
                    -0.0002534825,
                    -0.00052162877,
                    -0.0023283795,
                    -1.6402679e-05,
                    -0.008588933,
                    -0.010557234,
                    -0.1152591,
                    -3.529076e-06,
                    -0.005413297,
                    -9.130952e-06,
                    -0.004583931,
                    -0.0022499994,
                    -0.009920429,
                    -0.004982084,
                    -0.106450826,
                    -0.0028846327,
                    -0.00010188283,
                    -1.5006569e-06,
                    -7.818713e-06,
                    -0.0014874195,
                    -0.00017007865,
                    -0.010986638,
                    -1.7400124e-06,
                    -1.8841804e-07,
                    -0.0015075376,
                    -0.09674433,
                    -0.0021867384,
                    -9.9735196e-05,
                    -4.4818075e-06,
                    -4.847264e-05,
                    -0.0005236572,
                    -0.00030964572,
                    -0.00014158308,
                    -0.0021600956,
                    -9.4729374e-05,
                    -9.370307e-06,
                    -2.3078366e-05,
                    -0.0006156178,
                    -0.0004432111,
                    -0.002203999,
                    -0.0018048025,
                    -0.0024622753,
                    -0.0012474216,
                    -0.0007742779,
                    -0.0018885845,
                    -4.716134e-05,
                    -0.0011770613,
                    -0.0004346243,
                    -0.00097580056
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        ")": -0.5727739
                    },
                    {
                        " ||": -0.085422315
                    },
                    {
                        " (": -0.24215469
                    },
                    {
                        "item": -0.041222338
                    },
                    {
                        " instance": -0.0062214583
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19120456
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.0014651567
                    },
                    {
                        "Task": -0.0012858557
                    },
                    {
                        "))": -0.30639377
                    },
                    {
                        " {": -0.09588404
                    },
                    {
                        "\n": -0.07169216
                    },
                    {
                        "              ": -0.737665
                    },
                    {
                        " Run": -1.878581
                    },
                    {
                        " (": -0.79720974
                    },
                    {
                        "item": -0.6921983
                    },
                    {
                        " instance": -0.082350075
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Job": -0.6103606
                    },
                    {
                        ")": -0.22084662
                    },
                    {
                        " {": -0.0030486165
                    },
                    {
                        "\n": -0.014642734
                    },
                    {
                        "                  ": -0.024036404
                    },
                    {
                        " final": -0.67711025
                    },
                    {
                        " Job": -0.036348477
                    },
                    {
                        " project": -0.36325634
                    },
                    {
                        "?,": -0.0020611216
                    },
                    {
                        " ?": -0.62632155
                    },
                    {
                        ">": -0.0011910858
                    },
                    {
                        " project": -0.03272502
                    },
                    {
                        " =": -0.00330615
                    },
                    {
                        " (": -0.013902809
                    },
                    {
                        "Job": -0.0004489359
                    },
                    {
                        "<": -0.6050611
                    },
                    {
                        "?,": -5.657977e-05
                    },
                    {
                        " ?": -0.0473792
                    },
                    {
                        ">)": -0.00013228387
                    },
                    {
                        " item": -0.010233513
                    },
                    {
                        ";": -0.00040415474
                    },
                    {
                        "\n": -0.015116495
                    },
                    {
                        "                  ": -0.008410457
                    },
                    {
                        " listener": -0.34428567
                    },
                    {
                        ".": -0.0005467358
                    },
                    {
                        "get": -0.00017103326
                    },
                    {
                        "Log": -5.4364154e-06
                    },
                    {
                        "ger": -8.296486e-06
                    },
                    {
                        "().": -0.00063452503
                    },
                    {
                        "println": -0.0019073942
                    },
                    {
                        "(\"": -0.01683465
                    },
                    {
                        "S": -0.0036539647
                    },
                    {
                        "ched": -2.3675353e-05
                    },
                    {
                        "uling": -0.00019499795
                    },
                    {
                        " project": -0.008685851
                    },
                    {
                        ":": -0.00035514025
                    },
                    {
                        " \"": -0.0012628793
                    },
                    {
                        " +": -0.0013473288
                    },
                    {
                        " Model": -0.079408556
                    },
                    {
                        "Hyper": -2.5225998e-05
                    },
                    {
                        "link": -4.072407e-05
                    },
                    {
                        "Note": -1.0800813e-05
                    },
                    {
                        ".": -0.00012369896
                    },
                    {
                        "en": -1.8073477e-05
                    },
                    {
                        "code": -2.0218295e-05
                    },
                    {
                        "To": -5.6460554e-05
                    },
                    {
                        "(": -0.0013116975
                    },
                    {
                        "project": -0.0052874554
                    },
                    {
                        "));": -0.009217131
                    },
                    {
                        "\n": -0.0049710628
                    },
                    {
                        "                  ": -0.0034529783
                    },
                    {
                        " node": -0.03515296
                    },
                    {
                        ".": -0.0006316021
                    },
                    {
                        "add": -0.0001463533
                    },
                    {
                        "Action": -6.5092986e-06
                    },
                    {
                        "(": -6.4446605e-05
                    },
                    {
                        "new": -0.0022111104
                    },
                    {
                        " Label": -0.00045680837
                    },
                    {
                        "Action": -8.1136764e-05
                    },
                    {
                        "(": -0.0006623194
                    },
                    {
                        "Mess": -0.0037712255
                    },
                    {
                        "ages": -1.1039229e-05
                    },
                    {
                        ".": -5.7293146e-05
                    },
                    {
                        "Build": -0.0013146825
                    },
                    {
                        "Trigger": -0.00032622044
                    },
                    {
                        "Step": -0.0015930224
                    },
                    {
                        "Exec": -0.0004934796
                    },
                    {
                        "ution": -1.8668587e-05
                    },
                    {
                        "_": -3.4403198e-05
                    },
                    {
                        "building": -0.00087682175
                    },
                    {
                        "_(": -0.00092079
                    },
                    {
                        "project": -0.00674303
                    },
                    {
                        ".": -0.0010385644
                    },
                    {
                        "get": -2.3078366e-05
                    },
                    {
                        "Full": -0.0036577934
                    },
                    {
                        "Display": -0.011068662
                    },
                    {
                        "Name": -5.675771e-06
                    },
                    {
                        "()": -0.00031823252
                    },
                    {
                        "))": -0.0001532674
                    },
                    {
                        ");": -0.00020119963
                    },
                    {
                        "\n": -0.011186009
                    },
                    {
                        "                  ": -0.0063592354
                    },
                    {
                        " List": -0.041626774
                    },
                    {
                        "<": -0.00050302286
                    },
                    {
                        "Action": -0.0018107733
                    },
                    {
                        ">": -6.6294406e-06
                    },
                    {
                        " actions": -0.0026148339
                    },
                    {
                        " =": -0.0010370156
                    },
                    {
                        " new": -0.0011001427
                    },
                    {
                        " Array": -0.00024477651
                    },
                    {
                        "List": -5.5556293e-06
                    },
                    {
                        "<": -0.00022337619
                    },
                    {
                        ">": -0.031856168
                    },
                    {
                        "();": -6.0276172e-05
                    },
                    {
                        "\n": -0.0034208004
                    },
                    {
                        "                  ": -0.0023059177
                    },
                    {
                        " if": -0.018198844
                    },
                    {
                        " (": -0.0047011813
                    },
                    {
                        "step": -0.0006064359
                    },
                    {
                        ".": -2.319758e-05
                    },
                    {
                        "get": -0.00044953197
                    },
                    {
                        "Wait": -0.0004605048
                    },
                    {
                        "())": -0.0020060537
                    },
                    {
                        " {": -0.0001244142
                    },
                    {
                        "\n": -0.0017103433
                    },
                    {
                        "                      ": -0.0032666828
                    },
                    {
                        " Step": -0.019619063
                    },
                    {
                        "Context": -6.7427754e-05
                    },
                    {
                        " context": -0.0005579471
                    },
                    {
                        " =": -0.0003131028
                    },
                    {
                        " get": -0.00074713683
                    },
                    {
                        "Context": -9.012677e-06
                    },
                    {
                        "();": -7.2672e-05
                    },
                    {
                        "\n": -0.0012604914
                    },
                    {
                        "                      ": -0.0032696733
                    },
                    {
                        " boolean": -0.03875987
                    },
                    {
                        " is": -0.011408212
                    },
                    {
                        "Prop": -0.00096285285
                    },
                    {
                        "agate": -0.0019966175
                    },
                    {
                        " =": -0.006711288
                    },
                    {
                        " ": -0.07350856
                    },
                    {
                        " step": -0.0008367939
                    },
                    {
                        ".": -2.1768952e-05
                    },
                    {
                        "is": -0.00038375973
                    },
                    {
                        "Prop": -2.6538237e-05
                    },
                    {
                        "agate": -7.224551e-06
                    },
                    {
                        "();": -0.0011671558
                    },
                    {
                        "\n": -0.004846594
                    },
                    {
                        "                      ": -0.0023006604
                    },
                    {
                        " actions": -0.015362384
                    },
                    {
                        ".": -0.00011964774
                    },
                    {
                        "add": -9.251094e-06
                    },
                    {
                        "(": -7.5892516e-05
                    },
                    {
                        "new": -0.00405869
                    },
                    {
                        " Build": -0.0007247106
                    },
                    {
                        "Trigger": -0.00011809803
                    },
                    {
                        "Action": -0.00013001703
                    },
                    {
                        "(": -0.0010556901
                    },
                    {
                        "context": -0.0045927917
                    },
                    {
                        ",": -0.0055888435
                    },
                    {
                        "is": -0.6321849
                    },
                    {
                        "Prop": -1.9382902e-05
                    },
                    {
                        "agate": -8.653179e-06
                    },
                    {
                        " ));": -0.09331825
                    },
                    {
                        "\n": -0.002657566
                    },
                    {
                        "                      ": -0.003274756
                    },
                    {
                        " LOG": -0.0041469103
                    },
                    {
                        "GER": -4.4818075e-06
                    },
                    {
                        ".": -1.9263687e-05
                    },
                    {
                        "log": -0.0022538225
                    },
                    {
                        "(": -4.2433903e-06
                    },
                    {
                        "Level": -8.781245e-05
                    },
                    {
                        ".": -2.3360508e-06
                    },
                    {
                        "FIN": -0.0028683143
                    },
                    {
                        "ER": -1.5006569e-06
                    },
                    {
                        ",": -0.00026266437
                    },
                    {
                        " \"": -0.00032347863
                    },
                    {
                        "sc": -0.0015445487
                    },
                    {
                        "hed": -3.076318e-07
                    },
                    {
                        "uling": -1.9503042e-05
                    },
                    {
                        " a": -0.0002850831
                    },
                    {
                        " build": -0.00016912498
                    },
                    {
                        " of": -0.00012357882
                    },
                    {
                        " {": -0.0003838799
                    },
                    {
                        "0": -4.3586017e-05
                    },
                    {
                        "}": -2.6060465e-05
                    },
                    {
                        " from": -0.00031644345
                    },
                    {
                        " {": -6.6593304e-05
                    },
                    {
                        "1": -4.716134e-05
                    },
                    {
                        "}": -0.0001390797
                    },
                    {
                        "\",": -0.00042997237
                    },
                    {
                        " new": -0.001012133
                    },
                    {
                        " Object": -6.5041706e-05
                    },
                    {
                        "[]": -2.1649737e-05
                    },
                    {
                        "{": -0.0060920957
                    },
                    {
                        "project": -0.0048124543
                    },
                    {
                        ",": -0.0009085022
                    },
                    {
                        " context": -0.002664677
                    },
                    {
                        "});": -0.00047690584
                    },
                    {
                        "\n": -0.0015100456
                    },
                    {
                        "                  ": -0.00212796
                    },
                    {
                        " }": -2.8326363e-05
                    },
                    {
                        "\n": -0.0059760637
                    },
                    {
                        "                  ": -0.0034588983
                    },
                    {
                        " Cause": -0.016034175
                    },
                    {
                        ".": -0.004828447
                    },
                    {
                        "Up": -5.24084e-05
                    },
                    {
                        "stream": -2.6773841e-05
                    },
                    {
                        "Cause": -0.00011416413
                    },
                    {
                        " cause": -0.00044464157
                    },
                    {
                        " =": -0.0006916062
                    },
                    {
                        " new": -0.00036766095
                    },
                    {
                        " Cause": -5.216904e-05
                    },
                    {
                        ".": -9.606849e-06
                    },
                    {
                        "Up": -1.4139594e-05
                    },
                    {
                        "stream": -4.361666e-06
                    },
                    {
                        "Cause": -1.2588937e-05
                    },
                    {
                        "(": -0.00046038558
                    },
                    {
                        "inv": -0.0013431536
                    },
                    {
                        "oking": -3.170517e-06
                    },
                    {
                        "Run": -4.4539687e-05
                    },
                    {
                        ");": -0.00044154216
                    },
                    {
                        "\n": -0.00090945675
                    },
                    {
                        "                  ": -0.001464081
                    },
                    {
                        " Cause": -0.012154564
                    },
                    {
                        "Action": -5.1215375e-05
                    },
                    {
                        " cause": -0.0008936471
                    },
                    {
                        "Action": -5.1810483e-05
                    },
                    {
                        " =": -0.00019487782
                    },
                    {
                        " new": -0.00060929876
                    },
                    {
                        " Cause": -7.422359e-05
                    },
                    {
                        "Action": -2.2365928e-05
                    },
                    {
                        "(": -3.452334e-05
                    },
                    {
                        "cause": -0.00025300472
                    },
                    {
                        ");": -0.00016662253
                    },
                    {
                        "\n": -0.0010872569
                    },
                    {
                        "                  ": -0.0012352474
                    },
                    {
                        " actions": -0.0049533914
                    },
                    {
                        ".": -5.264588e-05
                    },
                    {
                        "add": -6.8669196e-06
                    },
                    {
                        "(": -6.0753944e-05
                    },
                    {
                        "cause": -0.023753155
                    },
                    {
                        "Action": -3.0947078e-05
                    },
                    {
                        ");": -0.00018867897
                    },
                    {
                        "\n": -0.0075242156
                    },
                    {
                        "                  ": -0.007964619
                    },
                    {
                        " List": -0.05598683
                    },
                    {
                        "<": -0.0004423766
                    },
                    {
                        "Parameter": -0.0014469496
                    },
                    {
                        "Value": -3.5001114e-05
                    },
                    {
                        ">": -2.4543265e-06
                    },
                    {
                        " parameters": -0.0017456891
                    },
                    {
                        " =": -0.0007662843
                    },
                    {
                        " step": -0.0052753505
                    },
                    {
                        ".": -3.595572e-05
                    },
                    {
                        "get": -6.587617e-05
                    },
                    {
                        "Parameters": -7.97072e-05
                    },
                    {
                        "();": -0.0004253241
                    },
                    {
                        "\n": -0.0020286283
                    },
                    {
                        "                  ": -0.0040096743
                    },
                    {
                        " if": -0.017486973
                    },
                    {
                        " (": -0.0051237056
                    },
                    {
                        "param": -0.0025224474
                    },
                    {
                        "eters": -1.8310955e-05
                    },
                    {
                        " !=": -0.0020270767
                    },
                    {
                        " null": -0.00032956016
                    },
                    {
                        ")": -0.009014182
                    },
                    {
                        " {": -0.00023905636
                    },
                    {
                        "\n": -0.0014131638
                    },
                    {
                        "                      ": -0.004613091
                    },
                    {
                        " parameters": -0.013186139
                    },
                    {
                        " =": -0.0005067193
                    },
                    {
                        " complete": -0.001957257
                    },
                    {
                        "Default": -0.00010581859
                    },
                    {
                        "Parameters": -3.142485e-05
                    },
                    {
                        "(": -0.00073675625
                    },
                    {
                        "param": -0.0015542204
                    },
                    {
                        "eters": -1.8907942e-05
                    },
                    {
                        ",": -0.00080977014
                    },
                    {
                        " project": -0.48937488
                    },
                    {
                        ");": -0.0013598034
                    },
                    {
                        "\n": -0.0015418039
                    },
                    {
                        "                      ": -0.004369825
                    },
                    {
                        " actions": -0.01082581
                    },
                    {
                        ".": -5.3597672e-05
                    },
                    {
                        "add": -1.5094201e-05
                    },
                    {
                        "(": -0.00012846824
                    },
                    {
                        "new": -0.00038578815
                    },
                    {
                        " Parameters": -0.000259442
                    },
                    {
                        "Action": -7.4639065e-06
                    },
                    {
                        "(": -3.4642555e-05
                    },
                    {
                        "param": -0.0007381886
                    },
                    {
                        "eters": -1.3542607e-05
                    },
                    {
                        "));": -0.0002694602
                    },
                    {
                        "\n": -0.00092234253
                    },
                    {
                        "                  ": -0.0026031807
                    },
                    {
                        " }": -4.5135734e-05
                    },
                    {
                        "\n": -0.008202629
                    },
                    {
                        "                  ": -0.0074668047
                    },
                    {
                        " Integer": -0.07136366
                    },
                    {
                        " quiet": -0.0005398189
                    },
                    {
                        "Per": -3.142485e-05
                    },
                    {
                        "iod": -9.251094e-06
                    },
                    {
                        " =": -0.0010024677
                    },
                    {
                        " step": -0.0009974561
                    },
                    {
                        ".": -1.6642034e-05
                    },
                    {
                        "get": -9.830563e-05
                    },
                    {
                        "Qu": -2.8565719e-05
                    },
                    {
                        "iet": -3.883893e-06
                    },
                    {
                        "Per": -2.693682e-06
                    },
                    {
                        "iod": -1.3823812e-06
                    },
                    {
                        "();": -0.0009615406
                    },
                    {
                        "\n": -0.0011704974
                    },
                    {
                        "                  ": -0.0025868067
                    },
                    {
                        " if": -0.024811905
                    },
                    {
                        " (": -0.0016210843
                    },
                    {
                        "quiet": -0.00079515536
                    },
                    {
                        "Per": -1.9765537e-06
                    },
                    {
                        "iod": -2.693682e-06
                    },
                    {
                        " ==": -0.002643519
                    },
                    {
                        " null": -8.6025255e-05
                    },
                    {
                        ")": -0.003893048
                    },
                    {
                        " {": -0.00052711426
                    },
                    {
                        "\n": -0.00047016633
                    },
                    {
                        "                      ": -0.0015934401
                    },
                    {
                        " quiet": -0.026501143
                    },
                    {
                        "Per": -1.022884e-06
                    },
                    {
                        "iod": -6.5092986e-06
                    },
                    {
                        " =": -0.0001735385
                    },
                    {
                        " project": -0.009244682
                    },
                    {
                        ".": -0.0013213666
                    },
                    {
                        "get": -7.1958624e-05
                    },
                    {
                        "Qu": -0.00010665305
                    },
                    {
                        "iet": -8.176345e-06
                    },
                    {
                        "Per": -5.7652644e-05
                    },
                    {
                        "iod": -1.8601542e-06
                    },
                    {
                        "();": -0.0002534825
                    },
                    {
                        "\n": -0.00052162877
                    },
                    {
                        "                  ": -0.0023283795
                    },
                    {
                        " }": -1.6402679e-05
                    },
                    {
                        "\n": -0.008588933
                    },
                    {
                        "                  ": -0.010557234
                    },
                    {
                        " Que": -0.1152591
                    },
                    {
                        "ue": -3.529076e-06
                    },
                    {
                        "Task": -0.005413297
                    },
                    {
                        "Future": -9.130952e-06
                    },
                    {
                        "<?": -0.004583931
                    },
                    {
                        ">": -0.0022499994
                    },
                    {
                        " f": -0.009920429
                    },
                    {
                        " =": -0.004982084
                    },
                    {
                        " project": -0.106450826
                    },
                    {
                        ".": -0.0028846327
                    },
                    {
                        "sche": -0.00010188283
                    },
                    {
                        "dule": -1.5006569e-06
                    },
                    {
                        "Build": -7.818713e-06
                    },
                    {
                        "2": -0.0014874195
                    },
                    {
                        "(": -0.00017007865
                    },
                    {
                        "quiet": -0.010986638
                    },
                    {
                        "Per": -1.7400124e-06
                    },
                    {
                        "iod": -1.8841804e-07
                    },
                    {
                        ",": -0.0015075376
                    },
                    {
                        " actions": -0.09674433
                    },
                    {
                        ".": -0.0021867384
                    },
                    {
                        "to": -9.9735196e-05
                    },
                    {
                        "Array": -4.4818075e-06
                    },
                    {
                        "(": -4.847264e-05
                    },
                    {
                        "new": -0.0005236572
                    },
                    {
                        " Action": -0.00030964572
                    },
                    {
                        "[": -0.00014158308
                    },
                    {
                        "actions": -0.0021600956
                    },
                    {
                        ".": -9.4729374e-05
                    },
                    {
                        "size": -9.370307e-06
                    },
                    {
                        "()": -2.3078366e-05
                    },
                    {
                        "])": -0.0006156178
                    },
                    {
                        ");": -0.0004432111
                    },
                    {
                        "\n": -0.002203999
                    },
                    {
                        "                  ": -0.0018048025
                    },
                    {
                        " if": -0.0024622753
                    },
                    {
                        " (": -0.0012474216
                    },
                    {
                        "f": -0.0007742779
                    },
                    {
                        " ==": -0.0018885845
                    },
                    {
                        " null": -4.716134e-05
                    },
                    {
                        ")": -0.0011770613
                    },
                    {
                        " {": -0.0004346243
                    },
                    {
                        "\n": -0.00097580056
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6591,
                    6593,
                    6597,
                    6606,
                    6608,
                    6612,
                    6613,
                    6615,
                    6616,
                    6634,
                    6640,
                    6644,
                    6645,
                    6647,
                    6649,
                    6650,
                    6658,
                    6660,
                    6662,
                    6665,
                    6666,
                    6668,
                    6670,
                    6672,
                    6677,
                    6678,
                    6679,
                    6697,
                    6706,
                    6707,
                    6710,
                    6713,
                    6716,
                    6719,
                    6726,
                    6728,
                    6729,
                    6733,
                    6738,
                    6746,
                    6747,
                    6749,
                    6751,
                    6757,
                    6762,
                    6766,
                    6770,
                    6771,
                    6773,
                    6777,
                    6779,
                    6780,
                    6787,
                    6790,
                    6791,
                    6809,
                    6814,
                    6815,
                    6818,
                    6824,
                    6825,
                    6828,
                    6834,
                    6840,
                    6841,
                    6845,
                    6849,
                    6850,
                    6855,
                    6862,
                    6866,
                    6870,
                    6875,
                    6876,
                    6884,
                    6886,
                    6893,
                    6894,
                    6897,
                    6901,
                    6908,
                    6912,
                    6914,
                    6916,
                    6918,
                    6919,
                    6937,
                    6942,
                    6943,
                    6949,
                    6950,
                    6958,
                    6960,
                    6964,
                    6970,
                    6974,
                    6975,
                    6976,
                    6979,
                    6980,
                    6998,
                    7001,
                    7003,
                    7007,
                    7008,
                    7011,
                    7015,
                    7018,
                    7020,
                    7021,
                    7043,
                    7048,
                    7055,
                    7063,
                    7065,
                    7069,
                    7076,
                    7079,
                    7080,
                    7102,
                    7110,
                    7113,
                    7117,
                    7122,
                    7124,
                    7125,
                    7130,
                    7131,
                    7133,
                    7137,
                    7142,
                    7145,
                    7146,
                    7168,
                    7176,
                    7177,
                    7180,
                    7181,
                    7184,
                    7190,
                    7197,
                    7203,
                    7204,
                    7211,
                    7212,
                    7214,
                    7218,
                    7223,
                    7227,
                    7228,
                    7250,
                    7254,
                    7257,
                    7258,
                    7261,
                    7262,
                    7267,
                    7268,
                    7271,
                    7273,
                    7274,
                    7276,
                    7278,
                    7281,
                    7286,
                    7288,
                    7294,
                    7297,
                    7299,
                    7300,
                    7301,
                    7306,
                    7308,
                    7309,
                    7310,
                    7312,
                    7316,
                    7323,
                    7325,
                    7326,
                    7333,
                    7334,
                    7342,
                    7345,
                    7346,
                    7364,
                    7366,
                    7367,
                    7385,
                    7391,
                    7392,
                    7394,
                    7400,
                    7405,
                    7411,
                    7413,
                    7417,
                    7423,
                    7424,
                    7426,
                    7432,
                    7437,
                    7438,
                    7441,
                    7446,
                    7449,
                    7451,
                    7452,
                    7470,
                    7476,
                    7482,
                    7488,
                    7494,
                    7496,
                    7500,
                    7506,
                    7512,
                    7513,
                    7518,
                    7520,
                    7521,
                    7539,
                    7547,
                    7548,
                    7551,
                    7552,
                    7557,
                    7563,
                    7565,
                    7566,
                    7584,
                    7589,
                    7590,
                    7599,
                    7604,
                    7605,
                    7616,
                    7618,
                    7623,
                    7624,
                    7627,
                    7637,
                    7640,
                    7641,
                    7659,
                    7662,
                    7664,
                    7669,
                    7674,
                    7677,
                    7682,
                    7683,
                    7685,
                    7686,
                    7708,
                    7719,
                    7721,
                    7730,
                    7737,
                    7747,
                    7748,
                    7753,
                    7758,
                    7759,
                    7767,
                    7769,
                    7770,
                    7792,
                    7800,
                    7801,
                    7804,
                    7805,
                    7808,
                    7819,
                    7825,
                    7826,
                    7831,
                    7836,
                    7839,
                    7840,
                    7858,
                    7860,
                    7861,
                    7879,
                    7887,
                    7893,
                    7896,
                    7899,
                    7901,
                    7906,
                    7907,
                    7910,
                    7912,
                    7915,
                    7918,
                    7921,
                    7924,
                    7925,
                    7943,
                    7946,
                    7948,
                    7953,
                    7956,
                    7959,
                    7962,
                    7967,
                    7968,
                    7970,
                    7971,
                    7993,
                    7999,
                    8002,
                    8005,
                    8007,
                    8015,
                    8016,
                    8019,
                    8021,
                    8024,
                    8027,
                    8030,
                    8033,
                    8034,
                    8052,
                    8054,
                    8055,
                    8073,
                    8077,
                    8079,
                    8083,
                    8089,
                    8091,
                    8092,
                    8094,
                    8096,
                    8104,
                    8105,
                    8109,
                    8113,
                    8118,
                    8119,
                    8120,
                    8125,
                    8128,
                    8131,
                    8132,
                    8140,
                    8141,
                    8143,
                    8148,
                    8149,
                    8152,
                    8159,
                    8160,
                    8167,
                    8168,
                    8172,
                    8174,
                    8176,
                    8178,
                    8179,
                    8197,
                    8200,
                    8202,
                    8203,
                    8206,
                    8211,
                    8212,
                    8214
                ]
            },
            "finish_reason": "length"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               Run lastBuild = invokingRun.getParent().getLastBuild();\n               if (lastBuild != null) {\n                   // TODO: implement a better way of associating builds\n                   // currently, we assume that a given build can only be triggered by a single build\n                   // we tag the current build with the build that triggered it\n                   lastBuild.addAction(new CauseAction(new Cause.UpstreamCause(invokingRun)));\n               }\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    " ||",
                    " item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    " last",
                    "Build",
                    " =",
                    " invoking",
                    "Run",
                    ".",
                    "get",
                    "Parent",
                    "().",
                    "get",
                    "Last",
                    "Build",
                    "();",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "last",
                    "Build",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " //",
                    " TOD",
                    "O",
                    ":",
                    " implement",
                    " a",
                    " better",
                    " way",
                    " of",
                    " associ",
                    "ating",
                    " builds",
                    "\n",
                    "                  ",
                    " //",
                    " currently",
                    ",",
                    " we",
                    " assume",
                    " that",
                    " a",
                    " given",
                    " build",
                    " can",
                    " only",
                    " be",
                    " triggered",
                    " by",
                    " a",
                    " single",
                    " build",
                    "\n",
                    "                  ",
                    " //",
                    " we",
                    " tag",
                    " the",
                    " current",
                    " build",
                    " with",
                    " the",
                    " build",
                    " that",
                    " triggered",
                    " it",
                    "\n",
                    "                  ",
                    " last",
                    "Build",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Cause",
                    "Action",
                    "(",
                    "new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    "))",
                    ");",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    "."
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -0.47959396,
                    -1.867852,
                    -0.24068603,
                    -0.0128377145,
                    -1.688045e-05,
                    -0.20034324,
                    -3.023464e-05,
                    -0.0014137616,
                    -0.0015668162,
                    -0.307378,
                    -0.045385566,
                    -0.06746891,
                    -0.79008096,
                    -1.8791837,
                    -2.6045973,
                    -0.28563237,
                    -0.07639204,
                    -1.8276528,
                    -0.005684151,
                    -0.12894113,
                    -0.004363421,
                    -0.43397638,
                    -0.010117117,
                    -0.00046801867,
                    -0.016224798,
                    -0.021208413,
                    -0.0017255673,
                    -0.017475026,
                    -0.02079328,
                    -1.3242272,
                    -0.21625261,
                    -0.1118075,
                    -3.8217877e-05,
                    -0.49565926,
                    -0.012524598,
                    -0.2701787,
                    -0.0069933543,
                    -0.014446063,
                    -0.014896433,
                    -3.3066401,
                    -2.4306154,
                    -0.0004870414,
                    -0.76799047,
                    -5.63571,
                    -2.392719,
                    -2.167464,
                    -1.2044432,
                    -1.7498667,
                    -3.8912013,
                    -0.0002545563,
                    -3.0218475,
                    -1.2252102,
                    -0.004694533,
                    -1.9902618,
                    -3.4148285,
                    -2.3886225,
                    -1.2579408,
                    -4.1652236,
                    -0.5115178,
                    -2.6472049,
                    -2.7638843,
                    -0.7943294,
                    -2.4455667,
                    -0.34295863,
                    -0.98608243,
                    -0.48883137,
                    -0.37453866,
                    -0.7628775,
                    -0.12383901,
                    -0.9923646,
                    -1.1909033,
                    -0.003862769,
                    -0.8056912,
                    -3.210333,
                    -3.304591,
                    -0.3374312,
                    -2.28919,
                    -0.15045227,
                    -0.68645173,
                    -0.71975094,
                    -1.703461,
                    -0.29667956,
                    -0.11739414,
                    -0.040334944,
                    -0.73704827,
                    -0.006165202,
                    -0.9835667,
                    -9.7114484e-05,
                    -0.0020039033,
                    -0.011925561,
                    -0.002312908,
                    -0.002292834,
                    -0.008083347,
                    -0.2650977,
                    -0.002462155,
                    -0.0069774487,
                    -0.025897415,
                    -0.14835827,
                    -0.004285178,
                    -0.020665063,
                    -0.00030606854,
                    -9.806815e-05,
                    -0.40857437,
                    -0.052763544,
                    -2.0098154e-05,
                    -0.0020870424,
                    -0.007447289,
                    -0.0002491891,
                    -0.005534121,
                    -0.044084575,
                    -0.00041959932,
                    -0.06337391,
                    -0.46137255,
                    -1.4664745,
                    -0.7170249,
                    -0.0013568194,
                    -2.1310287,
                    -0.009979303
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        ")": -0.5727739
                    },
                    {
                        " item": -0.24068603
                    },
                    {
                        " instance": -0.0128377145
                    },
                    {
                        "of": -1.688045e-05
                    },
                    {
                        " Que": -0.20034324
                    },
                    {
                        "ue": -3.023464e-05
                    },
                    {
                        ".": -0.0014137616
                    },
                    {
                        "Task": -0.0015668162
                    },
                    {
                        "))": -0.307378
                    },
                    {
                        " {": -0.045385566
                    },
                    {
                        "\n": -0.06746891
                    },
                    {
                        "              ": -0.79008096
                    },
                    {
                        " Run": -1.8791837
                    },
                    {
                        "<": -1.896908
                    },
                    {
                        "Build": -0.28563237
                    },
                    {
                        " =": -0.07639204
                    },
                    {
                        " ((": -1.1051711
                    },
                    {
                        "Run": -0.005684151
                    },
                    {
                        ".": -0.12894113
                    },
                    {
                        "get": -0.004363421
                    },
                    {
                        "Parent": -0.43397638
                    },
                    {
                        "().": -0.010117117
                    },
                    {
                        "get": -0.00046801867
                    },
                    {
                        "Last": -0.016224798
                    },
                    {
                        "Build": -0.021208413
                    },
                    {
                        "();": -0.0017255673
                    },
                    {
                        "\n": -0.017475026
                    },
                    {
                        "              ": -0.02079328
                    },
                    {
                        " if": -1.3242272
                    },
                    {
                        " (": -0.21625261
                    },
                    {
                        "last": -0.1118075
                    },
                    {
                        "Build": -3.8217877e-05
                    },
                    {
                        " !=": -0.49565926
                    },
                    {
                        " null": -0.012524598
                    },
                    {
                        ")": -0.2701787
                    },
                    {
                        " {": -0.0069933543
                    },
                    {
                        "\n": -0.014446063
                    },
                    {
                        "                  ": -0.014896433
                    },
                    {
                        " last": -1.9386852
                    },
                    {
                        " TOD": -2.4306154
                    },
                    {
                        "O": -0.0004870414
                    },
                    {
                        ":": -0.76799047
                    },
                    {
                        " this": -2.9516516
                    },
                    {
                        " a": -2.392719
                    },
                    {
                        " better": -2.167464
                    },
                    {
                        " way": -1.2044432
                    },
                    {
                        " to": -0.31485307
                    },
                    {
                        " determining": -2.5856795
                    },
                    {
                        "ating": -0.0002545563
                    },
                    {
                        " the": -1.5911634
                    },
                    {
                        "\n": -1.2252102
                    },
                    {
                        "                  ": -0.004694533
                    },
                    {
                        " last": -1.1366591
                    },
                    {
                        " TOD": -1.9880432
                    },
                    {
                        " we": -1.2272285
                    },
                    {
                        " we": -1.2579408
                    },
                    {
                        " just": -1.7988303
                    },
                    {
                        " that": -0.5115178
                    },
                    {
                        " the": -1.1765635
                    },
                    {
                        " build": -0.6945247
                    },
                    {
                        " build": -0.7943294
                    },
                    {
                        " is": -1.1193806
                    },
                    {
                        " only": -0.34295863
                    },
                    {
                        " be": -0.98608243
                    },
                    {
                        " triggered": -0.48883137
                    },
                    {
                        " by": -0.37453866
                    },
                    {
                        " a": -0.7628775
                    },
                    {
                        " single": -0.12383901
                    },
                    {
                        " build": -0.9923646
                    },
                    {
                        "\n": -1.1909033
                    },
                    {
                        "                  ": -0.003862769
                    },
                    {
                        " //": -0.8056912
                    },
                    {
                        " this": -1.8432945
                    },
                    {
                        " also": -2.1939116
                    },
                    {
                        " the": -0.3374312
                    },
                    {
                        " build": -1.7917079
                    },
                    {
                        " build": -0.15045227
                    },
                    {
                        " with": -0.68645173
                    },
                    {
                        " the": -0.71975094
                    },
                    {
                        " build": -1.703461
                    },
                    {
                        " that": -0.29667956
                    },
                    {
                        " triggered": -0.11739414
                    },
                    {
                        " it": -0.040334944
                    },
                    {
                        "\n": -0.73704827
                    },
                    {
                        "                  ": -0.006165202
                    },
                    {
                        " last": -0.9835667
                    },
                    {
                        "Build": -9.7114484e-05
                    },
                    {
                        ".": -0.0020039033
                    },
                    {
                        "add": -0.011925561
                    },
                    {
                        "Action": -0.002312908
                    },
                    {
                        "(": -0.002292834
                    },
                    {
                        "new": -0.008083347
                    },
                    {
                        " Cause": -0.2650977
                    },
                    {
                        "Action": -0.002462155
                    },
                    {
                        "(": -0.0069774487
                    },
                    {
                        "new": -0.025897415
                    },
                    {
                        " Cause": -0.14835827
                    },
                    {
                        ".": -0.004285178
                    },
                    {
                        "Up": -0.020665063
                    },
                    {
                        "stream": -0.00030606854
                    },
                    {
                        "Cause": -9.806815e-05
                    },
                    {
                        "(": -0.40857437
                    },
                    {
                        "inv": -0.052763544
                    },
                    {
                        "oking": -2.0098154e-05
                    },
                    {
                        "Run": -0.0020870424
                    },
                    {
                        "))": -0.007447289
                    },
                    {
                        ");": -0.0002491891
                    },
                    {
                        "\n": -0.005534121
                    },
                    {
                        "              ": -0.044084575
                    },
                    {
                        " }": -0.00041959932
                    },
                    {
                        "\n": -0.06337391
                    },
                    {
                        "<|endoftext|>": -0.46137255
                    },
                    {
                        "package": -1.4664745
                    },
                    {
                        " com": -0.7170249
                    },
                    {
                        ".": -0.0013568194
                    },
                    {
                        "example": -2.1310287
                    },
                    {
                        ".": -0.009979303
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6540,
                    6545,
                    6554,
                    6556,
                    6560,
                    6562,
                    6563,
                    6567,
                    6569,
                    6571,
                    6572,
                    6586,
                    6590,
                    6595,
                    6600,
                    6602,
                    6611,
                    6614,
                    6615,
                    6618,
                    6624,
                    6627,
                    6630,
                    6634,
                    6639,
                    6642,
                    6643,
                    6657,
                    6660,
                    6662,
                    6666,
                    6671,
                    6674,
                    6679,
                    6680,
                    6682,
                    6683,
                    6701,
                    6704,
                    6708,
                    6709,
                    6710,
                    6720,
                    6722,
                    6729,
                    6733,
                    6736,
                    6743,
                    6748,
                    6755,
                    6756,
                    6774,
                    6777,
                    6787,
                    6788,
                    6791,
                    6798,
                    6803,
                    6805,
                    6811,
                    6817,
                    6821,
                    6826,
                    6829,
                    6839,
                    6842,
                    6844,
                    6851,
                    6857,
                    6858,
                    6876,
                    6879,
                    6882,
                    6886,
                    6890,
                    6898,
                    6904,
                    6909,
                    6913,
                    6919,
                    6924,
                    6934,
                    6937,
                    6938,
                    6956,
                    6961,
                    6966,
                    6967,
                    6970,
                    6976,
                    6977,
                    6980,
                    6986,
                    6992,
                    6993,
                    6996,
                    7002,
                    7003,
                    7005,
                    7011,
                    7016,
                    7017,
                    7020,
                    7025,
                    7028,
                    7030,
                    7032,
                    7033,
                    7047,
                    7049,
                    7050,
                    7050,
                    7050,
                    7050,
                    7050,
                    7050
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run run = invokingRun;\n               while (run != null && !(run instanceof TopLevelItem)) {\n                   run = run.getParentBuild();\n               }\n               final boolean isTopLevelItem = run != null;\n               if (isTopLevelItem && !item.hasPermission(Item.BUILD)) {\n                   throw new AbortException(\"No permission to build job \" + job);\n               }\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    " run",
                    " =",
                    " invoking",
                    "Run",
                    ";",
                    "\n",
                    "              ",
                    " while",
                    " (",
                    "run",
                    " !=",
                    " null",
                    " &&",
                    " !",
                    "(",
                    "run",
                    " instance",
                    "of",
                    " Top",
                    "Level",
                    "Item",
                    "))",
                    " {",
                    "\n",
                    "                  ",
                    " run",
                    " =",
                    " run",
                    ".",
                    "get",
                    "Parent",
                    "Build",
                    "();",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "              ",
                    " final",
                    " boolean",
                    " is",
                    "Top",
                    "Level",
                    "Item",
                    " =",
                    " run",
                    " !=",
                    " null",
                    ";",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "is",
                    "Top",
                    "Level",
                    "Item",
                    " &&",
                    " !",
                    "item",
                    ".",
                    "has",
                    "Per",
                    "mission",
                    "(",
                    "Item",
                    ".",
                    "BU",
                    "ILD",
                    "))",
                    " {",
                    "\n",
                    "                  ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "No",
                    " permission",
                    " to",
                    " build",
                    " job",
                    " \"",
                    " +",
                    " job",
                    ");",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "<|endoftext|>",
                    "#"
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -0.47959396,
                    -0.5727739,
                    -0.085422315,
                    -0.24215469,
                    -0.041222338,
                    -0.0062297336,
                    -8.653179e-06,
                    -0.19068974,
                    -2.8682118e-05,
                    -0.0014698085,
                    -0.0012822766,
                    -0.30611053,
                    -0.09593842,
                    -0.071650475,
                    -0.73983586,
                    -1.8801214,
                    -1.994397,
                    -0.0637216,
                    -0.6528597,
                    -0.0034822256,
                    -0.15548386,
                    -0.015145176,
                    -0.01993465,
                    -3.3547456,
                    -0.25629616,
                    -0.050460782,
                    -1.0203801,
                    -0.008381845,
                    -0.52696085,
                    -0.33869693,
                    -0.06386028,
                    -0.009656189,
                    -0.048799664,
                    -4.382537e-05,
                    -2.4119513,
                    -1.306671e-05,
                    -0.00040558525,
                    -0.09965876,
                    -0.062442098,
                    -0.010870819,
                    -0.011073965,
                    -0.05723444,
                    -0.0019522448,
                    -0.0072418787,
                    -0.00081502006,
                    -0.00011070334,
                    -0.11427862,
                    -0.84856564,
                    -0.010666935,
                    -0.012388142,
                    -0.05414887,
                    -0.00035788392,
                    -0.01848745,
                    -0.03494221,
                    -1.6127234,
                    -5.6491075,
                    -1.1007072,
                    -1.2453609,
                    -0.085032545,
                    -1.3001512,
                    -0.16912493,
                    -0.30037796,
                    -0.42510864,
                    -0.0034715186,
                    -0.37344852,
                    -0.048057783,
                    -0.48402852,
                    -0.9416749,
                    -0.9177241,
                    -0.6260434,
                    -0.0010701293,
                    -1.9765537e-06,
                    -1.9980816e-05,
                    -1.3556764,
                    -0.6863681,
                    -1.7961011,
                    -0.0019059607,
                    -0.14642824,
                    -0.00022504793,
                    -6.746778e-06,
                    -0.005209799,
                    -0.15813999,
                    -3.559716e-05,
                    -0.022520853,
                    -1.2351458e-05,
                    -0.07480845,
                    -0.007419366,
                    -0.0075620515,
                    -0.011164675,
                    -0.1728795,
                    -0.00036694473,
                    -0.012825033,
                    -9.370307e-06,
                    -9.4849514e-05,
                    -0.27481404,
                    -0.44443962,
                    -0.40798494,
                    -0.015860239,
                    -0.023193607,
                    -1.4010664,
                    -0.10215929,
                    -0.003845298,
                    -0.9251519,
                    -0.03522649,
                    -0.0028130203,
                    -0.0044449605,
                    -0.0001668619,
                    -0.07416625,
                    -0.5219945,
                    -2.2732046
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        ")": -0.5727739
                    },
                    {
                        " ||": -0.085422315
                    },
                    {
                        " (": -0.24215469
                    },
                    {
                        "item": -0.041222338
                    },
                    {
                        " instance": -0.0062297336
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19068974
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.0014698085
                    },
                    {
                        "Task": -0.0012822766
                    },
                    {
                        "))": -0.30611053
                    },
                    {
                        " {": -0.09593842
                    },
                    {
                        "\n": -0.071650475
                    },
                    {
                        "              ": -0.73983586
                    },
                    {
                        " Run": -1.8801214
                    },
                    {
                        "<": -1.832383
                    },
                    {
                        " =": -0.0637216
                    },
                    {
                        " invoking": -0.6528597
                    },
                    {
                        "Run": -0.0034822256
                    },
                    {
                        ";": -0.15548386
                    },
                    {
                        "\n": -0.015145176
                    },
                    {
                        "              ": -0.01993465
                    },
                    {
                        " Node": -1.8177012
                    },
                    {
                        " (": -0.25629616
                    },
                    {
                        "run": -0.050460782
                    },
                    {
                        " !=": -1.0203801
                    },
                    {
                        " null": -0.008381845
                    },
                    {
                        " &&": -0.52696085
                    },
                    {
                        " !": -0.33869693
                    },
                    {
                        "(": -0.06386028
                    },
                    {
                        "run": -0.009656189
                    },
                    {
                        " instance": -0.048799664
                    },
                    {
                        "of": -4.382537e-05
                    },
                    {
                        " Abstract": -1.2224524
                    },
                    {
                        "Level": -1.306671e-05
                    },
                    {
                        "Item": -0.00040558525
                    },
                    {
                        "))": -0.09965876
                    },
                    {
                        " {": -0.062442098
                    },
                    {
                        "\n": -0.010870819
                    },
                    {
                        "                  ": -0.011073965
                    },
                    {
                        " run": -0.05723444
                    },
                    {
                        " =": -0.0019522448
                    },
                    {
                        " run": -0.0072418787
                    },
                    {
                        ".": -0.00081502006
                    },
                    {
                        "get": -0.00011070334
                    },
                    {
                        "Parent": -0.11427862
                    },
                    {
                        "();": -0.56298226
                    },
                    {
                        "();": -0.010666935
                    },
                    {
                        "\n": -0.012388142
                    },
                    {
                        "              ": -0.05414887
                    },
                    {
                        " }": -0.00035788392
                    },
                    {
                        "\n": -0.01848745
                    },
                    {
                        "              ": -0.03494221
                    },
                    {
                        " if": -0.86425495
                    },
                    {
                        " Top": -0.6737557
                    },
                    {
                        " is": -1.1007072
                    },
                    {
                        "Top": -1.2453609
                    },
                    {
                        "Level": -0.085032545
                    },
                    {
                        " =": -0.71212614
                    },
                    {
                        " =": -0.16912493
                    },
                    {
                        " run": -0.30037796
                    },
                    {
                        " !=": -0.42510864
                    },
                    {
                        " null": -0.0034715186
                    },
                    {
                        ";": -0.37344852
                    },
                    {
                        "\n": -0.048057783
                    },
                    {
                        "              ": -0.48402852
                    },
                    {
                        " if": -0.9416749
                    },
                    {
                        " (": -0.9177241
                    },
                    {
                        "is": -0.6260434
                    },
                    {
                        "Top": -0.0010701293
                    },
                    {
                        "Level": -1.9765537e-06
                    },
                    {
                        "Item": -1.9980816e-05
                    },
                    {
                        ")": -0.3634928
                    },
                    {
                        " !": -0.6863681
                    },
                    {
                        "(": -1.1278645
                    },
                    {
                        ".": -0.0019059607
                    },
                    {
                        "has": -0.14642824
                    },
                    {
                        "Per": -0.00022504793
                    },
                    {
                        "mission": -6.746778e-06
                    },
                    {
                        "(": -0.005209799
                    },
                    {
                        "Item": -0.15813999
                    },
                    {
                        ".": -3.559716e-05
                    },
                    {
                        "BU": -0.022520853
                    },
                    {
                        "ILD": -1.2351458e-05
                    },
                    {
                        "))": -0.07480845
                    },
                    {
                        " {": -0.007419366
                    },
                    {
                        "\n": -0.0075620515
                    },
                    {
                        "                  ": -0.011164675
                    },
                    {
                        " throw": -0.1728795
                    },
                    {
                        " new": -0.00036694473
                    },
                    {
                        " Ab": -0.012825033
                    },
                    {
                        "ort": -9.370307e-06
                    },
                    {
                        "Exception": -9.4849514e-05
                    },
                    {
                        "(\"": -0.27481404
                    },
                    {
                        "No": -0.44443962
                    },
                    {
                        " permission": -0.40798494
                    },
                    {
                        " to": -0.015860239
                    },
                    {
                        " build": -0.023193607
                    },
                    {
                        " \"": -0.44910774
                    },
                    {
                        " \"": -0.10215929
                    },
                    {
                        " +": -0.003845298
                    },
                    {
                        " item": -0.70211697
                    },
                    {
                        ");": -0.03522649
                    },
                    {
                        "\n": -0.0028130203
                    },
                    {
                        "              ": -0.0044449605
                    },
                    {
                        " }": -0.0001668619
                    },
                    {
                        "\n": -0.07416625
                    },
                    {
                        "<|endoftext|>": -0.5219945
                    },
                    {
                        "package": -1.473251
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6596,
                    6598,
                    6607,
                    6610,
                    6611,
                    6612,
                    6626,
                    6632,
                    6634,
                    6637,
                    6640,
                    6645,
                    6648,
                    6650,
                    6651,
                    6654,
                    6663,
                    6665,
                    6669,
                    6674,
                    6678,
                    6680,
                    6682,
                    6683,
                    6701,
                    6705,
                    6707,
                    6711,
                    6712,
                    6715,
                    6721,
                    6726,
                    6729,
                    6730,
                    6744,
                    6746,
                    6747,
                    6761,
                    6767,
                    6775,
                    6778,
                    6781,
                    6786,
                    6790,
                    6792,
                    6796,
                    6799,
                    6804,
                    6805,
                    6806,
                    6820,
                    6823,
                    6825,
                    6827,
                    6830,
                    6835,
                    6839,
                    6842,
                    6844,
                    6848,
                    6849,
                    6852,
                    6855,
                    6862,
                    6863,
                    6867,
                    6868,
                    6870,
                    6873,
                    6875,
                    6877,
                    6878,
                    6896,
                    6902,
                    6906,
                    6909,
                    6912,
                    6921,
                    6923,
                    6925,
                    6936,
                    6939,
                    6945,
                    6949,
                    6951,
                    6953,
                    6957,
                    6959,
                    6960,
                    6974,
                    6976,
                    6977,
                    6977
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run invokingRun = getContext().get(Run.class);\n               EnvVars envVars = getContext().get(EnvVars.class);\n               if (invokingRun == null || envVars == null) {\n                   throw new IllegalStateException(\"StepContext.get(Run.class) and get(EnvVars.class) must not be null\");\n               }\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    " invoking",
                    "Run",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Run",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " En",
                    "v",
                    "V",
                    "ars",
                    " env",
                    "V",
                    "ars",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "En",
                    "v",
                    "V",
                    "ars",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "inv",
                    "oking",
                    "Run",
                    " ==",
                    " null",
                    " ||",
                    " env",
                    "V",
                    "ars",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " throw",
                    " new",
                    " Illegal",
                    "State",
                    "Exception",
                    "(\"",
                    "Step",
                    "Context",
                    ".",
                    "get",
                    "(",
                    "Run",
                    ".",
                    "class",
                    ")",
                    " and",
                    " get",
                    "(",
                    "En",
                    "v",
                    "V",
                    "ars",
                    ".",
                    "class",
                    ")",
                    " must",
                    " not",
                    " be",
                    " null",
                    "\");",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    "include",
                    " \"",
                    "T",
                    "ests",
                    "."
                ],
                "token_logprobs": [
                    -0.0036223782,
                    -0.069825135,
                    -0.07204575,
                    -0.45226717,
                    -0.20227131,
                    -0.018005293,
                    -9.055464e-07,
                    -0.0012968378,
                    -0.0002512175,
                    -0.19263208,
                    -0.1277375,
                    -0.15948632,
                    -0.032831386,
                    -0.01773727,
                    -2.0696069e-05,
                    -0.47959396,
                    -0.5727739,
                    -0.085422315,
                    -0.24215469,
                    -0.041222338,
                    -0.0062214583,
                    -8.653179e-06,
                    -0.19120456,
                    -2.8682118e-05,
                    -0.0014651567,
                    -0.0012858557,
                    -0.30639377,
                    -0.09588404,
                    -0.07169216,
                    -0.737665,
                    -1.878581,
                    -2.339174,
                    -0.6148864,
                    -0.04445877,
                    -0.27099538,
                    -0.111939885,
                    -0.0007576347,
                    -0.0046739914,
                    -0.00020775704,
                    -0.010286385,
                    -0.0004085664,
                    -3.643162e-05,
                    -0.0033114732,
                    -0.0151066305,
                    -0.16470137,
                    -2.343908,
                    -0.00018021514,
                    -0.022777777,
                    -3.076318e-07,
                    -0.14805715,
                    -0.4453326,
                    -1.2708151e-05,
                    -0.0288159,
                    -0.6443282,
                    -0.005719938,
                    -0.00030451978,
                    -0.0004835843,
                    -0.00037135737,
                    -0.03082745,
                    -1.676031e-05,
                    -0.0003311108,
                    -2.784859e-05,
                    -0.00014468438,
                    -3.142485e-05,
                    -0.01630961,
                    -0.015789207,
                    -0.031685196,
                    -1.5696709,
                    -0.1899009,
                    -1.2637781,
                    -5.3363005e-05,
                    -0.0008075043,
                    -1.0899603,
                    -0.0020079059,
                    -1.589561,
                    -0.023845932,
                    -5.7891062e-05,
                    -3.076318e-07,
                    -0.00951525,
                    -0.0018368678,
                    -0.033799794,
                    -0.010861782,
                    -0.01809991,
                    -0.005394298,
                    -0.46078965,
                    -0.0011845818,
                    -0.8447596,
                    -0.026486758,
                    -0.00013836258,
                    -0.2719391,
                    -3.797979,
                    -1.2771952,
                    -0.6175736,
                    -0.042059418,
                    -0.07709574,
                    -0.010990495,
                    -0.32163122,
                    -6.3014224e-05,
                    -0.0027658616,
                    -0.025213486,
                    -0.8853163,
                    -0.016714336,
                    -0.003286536,
                    -0.00010068981,
                    -0.002299704,
                    -0.0001492143,
                    -0.010191841,
                    -0.0009717437,
                    -0.00083446794,
                    -0.54417247,
                    -0.39235884,
                    -0.15282965,
                    -0.015108628,
                    -0.10757476,
                    -0.0035945612,
                    -0.0018495874,
                    -9.520714e-05,
                    -0.043945737,
                    -1.2840426,
                    -2.2699196,
                    -1.0967108,
                    -0.95140415,
                    -5.525445,
                    -3.348948,
                    -0.5573798
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036223782
                    },
                    {
                        "          ": -0.069825135
                    },
                    {
                        " if": -0.07204575
                    },
                    {
                        " (": -0.45226717
                    },
                    {
                        " !": -0.20227131
                    },
                    {
                        "step": -0.018005293
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012968378
                    },
                    {
                        "Wait": -0.0002512175
                    },
                    {
                        "()": -0.19263208
                    },
                    {
                        " ||": -0.1277375
                    },
                    {
                        " (": -0.15948632
                    },
                    {
                        "item": -0.032831386
                    },
                    {
                        " instance": -0.01773727
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.47959396
                    },
                    {
                        ")": -0.5727739
                    },
                    {
                        " ||": -0.085422315
                    },
                    {
                        " (": -0.24215469
                    },
                    {
                        "item": -0.041222338
                    },
                    {
                        " instance": -0.0062214583
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19120456
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.0014651567
                    },
                    {
                        "Task": -0.0012858557
                    },
                    {
                        "))": -0.30639377
                    },
                    {
                        " {": -0.09588404
                    },
                    {
                        "\n": -0.07169216
                    },
                    {
                        "              ": -0.737665
                    },
                    {
                        " Run": -1.878581
                    },
                    {
                        "<": -1.8343817
                    },
                    {
                        "Run": -0.6148864
                    },
                    {
                        " =": -0.04445877
                    },
                    {
                        " get": -0.27099538
                    },
                    {
                        "Context": -0.111939885
                    },
                    {
                        "().": -0.0007576347
                    },
                    {
                        "get": -0.0046739914
                    },
                    {
                        "(": -0.00020775704
                    },
                    {
                        "Run": -0.010286385
                    },
                    {
                        ".": -0.0004085664
                    },
                    {
                        "class": -3.643162e-05
                    },
                    {
                        ");": -0.0033114732
                    },
                    {
                        "\n": -0.0151066305
                    },
                    {
                        "              ": -0.16470137
                    },
                    {
                        " Node": -1.965698
                    },
                    {
                        "v": -0.00018021514
                    },
                    {
                        "V": -0.022777777
                    },
                    {
                        "ars": -3.076318e-07
                    },
                    {
                        " env": -0.14805715
                    },
                    {
                        "V": -0.4453326
                    },
                    {
                        "ars": -1.2708151e-05
                    },
                    {
                        " =": -0.0288159
                    },
                    {
                        " get": -0.6443282
                    },
                    {
                        "Context": -0.005719938
                    },
                    {
                        "().": -0.00030451978
                    },
                    {
                        "get": -0.0004835843
                    },
                    {
                        "(": -0.00037135737
                    },
                    {
                        "En": -0.03082745
                    },
                    {
                        "v": -1.676031e-05
                    },
                    {
                        "V": -0.0003311108
                    },
                    {
                        "ars": -2.784859e-05
                    },
                    {
                        ".": -0.00014468438
                    },
                    {
                        "class": -3.142485e-05
                    },
                    {
                        ");": -0.01630961
                    },
                    {
                        "\n": -0.015789207
                    },
                    {
                        "              ": -0.031685196
                    },
                    {
                        " if": -1.5696709
                    },
                    {
                        " (": -0.1899009
                    },
                    {
                        "env": -0.46954766
                    },
                    {
                        "oking": -5.3363005e-05
                    },
                    {
                        "Run": -0.0008075043
                    },
                    {
                        " !=": -0.5903226
                    },
                    {
                        " null": -0.0020079059
                    },
                    {
                        ")": -0.26748994
                    },
                    {
                        " env": -0.023845932
                    },
                    {
                        "V": -5.7891062e-05
                    },
                    {
                        "ars": -3.076318e-07
                    },
                    {
                        " ==": -0.00951525
                    },
                    {
                        " null": -0.0018368678
                    },
                    {
                        ")": -0.033799794
                    },
                    {
                        " {": -0.010861782
                    },
                    {
                        "\n": -0.01809991
                    },
                    {
                        "                  ": -0.005394298
                    },
                    {
                        " throw": -0.46078965
                    },
                    {
                        " new": -0.0011845818
                    },
                    {
                        " Ab": -0.7934709
                    },
                    {
                        "State": -0.026486758
                    },
                    {
                        "Exception": -0.00013836258
                    },
                    {
                        "(\"": -0.2719391
                    },
                    {
                        "Inv": -2.3188245
                    },
                    {
                        "Context": -1.2771952
                    },
                    {
                        ".": -0.6175736
                    },
                    {
                        "get": -0.042059418
                    },
                    {
                        "(": -0.07709574
                    },
                    {
                        "Run": -0.010990495
                    },
                    {
                        ".": -0.32163122
                    },
                    {
                        "class": -6.3014224e-05
                    },
                    {
                        ")": -0.0027658616
                    },
                    {
                        " and": -0.025213486
                    },
                    {
                        " get": -0.8853163
                    },
                    {
                        "(": -0.016714336
                    },
                    {
                        "En": -0.003286536
                    },
                    {
                        "v": -0.00010068981
                    },
                    {
                        "V": -0.002299704
                    },
                    {
                        "ars": -0.0001492143
                    },
                    {
                        ".": -0.010191841
                    },
                    {
                        "class": -0.0009717437
                    },
                    {
                        ")": -0.00083446794
                    },
                    {
                        " must": -0.54417247
                    },
                    {
                        " not": -0.39235884
                    },
                    {
                        " be": -0.15282965
                    },
                    {
                        " null": -0.015108628
                    },
                    {
                        "\");": -0.10757476
                    },
                    {
                        "\n": -0.0035945612
                    },
                    {
                        "              ": -0.0018495874
                    },
                    {
                        " }": -9.520714e-05
                    },
                    {
                        "\n": -0.043945737
                    },
                    {
                        "              ": -0.39723706
                    },
                    {
                        "package": -1.4751732
                    },
                    {
                        "include": -1.0967108
                    },
                    {
                        " <": -0.70682186
                    },
                    {
                        "std": -3.014585
                    },
                    {
                        "cp": -2.5545108
                    },
                    {
                        ".": -0.5573798
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6601,
                    6604,
                    6606,
                    6610,
                    6617,
                    6620,
                    6623,
                    6624,
                    6627,
                    6628,
                    6633,
                    6635,
                    6636,
                    6650,
                    6653,
                    6654,
                    6655,
                    6658,
                    6662,
                    6663,
                    6666,
                    6668,
                    6672,
                    6679,
                    6682,
                    6685,
                    6686,
                    6688,
                    6689,
                    6690,
                    6693,
                    6694,
                    6699,
                    6701,
                    6702,
                    6716,
                    6719,
                    6721,
                    6724,
                    6729,
                    6732,
                    6735,
                    6740,
                    6743,
                    6747,
                    6748,
                    6751,
                    6754,
                    6759,
                    6760,
                    6762,
                    6763,
                    6781,
                    6787,
                    6791,
                    6799,
                    6804,
                    6813,
                    6815,
                    6819,
                    6826,
                    6827,
                    6830,
                    6831,
                    6834,
                    6835,
                    6840,
                    6841,
                    6845,
                    6849,
                    6850,
                    6852,
                    6853,
                    6854,
                    6857,
                    6858,
                    6863,
                    6864,
                    6869,
                    6873,
                    6876,
                    6881,
                    6884,
                    6885,
                    6899,
                    6901,
                    6902,
                    6902,
                    6902,
                    6902,
                    6902,
                    6902,
                    6902
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 1393,
        "completion_tokens": 953,
        "total_tokens": 2346
    },
    "validation_result": [
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               listener.getLogger().println(\"Triggering a new build of \" + job);\n               Node node = invokingRun.getExecutor().getOwner().getNode();\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if (!step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               \n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() ) {\n",
            "correctness": "test_timeout"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) ) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               if (item instanceof Job) {\n                   final Job<?, ?> project = (Job<?, ?>) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate ));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               Run lastBuild = invokingRun.getParent().getLastBuild();\n               if (lastBuild != null) {\n                   // TODO: implement a better way of associating builds\n                   // currently, we assume that a given build can only be triggered by a single build\n                   // we tag the current build with the build that triggered it\n                   lastBuild.addAction(new CauseAction(new Cause.UpstreamCause(invokingRun)));\n               }\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run run = invokingRun;\n               while (run != null && !(run instanceof TopLevelItem)) {\n                   run = run.getParentBuild();\n               }\n               final boolean isTopLevelItem = run != null;\n               if (isTopLevelItem && !item.hasPermission(Item.BUILD)) {\n                   throw new AbortException(\"No permission to build job \" + job);\n               }\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run invokingRun = getContext().get(Run.class);\n               EnvVars envVars = getContext().get(EnvVars.class);\n               if (invokingRun == null || envVars == null) {\n                   throw new IllegalStateException(\"StepContext.get(Run.class) and get(EnvVars.class) must not be null\");\n               }\n",
            "correctness": "uncompilable"
        }
    ]
}