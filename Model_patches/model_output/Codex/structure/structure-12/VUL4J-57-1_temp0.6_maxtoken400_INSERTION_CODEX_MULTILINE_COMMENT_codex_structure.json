{
    "id": "cmpl-6lYRuvjrerBZ3rLPHKeQ8vRtX0t4d",
    "object": "text_completion",
    "created": 1676791858,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "bytes:\\xef",
                    "bytes:\\xbb",
                    "bytes:\\xbf",
                    "using",
                    " System",
                    ";",
                    "\n"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.0014771526,
                    -0.00129636,
                    -0.30594736,
                    -0.09559503,
                    -0.07145859,
                    -0.8700374,
                    -2.5236616,
                    -1.9263687e-05,
                    0,
                    -0.29140463,
                    -0.300604,
                    -0.27468616,
                    -0.002009099
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.0014771526
                    },
                    {
                        "Task": -0.00129636
                    },
                    {
                        "))": -0.30594736
                    },
                    {
                        " {": -0.09559503
                    },
                    {
                        "\n": -0.07145859
                    },
                    {
                        "              ": -0.7351744
                    },
                    {
                        "package": -1.4718924
                    },
                    {
                        "bytes:\\xbb": -1.9263687e-05
                    },
                    {
                        "bytes:\\xbf": 0
                    },
                    {
                        "using": -0.29140463
                    },
                    {
                        " System": -0.300604
                    },
                    {
                        ";": -0.27468616
                    },
                    {
                        "\n": -0.002009099
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run invokingBuild = getContext().get(Run.class);\n               if(invokingBuild == null){\n                   throw new AbortException(\"The invoking build was not found\");\n               }\n               Node node = invokingBuild.getExecutor().getOwner();\n               if(node == null){\n                   throw new AbortException(\"The node that the invoking build was running on was not found\");\n               }\n",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    " invoking",
                    "Build",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Run",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " if",
                    "(",
                    "inv",
                    "oking",
                    "Build",
                    " ==",
                    " null",
                    "){",
                    "\n",
                    "                  ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "The",
                    " invoking",
                    " build",
                    " was",
                    " not",
                    " found",
                    "\");",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " invoking",
                    "Build",
                    ".",
                    "get",
                    "Exec",
                    "utor",
                    "().",
                    "get",
                    "Owner",
                    "();",
                    "\n",
                    "              ",
                    " if",
                    "(",
                    "node",
                    " ==",
                    " null",
                    "){",
                    "\n",
                    "                  ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "The",
                    " node",
                    " that",
                    " the",
                    " invoking",
                    " build",
                    " was",
                    " running",
                    " on",
                    " was",
                    " not",
                    " found",
                    "\");",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "<|endoftext|>",
                    "import",
                    " java",
                    ".",
                    "util",
                    "."
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.0014771526,
                    -0.00129636,
                    -0.30594736,
                    -0.09559503,
                    -0.07145859,
                    -0.7351744,
                    -1.8613255,
                    -2.3358533,
                    -0.84778005,
                    -0.023066,
                    -0.6032527,
                    -0.056840114,
                    -0.0010935796,
                    -0.0062297336,
                    -0.00021824928,
                    -0.009076373,
                    -0.00034595837,
                    -3.5477948e-05,
                    -0.0033858714,
                    -0.018740429,
                    -0.22801992,
                    -1.7642194,
                    -1.5519924,
                    -0.29327178,
                    -8.781245e-05,
                    -0.01686532,
                    -0.3484619,
                    -0.030785283,
                    -0.19992763,
                    -0.0064477148,
                    -0.038059585,
                    -0.36998937,
                    -0.00715657,
                    -0.27439314,
                    -4.5967376e-05,
                    -0.000116546435,
                    -0.02241838,
                    -2.769996,
                    -1.7703948,
                    -0.15599145,
                    -2.49558,
                    -0.56143945,
                    -0.73911107,
                    -0.38252452,
                    -0.0076881777,
                    -0.0053732065,
                    -0.0004097594,
                    -0.04249386,
                    -0.2646901,
                    -1.6726265,
                    -0.010383945,
                    -0.032198347,
                    -0.7688133,
                    -0.026157841,
                    -0.004917808,
                    -0.00029903336,
                    -0.46794578,
                    -7.291136e-05,
                    -0.0032993958,
                    -0.0009846295,
                    -0.035976876,
                    -0.7900068,
                    -0.018361652,
                    -0.6979692,
                    -0.6651341,
                    -0.24503118,
                    -0.09133029,
                    -0.037884496,
                    -0.01359498,
                    -0.038649395,
                    -0.0024340143,
                    -0.013492453,
                    -0.067609526,
                    -0.0049760337,
                    -0.011470432,
                    -9.055464e-07,
                    -6.563869e-05,
                    -0.0060851993,
                    -0.29928488,
                    -1.0367892,
                    -1.6996084,
                    -1.4454361,
                    -0.45395467,
                    -0.028428202,
                    -0.5884668,
                    -0.2684995,
                    -0.04380941,
                    -0.25448027,
                    -0.06432566,
                    -0.003011786,
                    -0.030842695,
                    -0.0072813253,
                    -0.004035529,
                    -0.00023989083,
                    -0.022248996,
                    -0.42100656,
                    -2.1403973,
                    -2.9766269,
                    -0.00066911994,
                    -0.55875367,
                    -0.27789083
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.0014771526
                    },
                    {
                        "Task": -0.00129636
                    },
                    {
                        "))": -0.30594736
                    },
                    {
                        " {": -0.09559503
                    },
                    {
                        "\n": -0.07145859
                    },
                    {
                        "              ": -0.7351744
                    },
                    {
                        " Run": -1.8613255
                    },
                    {
                        "<": -1.8264529
                    },
                    {
                        "Run": -0.6147192
                    },
                    {
                        " =": -0.023066
                    },
                    {
                        " get": -0.6032527
                    },
                    {
                        "Context": -0.056840114
                    },
                    {
                        "().": -0.0010935796
                    },
                    {
                        "get": -0.0062297336
                    },
                    {
                        "(": -0.00021824928
                    },
                    {
                        "Run": -0.009076373
                    },
                    {
                        ".": -0.00034595837
                    },
                    {
                        "class": -3.5477948e-05
                    },
                    {
                        ");": -0.0033858714
                    },
                    {
                        "\n": -0.018740429
                    },
                    {
                        "              ": -0.22801992
                    },
                    {
                        " Node": -1.6746037
                    },
                    {
                        " (": -0.3161661
                    },
                    {
                        "inv": -0.29327178
                    },
                    {
                        "oking": -8.781245e-05
                    },
                    {
                        "Build": -0.01686532
                    },
                    {
                        " ==": -0.3484619
                    },
                    {
                        " null": -0.030785283
                    },
                    {
                        "){": -0.19992763
                    },
                    {
                        "\n": -0.0064477148
                    },
                    {
                        "                  ": -0.038059585
                    },
                    {
                        " throw": -0.36998937
                    },
                    {
                        " new": -0.00715657
                    },
                    {
                        " Ab": -0.27439314
                    },
                    {
                        "ort": -4.5967376e-05
                    },
                    {
                        "Exception": -0.000116546435
                    },
                    {
                        "(\"": -0.02241838
                    },
                    {
                        "No": -1.832679
                    },
                    {
                        " build": -1.3107381
                    },
                    {
                        " build": -0.15599145
                    },
                    {
                        " is": -0.91750467
                    },
                    {
                        " not": -0.56143945
                    },
                    {
                        " found": -0.73911107
                    },
                    {
                        "\");": -0.38252452
                    },
                    {
                        "\n": -0.0076881777
                    },
                    {
                        "              ": -0.0053732065
                    },
                    {
                        " }": -0.0004097594
                    },
                    {
                        "\n": -0.04249386
                    },
                    {
                        "              ": -0.2646901
                    },
                    {
                        " Node": -1.6726265
                    },
                    {
                        " node": -0.010383945
                    },
                    {
                        " =": -0.032198347
                    },
                    {
                        " invoking": -0.7688133
                    },
                    {
                        "Build": -0.026157841
                    },
                    {
                        ".": -0.004917808
                    },
                    {
                        "get": -0.00029903336
                    },
                    {
                        "Exec": -0.46794578
                    },
                    {
                        "utor": -7.291136e-05
                    },
                    {
                        "().": -0.0032993958
                    },
                    {
                        "get": -0.0009846295
                    },
                    {
                        "Owner": -0.035976876
                    },
                    {
                        "().": -0.6073286
                    },
                    {
                        "\n": -0.018361652
                    },
                    {
                        "              ": -0.6979692
                    },
                    {
                        " if": -0.6651341
                    },
                    {
                        "(": -0.24503118
                    },
                    {
                        "node": -0.09133029
                    },
                    {
                        " ==": -0.037884496
                    },
                    {
                        " null": -0.01359498
                    },
                    {
                        "){": -0.038649395
                    },
                    {
                        "\n": -0.0024340143
                    },
                    {
                        "                  ": -0.013492453
                    },
                    {
                        " throw": -0.067609526
                    },
                    {
                        " new": -0.0049760337
                    },
                    {
                        " Ab": -0.011470432
                    },
                    {
                        "ort": -9.055464e-07
                    },
                    {
                        "Exception": -6.563869e-05
                    },
                    {
                        "(\"": -0.0060851993
                    },
                    {
                        "The": -0.29928488
                    },
                    {
                        " node": -1.0367892
                    },
                    {
                        " that": -1.6996084
                    },
                    {
                        " the": -1.4454361
                    },
                    {
                        " invoking": -0.45395467
                    },
                    {
                        " build": -0.028428202
                    },
                    {
                        " was": -0.5884668
                    },
                    {
                        " running": -0.2684995
                    },
                    {
                        " on": -0.04380941
                    },
                    {
                        " was": -0.25448027
                    },
                    {
                        " not": -0.06432566
                    },
                    {
                        " found": -0.003011786
                    },
                    {
                        "\");": -0.030842695
                    },
                    {
                        "\n": -0.0072813253
                    },
                    {
                        "              ": -0.004035529
                    },
                    {
                        " }": -0.00023989083
                    },
                    {
                        "\n": -0.022248996
                    },
                    {
                        "<|endoftext|>": -0.42100656
                    },
                    {
                        "package": -1.4721264
                    },
                    {
                        " React": -1.21452
                    },
                    {
                        ".": -0.00066911994
                    },
                    {
                        "util": -0.55875367
                    },
                    {
                        ".": -0.27789083
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6601,
                    6606,
                    6608,
                    6612,
                    6619,
                    6622,
                    6625,
                    6626,
                    6629,
                    6630,
                    6635,
                    6637,
                    6638,
                    6652,
                    6655,
                    6656,
                    6659,
                    6664,
                    6669,
                    6672,
                    6677,
                    6679,
                    6680,
                    6698,
                    6704,
                    6708,
                    6711,
                    6714,
                    6723,
                    6725,
                    6728,
                    6737,
                    6743,
                    6747,
                    6751,
                    6757,
                    6760,
                    6761,
                    6775,
                    6777,
                    6778,
                    6792,
                    6797,
                    6802,
                    6804,
                    6813,
                    6818,
                    6819,
                    6822,
                    6826,
                    6830,
                    6833,
                    6836,
                    6841,
                    6844,
                    6845,
                    6859,
                    6862,
                    6863,
                    6867,
                    6870,
                    6875,
                    6877,
                    6878,
                    6896,
                    6902,
                    6906,
                    6909,
                    6912,
                    6921,
                    6923,
                    6926,
                    6931,
                    6936,
                    6940,
                    6949,
                    6955,
                    6959,
                    6967,
                    6970,
                    6974,
                    6978,
                    6984,
                    6987,
                    6988,
                    7002,
                    7004,
                    7005,
                    7005,
                    7005,
                    7005,
                    7005,
                    7005
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               LOGGER.log(Level.FINE, \"Triggering a build of {0}\", item.getFullName());\n               // TODO can we get an owner reference here?\n               Node node = getContext().get(Node.class);\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FINE",
                    ",",
                    " \"",
                    "Trigger",
                    "ing",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    "\",",
                    " item",
                    ".",
                    "get",
                    "Full",
                    "Name",
                    "());",
                    "\n",
                    "              ",
                    " //",
                    " TOD",
                    "O",
                    " can",
                    " we",
                    " get",
                    " an",
                    " owner",
                    " reference",
                    " here",
                    "?",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Node",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "<|endoftext|>",
                    "<?"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.0014771526,
                    -0.00129636,
                    -0.30594736,
                    -0.09559503,
                    -0.07145859,
                    -0.7351744,
                    -2.3387778,
                    -0.0002671943,
                    -0.00023524073,
                    -0.054011334,
                    -0.00031119544,
                    -0.0044699856,
                    -0.00010271822,
                    -0.6781219,
                    -0.036123138,
                    -0.04874384,
                    -1.7272646,
                    -0.028142173,
                    -2.2527187,
                    -0.7796398,
                    -0.10994708,
                    -0.1877713,
                    -0.0013432719,
                    -0.012004042,
                    -0.34228265,
                    -0.65745366,
                    -0.7569288,
                    -0.0009641651,
                    -0.047477573,
                    -0.04729802,
                    -0.0019035719,
                    -0.019595359,
                    -0.6127853,
                    -2.5317063,
                    -1.7809514,
                    -0.0005615252,
                    -5.3377275,
                    -0.67955047,
                    -2.4702463,
                    -4.074254,
                    -5.6236987,
                    -4.574867,
                    -1.7464906,
                    -0.3444511,
                    -0.21203703,
                    -0.33140343,
                    -2.2417529,
                    -0.011036056,
                    -0.020344744,
                    -2.0749104,
                    -0.09980839,
                    -0.0026456714,
                    -0.007512625,
                    -0.0030047903,
                    -0.05910383,
                    -0.002377611,
                    -5.3363005e-05,
                    -0.016515862,
                    -0.026910195,
                    -0.43747422,
                    -2.387805
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.0014771526
                    },
                    {
                        "Task": -0.00129636
                    },
                    {
                        "))": -0.30594736
                    },
                    {
                        " {": -0.09559503
                    },
                    {
                        "\n": -0.07145859
                    },
                    {
                        "              ": -0.7351744
                    },
                    {
                        " Run": -1.8613255
                    },
                    {
                        "GER": -0.0002671943
                    },
                    {
                        ".": -0.00023524073
                    },
                    {
                        "log": -0.054011334
                    },
                    {
                        "(": -0.00031119544
                    },
                    {
                        "Level": -0.0044699856
                    },
                    {
                        ".": -0.00010271822
                    },
                    {
                        "FINE": -0.6781219
                    },
                    {
                        ",": -0.036123138
                    },
                    {
                        " \"": -0.04874384
                    },
                    {
                        "Trigger": -1.7272646
                    },
                    {
                        "ing": -0.028142173
                    },
                    {
                        " {": -0.90807045
                    },
                    {
                        " new": -0.7247834
                    },
                    {
                        " of": -0.10994708
                    },
                    {
                        " {": -0.1877713
                    },
                    {
                        "0": -0.0013432719
                    },
                    {
                        "}": -0.012004042
                    },
                    {
                        "\",": -0.34228265
                    },
                    {
                        " item": -0.65745366
                    },
                    {
                        ");": -0.63853765
                    },
                    {
                        "get": -0.0009641651
                    },
                    {
                        "Full": -0.047477573
                    },
                    {
                        "Name": -0.04729802
                    },
                    {
                        "());": -0.0019035719
                    },
                    {
                        "\n": -0.019595359
                    },
                    {
                        "              ": -0.6127853
                    },
                    {
                        " Node": -2.1295123
                    },
                    {
                        " TOD": -1.7809514
                    },
                    {
                        "O": -0.0005615252
                    },
                    {
                        ":": -0.9321811
                    },
                    {
                        " we": -0.67955047
                    },
                    {
                        " do": -2.3885508
                    },
                    {
                        " the": -1.267966
                    },
                    {
                        " Item": -2.6344843
                    },
                    {
                        " for": -2.3789327
                    },
                    {
                        "?": -1.5713339
                    },
                    {
                        "?": -0.3444511
                    },
                    {
                        "\n": -0.21203703
                    },
                    {
                        "              ": -0.33140343
                    },
                    {
                        " //": -2.0868418
                    },
                    {
                        " node": -0.011036056
                    },
                    {
                        " =": -0.020344744
                    },
                    {
                        " Jenkins": -1.4985884
                    },
                    {
                        "Context": -0.09980839
                    },
                    {
                        "().": -0.0026456714
                    },
                    {
                        "get": -0.007512625
                    },
                    {
                        "(": -0.0030047903
                    },
                    {
                        "Node": -0.05910383
                    },
                    {
                        ".": -0.002377611
                    },
                    {
                        "class": -5.3363005e-05
                    },
                    {
                        ");": -0.016515862
                    },
                    {
                        "\n": -0.026910195
                    },
                    {
                        "<|endoftext|>": -0.43747422
                    },
                    {
                        "package": -1.4711494
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6595,
                    6596,
                    6599,
                    6600,
                    6605,
                    6606,
                    6610,
                    6611,
                    6613,
                    6620,
                    6623,
                    6625,
                    6631,
                    6634,
                    6636,
                    6637,
                    6638,
                    6640,
                    6645,
                    6646,
                    6649,
                    6653,
                    6657,
                    6661,
                    6662,
                    6676,
                    6679,
                    6683,
                    6684,
                    6688,
                    6691,
                    6695,
                    6698,
                    6704,
                    6714,
                    6719,
                    6720,
                    6721,
                    6735,
                    6740,
                    6745,
                    6747,
                    6751,
                    6758,
                    6761,
                    6764,
                    6765,
                    6769,
                    6770,
                    6775,
                    6777,
                    6778,
                    6778
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               BuildListener listener = getContext().get(BuildListener.class);\n               Node node = getContext().get(Node.class);\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Build",
                    "Listener",
                    " listener",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Build",
                    "Listener",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Node",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "<|endoftext|>",
                    "package"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.0014771526,
                    -0.00129636,
                    -0.30594736,
                    -0.09559503,
                    -0.07145859,
                    -0.7351744,
                    -3.9376404,
                    -1.2612324,
                    -0.004492438,
                    -0.010460258,
                    -0.14723493,
                    -0.047718856,
                    -0.0028735735,
                    -0.0008226559,
                    -0.00020906834,
                    -0.035377894,
                    -2.6893982e-05,
                    -0.0001083201,
                    -0.00015958735,
                    -0.0054948633,
                    -0.013647909,
                    -0.10365145,
                    -1.40026,
                    -0.0053390493,
                    -0.016645668,
                    -0.8322461,
                    -0.011454152,
                    -0.00026457265,
                    -0.000604766,
                    -0.00028949478,
                    -0.060418125,
                    -0.000389723,
                    -2.3912831e-05,
                    -0.0027979596,
                    -0.023636093,
                    -0.3415438,
                    -1.4768345
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.0014771526
                    },
                    {
                        "Task": -0.00129636
                    },
                    {
                        "))": -0.30594736
                    },
                    {
                        " {": -0.09559503
                    },
                    {
                        "\n": -0.07145859
                    },
                    {
                        "              ": -0.7351744
                    },
                    {
                        " Run": -1.8613255
                    },
                    {
                        "Trigger": -0.4543811
                    },
                    {
                        " listener": -0.004492438
                    },
                    {
                        " =": -0.010460258
                    },
                    {
                        " get": -0.14723493
                    },
                    {
                        "Context": -0.047718856
                    },
                    {
                        "().": -0.0028735735
                    },
                    {
                        "get": -0.0008226559
                    },
                    {
                        "(": -0.00020906834
                    },
                    {
                        "Build": -0.035377894
                    },
                    {
                        "Listener": -2.6893982e-05
                    },
                    {
                        ".": -0.0001083201
                    },
                    {
                        "class": -0.00015958735
                    },
                    {
                        ");": -0.0054948633
                    },
                    {
                        "\n": -0.013647909
                    },
                    {
                        "              ": -0.10365145
                    },
                    {
                        " Node": -1.40026
                    },
                    {
                        " node": -0.0053390493
                    },
                    {
                        " =": -0.016645668
                    },
                    {
                        " get": -0.8322461
                    },
                    {
                        "Context": -0.011454152
                    },
                    {
                        "().": -0.00026457265
                    },
                    {
                        "get": -0.000604766
                    },
                    {
                        "(": -0.00028949478
                    },
                    {
                        "Node": -0.060418125
                    },
                    {
                        ".": -0.000389723
                    },
                    {
                        "class": -2.3912831e-05
                    },
                    {
                        ");": -0.0027979596
                    },
                    {
                        "\n": -0.023636093
                    },
                    {
                        "<|endoftext|>": -0.3415438
                    },
                    {
                        "package": -1.4768345
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6594,
                    6602,
                    6611,
                    6613,
                    6617,
                    6624,
                    6627,
                    6630,
                    6631,
                    6636,
                    6644,
                    6645,
                    6650,
                    6652,
                    6653,
                    6667,
                    6672,
                    6677,
                    6679,
                    6683,
                    6690,
                    6693,
                    6696,
                    6697,
                    6701,
                    6702,
                    6707,
                    6709,
                    6710,
                    6710
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() ) {\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " )",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " org",
                    ".",
                    "d",
                    "rip",
                    ".",
                    "sample"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -2.5459807,
                    -0.04396355,
                    -0.064176485,
                    -0.5639706,
                    -1.4689603,
                    -2.9032135,
                    -0.00062897854,
                    -4.2743087,
                    -2.9823399,
                    -0.00057607895,
                    -1.3766006
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " {": -0.04396355
                    },
                    {
                        "\n": -0.064176485
                    },
                    {
                        "<|endoftext|>": -0.5639706
                    },
                    {
                        "package": -1.4689603
                    },
                    {
                        " com": -0.71476555
                    },
                    {
                        ".": -0.00062897854
                    },
                    {
                        "j": -3.1379454
                    },
                    {
                        "rip": -2.9823399
                    },
                    {
                        ".": -0.00057607895
                    },
                    {
                        "sample": -1.3766006
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6515,
                    6517,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518,
                    6518
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if (!step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run invokingRun = getContext().get(Run.class);\n               TaskListener listener = getContext().get(TaskListener.class);\n               Node node = invokingRun.getExecutor().getOwner();\n               if (item instanceof Job) {\n                   final Job project = (Job) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate ));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (!",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    " invoking",
                    "Run",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Run",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Task",
                    "Listener",
                    " listener",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Task",
                    "Listener",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " invoking",
                    "Run",
                    ".",
                    "get",
                    "Exec",
                    "utor",
                    "().",
                    "get",
                    "Owner",
                    "();",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " final",
                    " Job",
                    " project",
                    " =",
                    " (",
                    "Job",
                    ")",
                    " item",
                    ";",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " project",
                    ":",
                    " \"",
                    " +",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "project",
                    "));",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Label",
                    "Action",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "project",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "()",
                    "))",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Action",
                    ">",
                    " actions",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    ">",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "                      ",
                    " Step",
                    "Context",
                    " context",
                    " =",
                    " get",
                    "Context",
                    "();",
                    "\n",
                    "                      ",
                    " boolean",
                    " is",
                    "Prop",
                    "agate",
                    " =",
                    " ",
                    " step",
                    ".",
                    "is",
                    "Prop",
                    "agate",
                    "();",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Build",
                    "Trigger",
                    "Action",
                    "(",
                    "context",
                    ",",
                    "is",
                    "Prop",
                    "agate",
                    " ));",
                    "\n",
                    "                      ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "sc",
                    "hed",
                    "uling",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "project",
                    ",",
                    " context",
                    "});",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ");",
                    "\n",
                    "                  ",
                    " Cause",
                    "Action",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Cause",
                    "Action",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                  ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "cause",
                    "Action",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Parameter",
                    "Value",
                    ">",
                    " parameters",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Parameters",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "param",
                    "eters",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " parameters",
                    " =",
                    " complete",
                    "Default",
                    "Parameters",
                    "(",
                    "param",
                    "eters",
                    ",",
                    " project",
                    ");",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Parameters",
                    "Action",
                    "(",
                    "param",
                    "eters",
                    "));",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Integer",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "quiet",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " project",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Que",
                    "ue",
                    "Task",
                    "Future",
                    "<?"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -1.7158357,
                    -0.11117967,
                    -3.529076e-06,
                    -0.001984015,
                    -0.00033307917,
                    -0.47699538,
                    -0.15269424,
                    -0.21959695,
                    -0.027061755,
                    -0.017320246,
                    -1.6642034e-05,
                    -0.44555703,
                    -0.7096353,
                    -0.09311268,
                    -0.24866417,
                    -0.028434334,
                    -0.0067603136,
                    -9.846204e-06,
                    -0.21606196,
                    -3.690939e-05,
                    -0.0016848478,
                    -0.0015459819,
                    -0.20910119,
                    -0.12628087,
                    -0.06319522,
                    -0.700341,
                    -1.7601277,
                    -1.6172882,
                    -0.55623925,
                    -0.04250997,
                    -0.26769775,
                    -0.12930201,
                    -0.00076998264,
                    -0.004703038,
                    -0.00021360109,
                    -0.00960305,
                    -0.0004878777,
                    -3.7743856e-05,
                    -0.0032759528,
                    -0.014510706,
                    -0.18293078,
                    -1.8824129,
                    -0.00026481107,
                    -0.004990292,
                    -0.008182315,
                    -0.015371403,
                    -0.0021525696,
                    -0.000117978816,
                    -2.462996e-05,
                    -7.028876e-05,
                    -0.00014492373,
                    -2.319758e-05,
                    -8.185389e-05,
                    -0.00011475737,
                    -0.0041124946,
                    -0.009296902,
                    -0.096951306,
                    -0.6760968,
                    -0.0038246543,
                    -0.015309969,
                    -2.2736514,
                    -0.00021562482,
                    -0.015902689,
                    -0.0003282479,
                    -0.20511201,
                    -0.00013156954,
                    -0.0061440906,
                    -0.0013528799,
                    -0.01310497,
                    -1.078236,
                    -0.029664071,
                    -1.3871444,
                    -1.2238848,
                    -0.77941,
                    -1.3458508,
                    -0.076033756,
                    -5.79217e-06,
                    -0.28378084,
                    -0.19262514,
                    -0.0019483042,
                    -0.012534253,
                    -0.02482156,
                    -0.5486005,
                    -0.05482676,
                    -0.44853184,
                    -0.0029215761,
                    -0.0076708794,
                    -0.00049324025,
                    -0.0011475229,
                    -0.01590735,
                    -0.0005285457,
                    -0.010943612,
                    -0.007235515,
                    -0.20597973,
                    -0.00020036235,
                    -9.127325e-05,
                    -8.7733215e-06,
                    -3.051303e-06,
                    -0.0008493221,
                    -0.0010433393,
                    -0.016675306,
                    -0.0035229605,
                    -3.4287736e-05,
                    -0.000120601406,
                    -0.007333802,
                    -0.0005517445,
                    -0.0015815614,
                    -0.001971412,
                    -0.08784384,
                    -1.5687427e-05,
                    -2.0218295e-05,
                    -5.197998e-06,
                    -0.00010355082,
                    -2.6298881e-05,
                    -1.022884e-06,
                    -3.0353855e-05,
                    -0.0005747649,
                    -0.0053133415,
                    -0.00514623,
                    -0.003073247,
                    -0.0022449223,
                    -0.023311775,
                    -5.896488e-05,
                    -0.000429733,
                    -8.653179e-06,
                    -0.00010927377,
                    -0.0033580621,
                    -0.0004232957,
                    -6.015603e-05,
                    -0.0008270714,
                    -0.0040701805,
                    -8.4157e-06,
                    -0.0002103787,
                    -0.0019583337,
                    -0.00033510666,
                    -0.0023885444,
                    -0.0009188808,
                    -3.6482897e-06,
                    -4.048565e-05,
                    -0.0010882105,
                    -0.0012375133,
                    -0.005477303,
                    -0.0007680734,
                    -0.00014420661,
                    -0.0023702623,
                    -0.004716211,
                    -2.2159093e-06,
                    -0.00032920254,
                    -0.0001314494,
                    -0.00020346364,
                    -0.010221348,
                    -0.0049097245,
                    -0.03378105,
                    -0.00057369197,
                    -0.0017567351,
                    -5.3162735e-06,
                    -0.0025540001,
                    -0.001086062,
                    -0.0010239468,
                    -0.0001506467,
                    -1.5006569e-06,
                    -0.0004894227,
                    -0.03003683,
                    -6.0633804e-05,
                    -0.0024966944,
                    -0.0018514985,
                    -0.013489734,
                    -0.0056294235,
                    -0.00088970846,
                    -1.9382902e-05,
                    -0.0009584374,
                    -0.00014146294,
                    -0.0016064562,
                    -9.2941234e-05,
                    -0.0014140002,
                    -0.0032318805,
                    -0.016055312,
                    -8.00667e-05,
                    -0.0005295003,
                    -0.00028043022,
                    -0.0005844273,
                    -7.4639065e-06,
                    -7.434374e-05,
                    -0.00093433383,
                    -0.002978248,
                    -0.036725044,
                    -0.011910484,
                    -0.0009506823,
                    -0.0014227746,
                    -0.0064246194,
                    -0.09434846,
                    -0.0008654275,
                    -2.1889093e-05,
                    -0.0004023657,
                    -2.880226e-05,
                    -8.892534e-06,
                    -0.0011232363,
                    -0.0050367755,
                    -0.0020213425,
                    -0.012558761,
                    -0.000114518014,
                    -8.4157e-06,
                    -7.5892516e-05,
                    -0.0037570451,
                    -0.00089149945,
                    -0.00010498132,
                    -0.00016030073,
                    -0.00075417483,
                    -0.0047675963,
                    -0.0062507265,
                    -0.61424583,
                    -1.843017e-05,
                    -9.846204e-06,
                    -0.08107127,
                    -0.002147252,
                    -0.002826471,
                    -0.003272065,
                    -5.912312e-06,
                    -1.9028084e-05,
                    -0.0011487178,
                    -6.031526e-06,
                    -7.791906e-05,
                    -5.0778563e-06,
                    -0.0026576843,
                    -7.8540467e-07,
                    -0.00014742525,
                    -0.0002884219,
                    -0.0014733924,
                    -1.8841804e-07,
                    -2.319758e-05,
                    -0.00028233757,
                    -0.00013359329,
                    -0.00010307304,
                    -0.00036873287,
                    -9.449002e-05,
                    -2.9041616e-05,
                    -0.00028579836,
                    -5.9201422e-05,
                    -4.036551e-05,
                    -0.0001233404,
                    -0.00031071954,
                    -0.0008470562,
                    -5.8367896e-05,
                    -1.771398e-05,
                    -0.0051773265,
                    -0.0042730873,
                    -0.00048095893,
                    -0.0025997742,
                    -0.00035263688,
                    -0.0014194321,
                    -0.0029197831,
                    -4.0126153e-05,
                    -0.004945184,
                    -0.002532426,
                    -0.011290413,
                    -0.003015134,
                    -3.6074933e-05,
                    -2.6419024e-05,
                    -7.958892e-05,
                    -0.0003477465,
                    -0.0005555619,
                    -0.00027876132,
                    -5.979934e-05,
                    -5.912312e-06,
                    -8.892534e-06,
                    -9.130952e-06,
                    -1.4974988e-05,
                    -0.0005976088,
                    -0.0015427576,
                    -2.693682e-06,
                    -6.5092986e-06,
                    -0.00038042187,
                    -0.00070997654,
                    -0.0008688892,
                    -0.007877446,
                    -3.7983213e-05,
                    -0.0006505112,
                    -4.501652e-05,
                    -0.00016411634,
                    -0.00050850736,
                    -3.3928238e-05,
                    -1.0800813e-05,
                    -3.3450466e-05,
                    -0.00025694142,
                    -0.00015243483,
                    -0.00091590156,
                    -0.00096959516,
                    -0.0033554302,
                    -3.965026e-05,
                    -4.4818075e-06,
                    -4.0126153e-05,
                    -0.026994456,
                    -2.4750101e-05,
                    -0.00021002105,
                    -0.0057747313,
                    -0.0061285566,
                    -0.03859686,
                    -0.00040224646,
                    -0.0013113399,
                    -3.8935006e-05,
                    -4.0040345e-06,
                    -0.0013750235,
                    -0.0006807489,
                    -0.004383596,
                    -2.8445576e-05,
                    -5.5269407e-05,
                    -6.9810994e-05,
                    -0.00037410008,
                    -0.0017693947,
                    -0.0037507627,
                    -0.019339187,
                    -0.005210999,
                    -0.0017998464,
                    -1.2708151e-05,
                    -0.0021713858,
                    -0.00028639348,
                    -0.007917156,
                    -0.00021789165,
                    -0.0013675623,
                    -0.004047975,
                    -0.010450139,
                    -0.0005040948,
                    -0.0018682798,
                    -8.3045044e-05,
                    -2.3078366e-05,
                    -0.00066625705,
                    -0.0019333131,
                    -3.7684315e-06,
                    -0.0009290248,
                    -0.4309312,
                    -0.0011589811,
                    -0.0014414586,
                    -0.003127297,
                    -0.010508022,
                    -4.9427246e-05,
                    -1.44972155e-05,
                    -0.000100332174,
                    -0.00053552364,
                    -0.00022373382,
                    -4.361666e-06,
                    -3.0473995e-05,
                    -0.0008431185,
                    -9.72699e-06,
                    -0.00023142513,
                    -0.00091232057,
                    -0.0020276718,
                    -3.7266083e-05,
                    -0.005638653,
                    -0.0061933873,
                    -0.046073887,
                    -0.00035263688,
                    -2.4750101e-05,
                    -6.8669196e-06,
                    -0.0008342296,
                    -0.0010501399,
                    -1.2112103e-05,
                    -0.00017723397,
                    -2.5464416e-05,
                    -4.4818075e-06,
                    -2.693682e-06,
                    -9.055464e-07,
                    -0.0009962613,
                    -0.00090444623,
                    -0.00250524,
                    -0.020073904,
                    -0.0013827845,
                    -0.00056784705,
                    -2.5744682e-06,
                    -2.4543265e-06,
                    -0.002434373,
                    -9.0198504e-05,
                    -0.002902806,
                    -0.00042424936,
                    -0.00040415474,
                    -0.0013371839,
                    -0.019002462,
                    -1.1430258e-06,
                    -4.838501e-06,
                    -0.00017914227,
                    -0.0068902983,
                    -0.0008015373,
                    -5.169127e-05,
                    -7.541475e-05,
                    -4.2433903e-06,
                    -4.799487e-05,
                    -7.8540467e-07,
                    -0.00019225522,
                    -0.00044177964,
                    -0.0020402758,
                    -1.306671e-05,
                    -0.006898762,
                    -0.0083658,
                    -0.098839656,
                    -3.4089344e-06,
                    -0.0023780896,
                    -7.3446927e-06,
                    -0.0052509643
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        "step": -0.11117967
                    },
                    {
                        ".": -3.529076e-06
                    },
                    {
                        "get": -0.001984015
                    },
                    {
                        "Wait": -0.00033307917
                    },
                    {
                        "()": -0.47699538
                    },
                    {
                        " ||": -0.15269424
                    },
                    {
                        " (": -0.21959695
                    },
                    {
                        "item": -0.027061755
                    },
                    {
                        " instance": -0.017320246
                    },
                    {
                        "of": -1.6642034e-05
                    },
                    {
                        " Job": -0.44555703
                    },
                    {
                        ")": -0.7096353
                    },
                    {
                        " ||": -0.09311268
                    },
                    {
                        " (": -0.24866417
                    },
                    {
                        "item": -0.028434334
                    },
                    {
                        " instance": -0.0067603136
                    },
                    {
                        "of": -9.846204e-06
                    },
                    {
                        " Que": -0.21606196
                    },
                    {
                        "ue": -3.690939e-05
                    },
                    {
                        ".": -0.0016848478
                    },
                    {
                        "Task": -0.0015459819
                    },
                    {
                        "))": -0.20910119
                    },
                    {
                        " {": -0.12628087
                    },
                    {
                        "\n": -0.06319522
                    },
                    {
                        "              ": -0.700341
                    },
                    {
                        " Run": -1.7601277
                    },
                    {
                        " invoking": -1.6172882
                    },
                    {
                        "Run": -0.55623925
                    },
                    {
                        " =": -0.04250997
                    },
                    {
                        " get": -0.26769775
                    },
                    {
                        "Context": -0.12930201
                    },
                    {
                        "().": -0.00076998264
                    },
                    {
                        "get": -0.004703038
                    },
                    {
                        "(": -0.00021360109
                    },
                    {
                        "Run": -0.00960305
                    },
                    {
                        ".": -0.0004878777
                    },
                    {
                        "class": -3.7743856e-05
                    },
                    {
                        ");": -0.0032759528
                    },
                    {
                        "\n": -0.014510706
                    },
                    {
                        "              ": -0.18293078
                    },
                    {
                        " Task": -1.8824129
                    },
                    {
                        "Listener": -0.00026481107
                    },
                    {
                        " listener": -0.004990292
                    },
                    {
                        " =": -0.008182315
                    },
                    {
                        " get": -0.015371403
                    },
                    {
                        "Context": -0.0021525696
                    },
                    {
                        "().": -0.000117978816
                    },
                    {
                        "get": -2.462996e-05
                    },
                    {
                        "(": -7.028876e-05
                    },
                    {
                        "Task": -0.00014492373
                    },
                    {
                        "Listener": -2.319758e-05
                    },
                    {
                        ".": -8.185389e-05
                    },
                    {
                        "class": -0.00011475737
                    },
                    {
                        ");": -0.0041124946
                    },
                    {
                        "\n": -0.009296902
                    },
                    {
                        "              ": -0.096951306
                    },
                    {
                        " Node": -0.6760968
                    },
                    {
                        " node": -0.0038246543
                    },
                    {
                        " =": -0.015309969
                    },
                    {
                        " get": -0.55934
                    },
                    {
                        "Run": -0.00021562482
                    },
                    {
                        ".": -0.015902689
                    },
                    {
                        "get": -0.0003282479
                    },
                    {
                        "Exec": -0.20511201
                    },
                    {
                        "utor": -0.00013156954
                    },
                    {
                        "().": -0.0061440906
                    },
                    {
                        "get": -0.0013528799
                    },
                    {
                        "Owner": -0.01310497
                    },
                    {
                        "().": -0.41757414
                    },
                    {
                        "\n": -0.029664071
                    },
                    {
                        "<|endoftext|>": -0.38228643
                    },
                    {
                        " if": -1.2238848
                    },
                    {
                        " (": -0.77941
                    },
                    {
                        "node": -0.8650855
                    },
                    {
                        " instance": -0.076033756
                    },
                    {
                        "of": -5.79217e-06
                    },
                    {
                        " Job": -0.28378084
                    },
                    {
                        ")": -0.19262514
                    },
                    {
                        " {": -0.0019483042
                    },
                    {
                        "\n": -0.012534253
                    },
                    {
                        "                  ": -0.02482156
                    },
                    {
                        " final": -0.5486005
                    },
                    {
                        " Job": -0.05482676
                    },
                    {
                        " project": -0.44853184
                    },
                    {
                        " =": -0.0029215761
                    },
                    {
                        " (": -0.0076708794
                    },
                    {
                        "Job": -0.00049324025
                    },
                    {
                        ")": -0.0011475229
                    },
                    {
                        " item": -0.01590735
                    },
                    {
                        ";": -0.0005285457
                    },
                    {
                        "\n": -0.010943612
                    },
                    {
                        "                  ": -0.007235515
                    },
                    {
                        " listener": -0.20597973
                    },
                    {
                        ".": -0.00020036235
                    },
                    {
                        "get": -9.127325e-05
                    },
                    {
                        "Log": -8.7733215e-06
                    },
                    {
                        "ger": -3.051303e-06
                    },
                    {
                        "().": -0.0008493221
                    },
                    {
                        "println": -0.0010433393
                    },
                    {
                        "(\"": -0.016675306
                    },
                    {
                        "S": -0.0035229605
                    },
                    {
                        "ched": -3.4287736e-05
                    },
                    {
                        "uling": -0.000120601406
                    },
                    {
                        " project": -0.007333802
                    },
                    {
                        ":": -0.0005517445
                    },
                    {
                        " \"": -0.0015815614
                    },
                    {
                        " +": -0.001971412
                    },
                    {
                        " Model": -0.08784384
                    },
                    {
                        "Hyper": -1.5687427e-05
                    },
                    {
                        "link": -2.0218295e-05
                    },
                    {
                        "Note": -5.197998e-06
                    },
                    {
                        ".": -0.00010355082
                    },
                    {
                        "en": -2.6298881e-05
                    },
                    {
                        "code": -1.022884e-06
                    },
                    {
                        "To": -3.0353855e-05
                    },
                    {
                        "(": -0.0005747649
                    },
                    {
                        "project": -0.0053133415
                    },
                    {
                        "));": -0.00514623
                    },
                    {
                        "\n": -0.003073247
                    },
                    {
                        "                  ": -0.0022449223
                    },
                    {
                        " node": -0.023311775
                    },
                    {
                        ".": -5.896488e-05
                    },
                    {
                        "add": -0.000429733
                    },
                    {
                        "Action": -8.653179e-06
                    },
                    {
                        "(": -0.00010927377
                    },
                    {
                        "new": -0.0033580621
                    },
                    {
                        " Label": -0.0004232957
                    },
                    {
                        "Action": -6.015603e-05
                    },
                    {
                        "(": -0.0008270714
                    },
                    {
                        "Mess": -0.0040701805
                    },
                    {
                        "ages": -8.4157e-06
                    },
                    {
                        ".": -0.0002103787
                    },
                    {
                        "Build": -0.0019583337
                    },
                    {
                        "Trigger": -0.00033510666
                    },
                    {
                        "Step": -0.0023885444
                    },
                    {
                        "Exec": -0.0009188808
                    },
                    {
                        "ution": -3.6482897e-06
                    },
                    {
                        "_": -4.048565e-05
                    },
                    {
                        "building": -0.0010882105
                    },
                    {
                        "_(": -0.0012375133
                    },
                    {
                        "project": -0.005477303
                    },
                    {
                        ".": -0.0007680734
                    },
                    {
                        "get": -0.00014420661
                    },
                    {
                        "Full": -0.0023702623
                    },
                    {
                        "Display": -0.004716211
                    },
                    {
                        "Name": -2.2159093e-06
                    },
                    {
                        "()": -0.00032920254
                    },
                    {
                        "))": -0.0001314494
                    },
                    {
                        ");": -0.00020346364
                    },
                    {
                        "\n": -0.010221348
                    },
                    {
                        "                  ": -0.0049097245
                    },
                    {
                        " List": -0.03378105
                    },
                    {
                        "<": -0.00057369197
                    },
                    {
                        "Action": -0.0017567351
                    },
                    {
                        ">": -5.3162735e-06
                    },
                    {
                        " actions": -0.0025540001
                    },
                    {
                        " =": -0.001086062
                    },
                    {
                        " new": -0.0010239468
                    },
                    {
                        " Array": -0.0001506467
                    },
                    {
                        "List": -1.5006569e-06
                    },
                    {
                        "<": -0.0004894227
                    },
                    {
                        ">": -0.03003683
                    },
                    {
                        "();": -6.0633804e-05
                    },
                    {
                        "\n": -0.0024966944
                    },
                    {
                        "                  ": -0.0018514985
                    },
                    {
                        " if": -0.013489734
                    },
                    {
                        " (": -0.0056294235
                    },
                    {
                        "step": -0.00088970846
                    },
                    {
                        ".": -1.9382902e-05
                    },
                    {
                        "get": -0.0009584374
                    },
                    {
                        "Wait": -0.00014146294
                    },
                    {
                        "())": -0.0016064562
                    },
                    {
                        " {": -9.2941234e-05
                    },
                    {
                        "\n": -0.0014140002
                    },
                    {
                        "                      ": -0.0032318805
                    },
                    {
                        " Step": -0.016055312
                    },
                    {
                        "Context": -8.00667e-05
                    },
                    {
                        " context": -0.0005295003
                    },
                    {
                        " =": -0.00028043022
                    },
                    {
                        " get": -0.0005844273
                    },
                    {
                        "Context": -7.4639065e-06
                    },
                    {
                        "();": -7.434374e-05
                    },
                    {
                        "\n": -0.00093433383
                    },
                    {
                        "                      ": -0.002978248
                    },
                    {
                        " boolean": -0.036725044
                    },
                    {
                        " is": -0.011910484
                    },
                    {
                        "Prop": -0.0009506823
                    },
                    {
                        "agate": -0.0014227746
                    },
                    {
                        " =": -0.0064246194
                    },
                    {
                        " ": -0.09434846
                    },
                    {
                        " step": -0.0008654275
                    },
                    {
                        ".": -2.1889093e-05
                    },
                    {
                        "is": -0.0004023657
                    },
                    {
                        "Prop": -2.880226e-05
                    },
                    {
                        "agate": -8.892534e-06
                    },
                    {
                        "();": -0.0011232363
                    },
                    {
                        "\n": -0.0050367755
                    },
                    {
                        "                      ": -0.0020213425
                    },
                    {
                        " actions": -0.012558761
                    },
                    {
                        ".": -0.000114518014
                    },
                    {
                        "add": -8.4157e-06
                    },
                    {
                        "(": -7.5892516e-05
                    },
                    {
                        "new": -0.0037570451
                    },
                    {
                        " Build": -0.00089149945
                    },
                    {
                        "Trigger": -0.00010498132
                    },
                    {
                        "Action": -0.00016030073
                    },
                    {
                        "(": -0.00075417483
                    },
                    {
                        "context": -0.0047675963
                    },
                    {
                        ",": -0.0062507265
                    },
                    {
                        "is": -0.61424583
                    },
                    {
                        "Prop": -1.843017e-05
                    },
                    {
                        "agate": -9.846204e-06
                    },
                    {
                        " ));": -0.08107127
                    },
                    {
                        "\n": -0.002147252
                    },
                    {
                        "                      ": -0.002826471
                    },
                    {
                        " LOG": -0.003272065
                    },
                    {
                        "GER": -5.912312e-06
                    },
                    {
                        ".": -1.9028084e-05
                    },
                    {
                        "log": -0.0011487178
                    },
                    {
                        "(": -6.031526e-06
                    },
                    {
                        "Level": -7.791906e-05
                    },
                    {
                        ".": -5.0778563e-06
                    },
                    {
                        "FIN": -0.0026576843
                    },
                    {
                        "ER": -7.8540467e-07
                    },
                    {
                        ",": -0.00014742525
                    },
                    {
                        " \"": -0.0002884219
                    },
                    {
                        "sc": -0.0014733924
                    },
                    {
                        "hed": -1.8841804e-07
                    },
                    {
                        "uling": -2.319758e-05
                    },
                    {
                        " a": -0.00028233757
                    },
                    {
                        " build": -0.00013359329
                    },
                    {
                        " of": -0.00010307304
                    },
                    {
                        " {": -0.00036873287
                    },
                    {
                        "0": -9.449002e-05
                    },
                    {
                        "}": -2.9041616e-05
                    },
                    {
                        " from": -0.00028579836
                    },
                    {
                        " {": -5.9201422e-05
                    },
                    {
                        "1": -4.036551e-05
                    },
                    {
                        "}": -0.0001233404
                    },
                    {
                        "\",": -0.00031071954
                    },
                    {
                        " new": -0.0008470562
                    },
                    {
                        " Object": -5.8367896e-05
                    },
                    {
                        "[]": -1.771398e-05
                    },
                    {
                        "{": -0.0051773265
                    },
                    {
                        "project": -0.0042730873
                    },
                    {
                        ",": -0.00048095893
                    },
                    {
                        " context": -0.0025997742
                    },
                    {
                        "});": -0.00035263688
                    },
                    {
                        "\n": -0.0014194321
                    },
                    {
                        "                  ": -0.0029197831
                    },
                    {
                        " }": -4.0126153e-05
                    },
                    {
                        "\n": -0.004945184
                    },
                    {
                        "                  ": -0.002532426
                    },
                    {
                        " Cause": -0.011290413
                    },
                    {
                        ".": -0.003015134
                    },
                    {
                        "Up": -3.6074933e-05
                    },
                    {
                        "stream": -2.6419024e-05
                    },
                    {
                        "Cause": -7.958892e-05
                    },
                    {
                        " cause": -0.0003477465
                    },
                    {
                        " =": -0.0005555619
                    },
                    {
                        " new": -0.00027876132
                    },
                    {
                        " Cause": -5.979934e-05
                    },
                    {
                        ".": -5.912312e-06
                    },
                    {
                        "Up": -8.892534e-06
                    },
                    {
                        "stream": -9.130952e-06
                    },
                    {
                        "Cause": -1.4974988e-05
                    },
                    {
                        "(": -0.0005976088
                    },
                    {
                        "inv": -0.0015427576
                    },
                    {
                        "oking": -2.693682e-06
                    },
                    {
                        "Run": -6.5092986e-06
                    },
                    {
                        ");": -0.00038042187
                    },
                    {
                        "\n": -0.00070997654
                    },
                    {
                        "                  ": -0.0008688892
                    },
                    {
                        " Cause": -0.007877446
                    },
                    {
                        "Action": -3.7983213e-05
                    },
                    {
                        " cause": -0.0006505112
                    },
                    {
                        "Action": -4.501652e-05
                    },
                    {
                        " =": -0.00016411634
                    },
                    {
                        " new": -0.00050850736
                    },
                    {
                        " Cause": -3.3928238e-05
                    },
                    {
                        "Action": -1.0800813e-05
                    },
                    {
                        "(": -3.3450466e-05
                    },
                    {
                        "cause": -0.00025694142
                    },
                    {
                        ");": -0.00015243483
                    },
                    {
                        "\n": -0.00091590156
                    },
                    {
                        "                  ": -0.00096959516
                    },
                    {
                        " actions": -0.0033554302
                    },
                    {
                        ".": -3.965026e-05
                    },
                    {
                        "add": -4.4818075e-06
                    },
                    {
                        "(": -4.0126153e-05
                    },
                    {
                        "cause": -0.026994456
                    },
                    {
                        "Action": -2.4750101e-05
                    },
                    {
                        ");": -0.00021002105
                    },
                    {
                        "\n": -0.0057747313
                    },
                    {
                        "                  ": -0.0061285566
                    },
                    {
                        " List": -0.03859686
                    },
                    {
                        "<": -0.00040224646
                    },
                    {
                        "Parameter": -0.0013113399
                    },
                    {
                        "Value": -3.8935006e-05
                    },
                    {
                        ">": -4.0040345e-06
                    },
                    {
                        " parameters": -0.0013750235
                    },
                    {
                        " =": -0.0006807489
                    },
                    {
                        " step": -0.004383596
                    },
                    {
                        ".": -2.8445576e-05
                    },
                    {
                        "get": -5.5269407e-05
                    },
                    {
                        "Parameters": -6.9810994e-05
                    },
                    {
                        "();": -0.00037410008
                    },
                    {
                        "\n": -0.0017693947
                    },
                    {
                        "                  ": -0.0037507627
                    },
                    {
                        " if": -0.019339187
                    },
                    {
                        " (": -0.005210999
                    },
                    {
                        "param": -0.0017998464
                    },
                    {
                        "eters": -1.2708151e-05
                    },
                    {
                        " !=": -0.0021713858
                    },
                    {
                        " null": -0.00028639348
                    },
                    {
                        ")": -0.007917156
                    },
                    {
                        " {": -0.00021789165
                    },
                    {
                        "\n": -0.0013675623
                    },
                    {
                        "                      ": -0.004047975
                    },
                    {
                        " parameters": -0.010450139
                    },
                    {
                        " =": -0.0005040948
                    },
                    {
                        " complete": -0.0018682798
                    },
                    {
                        "Default": -8.3045044e-05
                    },
                    {
                        "Parameters": -2.3078366e-05
                    },
                    {
                        "(": -0.00066625705
                    },
                    {
                        "param": -0.0019333131
                    },
                    {
                        "eters": -3.7684315e-06
                    },
                    {
                        ",": -0.0009290248
                    },
                    {
                        " project": -0.4309312
                    },
                    {
                        ");": -0.0011589811
                    },
                    {
                        "\n": -0.0014414586
                    },
                    {
                        "                      ": -0.003127297
                    },
                    {
                        " actions": -0.010508022
                    },
                    {
                        ".": -4.9427246e-05
                    },
                    {
                        "add": -1.44972155e-05
                    },
                    {
                        "(": -0.000100332174
                    },
                    {
                        "new": -0.00053552364
                    },
                    {
                        " Parameters": -0.00022373382
                    },
                    {
                        "Action": -4.361666e-06
                    },
                    {
                        "(": -3.0473995e-05
                    },
                    {
                        "param": -0.0008431185
                    },
                    {
                        "eters": -9.72699e-06
                    },
                    {
                        "));": -0.00023142513
                    },
                    {
                        "\n": -0.00091232057
                    },
                    {
                        "                  ": -0.0020276718
                    },
                    {
                        " }": -3.7266083e-05
                    },
                    {
                        "\n": -0.005638653
                    },
                    {
                        "                  ": -0.0061933873
                    },
                    {
                        " Integer": -0.046073887
                    },
                    {
                        " quiet": -0.00035263688
                    },
                    {
                        "Per": -2.4750101e-05
                    },
                    {
                        "iod": -6.8669196e-06
                    },
                    {
                        " =": -0.0008342296
                    },
                    {
                        " step": -0.0010501399
                    },
                    {
                        ".": -1.2112103e-05
                    },
                    {
                        "get": -0.00017723397
                    },
                    {
                        "Qu": -2.5464416e-05
                    },
                    {
                        "iet": -4.4818075e-06
                    },
                    {
                        "Per": -2.693682e-06
                    },
                    {
                        "iod": -9.055464e-07
                    },
                    {
                        "();": -0.0009962613
                    },
                    {
                        "\n": -0.00090444623
                    },
                    {
                        "                  ": -0.00250524
                    },
                    {
                        " if": -0.020073904
                    },
                    {
                        " (": -0.0013827845
                    },
                    {
                        "quiet": -0.00056784705
                    },
                    {
                        "Per": -2.5744682e-06
                    },
                    {
                        "iod": -2.4543265e-06
                    },
                    {
                        " ==": -0.002434373
                    },
                    {
                        " null": -9.0198504e-05
                    },
                    {
                        ")": -0.002902806
                    },
                    {
                        " {": -0.00042424936
                    },
                    {
                        "\n": -0.00040415474
                    },
                    {
                        "                      ": -0.0013371839
                    },
                    {
                        " quiet": -0.019002462
                    },
                    {
                        "Per": -1.1430258e-06
                    },
                    {
                        "iod": -4.838501e-06
                    },
                    {
                        " =": -0.00017914227
                    },
                    {
                        " project": -0.0068902983
                    },
                    {
                        ".": -0.0008015373
                    },
                    {
                        "get": -5.169127e-05
                    },
                    {
                        "Qu": -7.541475e-05
                    },
                    {
                        "iet": -4.2433903e-06
                    },
                    {
                        "Per": -4.799487e-05
                    },
                    {
                        "iod": -7.8540467e-07
                    },
                    {
                        "();": -0.00019225522
                    },
                    {
                        "\n": -0.00044177964
                    },
                    {
                        "                  ": -0.0020402758
                    },
                    {
                        " }": -1.306671e-05
                    },
                    {
                        "\n": -0.006898762
                    },
                    {
                        "                  ": -0.0083658
                    },
                    {
                        " Que": -0.098839656
                    },
                    {
                        "ue": -3.4089344e-06
                    },
                    {
                        "Task": -0.0023780896
                    },
                    {
                        "Future": -7.3446927e-06
                    },
                    {
                        "<?": -0.0052509643
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6498,
                    6502,
                    6503,
                    6506,
                    6510,
                    6512,
                    6515,
                    6517,
                    6521,
                    6530,
                    6532,
                    6536,
                    6537,
                    6540,
                    6542,
                    6546,
                    6555,
                    6557,
                    6561,
                    6563,
                    6564,
                    6568,
                    6570,
                    6572,
                    6573,
                    6587,
                    6591,
                    6600,
                    6603,
                    6605,
                    6609,
                    6616,
                    6619,
                    6622,
                    6623,
                    6626,
                    6627,
                    6632,
                    6634,
                    6635,
                    6649,
                    6654,
                    6662,
                    6671,
                    6673,
                    6677,
                    6684,
                    6687,
                    6690,
                    6691,
                    6695,
                    6703,
                    6704,
                    6709,
                    6711,
                    6712,
                    6726,
                    6731,
                    6736,
                    6738,
                    6747,
                    6750,
                    6751,
                    6754,
                    6758,
                    6762,
                    6765,
                    6768,
                    6773,
                    6776,
                    6777,
                    6791,
                    6794,
                    6796,
                    6800,
                    6809,
                    6811,
                    6815,
                    6816,
                    6818,
                    6819,
                    6837,
                    6843,
                    6847,
                    6855,
                    6857,
                    6859,
                    6862,
                    6863,
                    6868,
                    6869,
                    6870,
                    6888,
                    6897,
                    6898,
                    6901,
                    6904,
                    6907,
                    6910,
                    6917,
                    6919,
                    6920,
                    6924,
                    6929,
                    6937,
                    6938,
                    6940,
                    6942,
                    6948,
                    6953,
                    6957,
                    6961,
                    6962,
                    6964,
                    6968,
                    6970,
                    6971,
                    6978,
                    6981,
                    6982,
                    7000,
                    7005,
                    7006,
                    7009,
                    7015,
                    7016,
                    7019,
                    7025,
                    7031,
                    7032,
                    7036,
                    7040,
                    7041,
                    7046,
                    7053,
                    7057,
                    7061,
                    7066,
                    7067,
                    7075,
                    7077,
                    7084,
                    7085,
                    7088,
                    7092,
                    7099,
                    7103,
                    7105,
                    7107,
                    7109,
                    7110,
                    7128,
                    7133,
                    7134,
                    7140,
                    7141,
                    7149,
                    7151,
                    7155,
                    7161,
                    7165,
                    7166,
                    7167,
                    7170,
                    7171,
                    7189,
                    7192,
                    7194,
                    7198,
                    7199,
                    7202,
                    7206,
                    7209,
                    7211,
                    7212,
                    7234,
                    7239,
                    7246,
                    7254,
                    7256,
                    7260,
                    7267,
                    7270,
                    7271,
                    7293,
                    7301,
                    7304,
                    7308,
                    7313,
                    7315,
                    7316,
                    7321,
                    7322,
                    7324,
                    7328,
                    7333,
                    7336,
                    7337,
                    7359,
                    7367,
                    7368,
                    7371,
                    7372,
                    7375,
                    7381,
                    7388,
                    7394,
                    7395,
                    7402,
                    7403,
                    7405,
                    7409,
                    7414,
                    7418,
                    7419,
                    7441,
                    7445,
                    7448,
                    7449,
                    7452,
                    7453,
                    7458,
                    7459,
                    7462,
                    7464,
                    7465,
                    7467,
                    7469,
                    7472,
                    7477,
                    7479,
                    7485,
                    7488,
                    7490,
                    7491,
                    7492,
                    7497,
                    7499,
                    7500,
                    7501,
                    7503,
                    7507,
                    7514,
                    7516,
                    7517,
                    7524,
                    7525,
                    7533,
                    7536,
                    7537,
                    7555,
                    7557,
                    7558,
                    7576,
                    7582,
                    7583,
                    7585,
                    7591,
                    7596,
                    7602,
                    7604,
                    7608,
                    7614,
                    7615,
                    7617,
                    7623,
                    7628,
                    7629,
                    7632,
                    7637,
                    7640,
                    7642,
                    7643,
                    7661,
                    7667,
                    7673,
                    7679,
                    7685,
                    7687,
                    7691,
                    7697,
                    7703,
                    7704,
                    7709,
                    7711,
                    7712,
                    7730,
                    7738,
                    7739,
                    7742,
                    7743,
                    7748,
                    7754,
                    7756,
                    7757,
                    7775,
                    7780,
                    7781,
                    7790,
                    7795,
                    7796,
                    7807,
                    7809,
                    7814,
                    7815,
                    7818,
                    7828,
                    7831,
                    7832,
                    7850,
                    7853,
                    7855,
                    7860,
                    7865,
                    7868,
                    7873,
                    7874,
                    7876,
                    7877,
                    7899,
                    7910,
                    7912,
                    7921,
                    7928,
                    7938,
                    7939,
                    7944,
                    7949,
                    7950,
                    7958,
                    7960,
                    7961,
                    7983,
                    7991,
                    7992,
                    7995,
                    7996,
                    7999,
                    8010,
                    8016,
                    8017,
                    8022,
                    8027,
                    8030,
                    8031,
                    8049,
                    8051,
                    8052,
                    8070,
                    8078,
                    8084,
                    8087,
                    8090,
                    8092,
                    8097,
                    8098,
                    8101,
                    8103,
                    8106,
                    8109,
                    8112,
                    8115,
                    8116,
                    8134,
                    8137,
                    8139,
                    8144,
                    8147,
                    8150,
                    8153,
                    8158,
                    8159,
                    8161,
                    8162,
                    8184,
                    8190,
                    8193,
                    8196,
                    8198,
                    8206,
                    8207,
                    8210,
                    8212,
                    8215,
                    8218,
                    8221,
                    8224,
                    8225,
                    8243,
                    8245,
                    8246,
                    8264,
                    8268,
                    8270,
                    8274,
                    8280
                ]
            },
            "finish_reason": "length"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Computer node = Computer.currentComputer();\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Computer",
                    " node",
                    " =",
                    " Computer",
                    ".",
                    "current",
                    "Computer",
                    "();",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "d",
                    "ee"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.001478585,
                    -0.0012993431,
                    -0.30613688,
                    -0.095630646,
                    -0.07163882,
                    -0.7363298,
                    -3.5663037,
                    -0.2640423,
                    -0.03548102,
                    -0.40535837,
                    -0.00031823252,
                    -0.0007023416,
                    -0.00013621869,
                    -0.008175103,
                    -0.026411785,
                    -0.452093,
                    -1.4723984,
                    -0.716059,
                    -0.001387917,
                    -4.336125,
                    -5.058527
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.001478585
                    },
                    {
                        "Task": -0.0012993431
                    },
                    {
                        "))": -0.30613688
                    },
                    {
                        " {": -0.095630646
                    },
                    {
                        "\n": -0.07163882
                    },
                    {
                        "              ": -0.7363298
                    },
                    {
                        " Run": -1.866719
                    },
                    {
                        " node": -0.2640423
                    },
                    {
                        " =": -0.03548102
                    },
                    {
                        " Computer": -0.40535837
                    },
                    {
                        ".": -0.00031823252
                    },
                    {
                        "current": -0.0007023416
                    },
                    {
                        "Computer": -0.00013621869
                    },
                    {
                        "();": -0.008175103
                    },
                    {
                        "\n": -0.026411785
                    },
                    {
                        "<|endoftext|>": -0.452093
                    },
                    {
                        "package": -1.4723984
                    },
                    {
                        " com": -0.716059
                    },
                    {
                        ".": -0.001387917
                    },
                    {
                        "example": -2.1244504
                    },
                    {
                        "ao": -3.0606384
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6597,
                    6602,
                    6604,
                    6613,
                    6614,
                    6621,
                    6629,
                    6632,
                    6633,
                    6633,
                    6633,
                    6633,
                    6633,
                    6633
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "#",
                    "!/",
                    "usr",
                    "/",
                    "bin",
                    "/",
                    "env"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.001478585,
                    -0.0012993431,
                    -0.30613688,
                    -0.095630646,
                    -0.07163882,
                    -0.8694113,
                    -2.2698793,
                    -1.651583,
                    -0.5323367,
                    -2.9756868e-05,
                    -0.017231585,
                    -0.00077392027,
                    -0.3369689
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.001478585
                    },
                    {
                        "Task": -0.0012993431
                    },
                    {
                        "))": -0.30613688
                    },
                    {
                        " {": -0.095630646
                    },
                    {
                        "\n": -0.07163882
                    },
                    {
                        "              ": -0.7363298
                    },
                    {
                        "package": -1.4717324
                    },
                    {
                        "include": -1.0924875
                    },
                    {
                        "usr": -0.5323367
                    },
                    {
                        "/": -2.9756868e-05
                    },
                    {
                        "bin": -0.017231585
                    },
                    {
                        "/": -0.00077392027
                    },
                    {
                        "env": -0.3369689
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               if (item instanceof Job) {\n                   final Job<?,?> project = (Job<?,?>) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context, isPropagate));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " final",
                    " Job",
                    "<",
                    "?,",
                    "?",
                    ">",
                    " project",
                    " =",
                    " (",
                    "Job",
                    "<",
                    "?,",
                    "?",
                    ">)",
                    " item",
                    ";",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " project",
                    ":",
                    " \"",
                    " +",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "project",
                    "));",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Label",
                    "Action",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "project",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "()",
                    "))",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Action",
                    ">",
                    " actions",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    ">",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "                      ",
                    " Step",
                    "Context",
                    " context",
                    " =",
                    " get",
                    "Context",
                    "();",
                    "\n",
                    "                      ",
                    " boolean",
                    " is",
                    "Prop",
                    "agate",
                    " =",
                    " ",
                    " step",
                    ".",
                    "is",
                    "Prop",
                    "agate",
                    "();",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Build",
                    "Trigger",
                    "Action",
                    "(",
                    "context",
                    ",",
                    " is",
                    "Prop",
                    "agate",
                    "));",
                    "\n",
                    "                      ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "sc",
                    "hed",
                    "uling",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "project",
                    ",",
                    " context",
                    "});",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ");",
                    "\n",
                    "                  ",
                    " Cause",
                    "Action",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Cause",
                    "Action",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                  ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "cause",
                    "Action",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Parameter",
                    "Value",
                    ">",
                    " parameters",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Parameters",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "param",
                    "eters",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " parameters",
                    " =",
                    " complete",
                    "Default",
                    "Parameters",
                    "(",
                    "param",
                    "eters",
                    ",",
                    " project",
                    ");",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Parameters",
                    "Action",
                    "(",
                    "param",
                    "eters",
                    "));",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Integer",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "quiet",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " project",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Que",
                    "ue",
                    "Task",
                    "Future",
                    "<?",
                    ">",
                    " f",
                    " =",
                    " project",
                    ".",
                    "sche",
                    "dule",
                    "Build",
                    "2",
                    "(",
                    "quiet",
                    "Per",
                    "iod",
                    ",",
                    " actions",
                    ".",
                    "to",
                    "Array",
                    "(",
                    "new",
                    " Action",
                    "[",
                    "actions",
                    ".",
                    "size",
                    "()",
                    "])",
                    ");",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "f",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.001478585,
                    -0.0012993431,
                    -0.30613688,
                    -0.095630646,
                    -0.07163882,
                    -0.7363298,
                    -2.0359209,
                    -0.7919779,
                    -0.69632703,
                    -0.08516805,
                    -8.653179e-06,
                    -0.6123435,
                    -0.2245634,
                    -0.0030505287,
                    -0.014610801,
                    -0.026042514,
                    -0.66585237,
                    -0.039790615,
                    -1.456683,
                    -0.0021445036,
                    -0.7774658,
                    -0.0010012747,
                    -0.0374161,
                    -0.004228911,
                    -0.0140997395,
                    -0.00048263065,
                    -0.8387949,
                    -3.225932e-05,
                    -0.14185226,
                    -0.00050003984,
                    -0.082843244,
                    -0.0007079482,
                    -0.015388168,
                    -0.007983425,
                    -0.3473876,
                    -0.00053969875,
                    -0.00014158308,
                    -2.0966954e-06,
                    -6.3900848e-06,
                    -0.00018462398,
                    -0.0018619493,
                    -0.015477393,
                    -0.0036405646,
                    -3.3809963e-05,
                    -0.00019666688,
                    -0.007859902,
                    -0.0003372524,
                    -0.0028478715,
                    -0.0011370213,
                    -0.0884327,
                    -2.141132e-05,
                    -4.7041198e-05,
                    -1.0681599e-05,
                    -6.265847e-05,
                    -1.5327929e-05,
                    -1.2112103e-05,
                    -9.9735196e-05,
                    -0.001121924,
                    -0.006062712,
                    -0.00758115,
                    -0.004364976,
                    -0.0032938921,
                    -0.032531902,
                    -0.0005701139,
                    -0.00016042087,
                    -5.79217e-06,
                    -6.4921565e-05,
                    -0.0024892858,
                    -0.00045740348,
                    -6.587617e-05,
                    -0.0006147833,
                    -0.00353875,
                    -1.771398e-05,
                    -3.869565e-05,
                    -0.0012913458,
                    -0.00033224377,
                    -0.0021126084,
                    -0.00043020982,
                    -1.0920954e-05,
                    -3.225932e-05,
                    -0.00081692834,
                    -0.0009466245,
                    -0.0068629924,
                    -0.0008594623,
                    -2.1649737e-05,
                    -0.0034401761,
                    -0.012888431,
                    -5.0778563e-06,
                    -0.00031942554,
                    -0.00018796182,
                    -0.00021204854,
                    -0.009386424,
                    -0.0076679355,
                    -0.040308133,
                    -0.00048882765,
                    -0.0014202675,
                    -8.7733215e-06,
                    -0.0025793961,
                    -0.0011839839,
                    -0.001124908,
                    -0.00024144053,
                    -6.746778e-06,
                    -0.00020250905,
                    -0.03109365,
                    -7.1719274e-05,
                    -0.0029906242,
                    -0.002873932,
                    -0.016153982,
                    -0.0061057103,
                    -0.00080261106,
                    -3.965026e-05,
                    -0.00028889967,
                    -0.0005125633,
                    -0.0021415178,
                    -0.00014992956,
                    -0.0017159528,
                    -0.003812508,
                    -0.018120667,
                    -6.516092e-05,
                    -0.0005517445,
                    -0.0003440501,
                    -0.00079002563,
                    -9.72699e-06,
                    -6.814395e-05,
                    -0.001283586,
                    -0.0028961103,
                    -0.035426,
                    -0.01006004,
                    -0.00088756083,
                    -0.001776856,
                    -0.0067965603,
                    -0.06856749,
                    -0.00084681687,
                    -2.033751e-05,
                    -0.00036074495,
                    -2.7371756e-05,
                    -5.5556293e-06,
                    -0.0011993215,
                    -0.004661896,
                    -0.0022673833,
                    -0.014715561,
                    -0.00010080995,
                    -8.7733215e-06,
                    -8.197403e-05,
                    -0.004071017,
                    -0.00075655995,
                    -0.00011404399,
                    -0.00013919984,
                    -0.00100915,
                    -0.005007484,
                    -0.0056141387,
                    -0.8341183,
                    -1.2231317e-05,
                    -1.0084622e-05,
                    -0.52598184,
                    -0.004964052,
                    -0.004166241,
                    -0.0056517804,
                    -7.698572e-06,
                    -2.2245786e-05,
                    -0.0011204908,
                    -8.176345e-06,
                    -0.0001086796,
                    -3.529076e-06,
                    -0.0035291205,
                    -6.6619094e-07,
                    -0.0011611878,
                    -0.00047183523,
                    -0.0020256434,
                    -4.277735e-07,
                    -3.8935006e-05,
                    -0.00045203813,
                    -8.638288e-05,
                    -0.00021860692,
                    -0.0005653418,
                    -6.563869e-05,
                    -3.3689823e-05,
                    -0.0005800119,
                    -9.854499e-05,
                    -3.4642555e-05,
                    -0.0002202777,
                    -0.0010568841,
                    -0.0016985802,
                    -6.325358e-05,
                    -2.4152187e-05,
                    -0.007888439,
                    -0.0075093214,
                    -0.0014208646,
                    -0.004917808,
                    -0.0007186854,
                    -0.001877177,
                    -0.0032177067,
                    -2.5225998e-05,
                    -0.00739715,
                    -0.0045212386,
                    -0.019435631,
                    -0.004942669,
                    -5.8130416e-05,
                    -2.2245786e-05,
                    -8.256821e-05,
                    -0.000716181,
                    -0.00092974096,
                    -0.00057309505,
                    -8.781245e-05,
                    -7.698572e-06,
                    -2.28437e-05,
                    -2.8138238e-06,
                    -1.2946569e-05,
                    -0.00084944133,
                    -0.0021805272,
                    -2.5744682e-06,
                    -5.490991e-05,
                    -0.00081788294,
                    -0.0011928758,
                    -0.00141209,
                    -0.018037278,
                    -6.146545e-05,
                    -0.0012763658,
                    -5.300351e-05,
                    -0.00040260222,
                    -0.0011641699,
                    -6.2299914e-05,
                    -1.2351458e-05,
                    -7.3745825e-05,
                    -0.000431523,
                    -0.00025837286,
                    -0.0015129094,
                    -0.0012974339,
                    -0.0061073885,
                    -5.896488e-05,
                    -6.2699432e-06,
                    -0.00021598431,
                    -0.16508451,
                    -3.8103353e-05,
                    -0.0016421579,
                    -0.008855414,
                    -0.010198466,
                    -0.08562449,
                    -0.00089639076,
                    -0.0020888334,
                    -4.0843282e-05,
                    -5.0778563e-06,
                    -0.002893301,
                    -0.0014288637,
                    -0.00910753,
                    -4.9187893e-05,
                    -6.838237e-05,
                    -9.21049e-05,
                    -0.000717375,
                    -0.0027845118,
                    -0.0066430033,
                    -0.02052877,
                    -0.0099892365,
                    -0.0033966978,
                    -1.0444119e-05,
                    -0.0038673768,
                    -0.0008271887,
                    -0.012195168,
                    -0.00038686107,
                    -0.0018853584,
                    -0.006839169,
                    -0.016302703,
                    -0.001089046,
                    -0.0028773393,
                    -9.675685e-05,
                    -2.6538237e-05,
                    -0.0008057133,
                    -0.0034610524,
                    -3.529076e-06,
                    -0.00092568324,
                    -0.48772687,
                    -0.001759124,
                    -0.0022276568,
                    -0.0038679747,
                    -0.013959261,
                    -4.966285e-05,
                    -1.3306066e-05,
                    -0.00019905198,
                    -0.0015357721,
                    -0.0002609945,
                    -4.361666e-06,
                    -5.7413286e-05,
                    -0.0012436023,
                    -1.5805701e-05,
                    -0.00047809698,
                    -0.0013930504,
                    -0.0031698712,
                    -6.4566746e-05,
                    -0.010604402,
                    -0.010049985,
                    -0.09438915,
                    -0.00087682175,
                    -5.3597672e-05,
                    -1.0561456e-05,
                    -0.0018796852,
                    -0.0019447798,
                    -2.5464416e-05,
                    -5.9085025e-05,
                    -3.3212986e-05,
                    -2.8138238e-06,
                    -4.361666e-06,
                    -5.4364154e-06,
                    -0.0012946883,
                    -0.0016072908,
                    -0.003525951,
                    -0.032788027,
                    -0.0038194496,
                    -0.0014813296,
                    -1.2622395e-06,
                    -1.022884e-06,
                    -0.0038456572,
                    -0.00015815685,
                    -0.0059755836,
                    -0.0009002092,
                    -0.00068289746,
                    -0.003116237,
                    -0.03452652,
                    -1.3823812e-06,
                    -8.0580685e-06,
                    -0.0005308135,
                    -0.011031177,
                    -0.0020220587,
                    -6.873624e-05,
                    -0.00011082348,
                    -5.4364154e-06,
                    -3.130471e-05,
                    -1.5006569e-06,
                    -0.0002861541,
                    -0.00082850276,
                    -0.0028912679,
                    -2.4750101e-05,
                    -0.011693961,
                    -0.013438564,
                    -0.1797478,
                    -6.031526e-06,
                    -0.00856591,
                    -9.966347e-06,
                    -0.007975614,
                    -0.0029713733,
                    -0.017239891,
                    -0.0073570367,
                    -0.08997264,
                    -0.0036899776,
                    -0.00011261161,
                    -1.5006569e-06,
                    -8.0580685e-06,
                    -0.0019441826,
                    -0.00021049884,
                    -0.013702234,
                    -9.055464e-07,
                    -6.827632e-08,
                    -0.002558482,
                    -0.08668593,
                    -0.0023922492,
                    -0.00012214643,
                    -6.031526e-06,
                    -6.563869e-05,
                    -0.0007253057,
                    -0.00034249946,
                    -0.00017759066,
                    -0.0038904152,
                    -0.00012942286,
                    -1.1991961e-05,
                    -2.9756868e-05,
                    -0.0008066679,
                    -0.00064561894,
                    -0.0031023638,
                    -0.0024150733,
                    -0.0031660444,
                    -0.0024718363,
                    -0.0009773466,
                    -0.0032670414,
                    -0.000111420464,
                    -0.001633204,
                    -0.0007605586,
                    -0.0013876775
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.001478585
                    },
                    {
                        "Task": -0.0012993431
                    },
                    {
                        "))": -0.30613688
                    },
                    {
                        " {": -0.095630646
                    },
                    {
                        "\n": -0.07163882
                    },
                    {
                        "              ": -0.7363298
                    },
                    {
                        " Run": -1.866719
                    },
                    {
                        " (": -0.7919779
                    },
                    {
                        "item": -0.69632703
                    },
                    {
                        " instance": -0.08516805
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Job": -0.6123435
                    },
                    {
                        ")": -0.2245634
                    },
                    {
                        " {": -0.0030505287
                    },
                    {
                        "\n": -0.014610801
                    },
                    {
                        "                  ": -0.026042514
                    },
                    {
                        " final": -0.66585237
                    },
                    {
                        " Job": -0.039790615
                    },
                    {
                        " project": -0.35454553
                    },
                    {
                        "?,": -0.0021445036
                    },
                    {
                        " ?": -0.61563486
                    },
                    {
                        ">": -0.0010012747
                    },
                    {
                        " project": -0.0374161
                    },
                    {
                        " =": -0.004228911
                    },
                    {
                        " (": -0.0140997395
                    },
                    {
                        "Job": -0.00048263065
                    },
                    {
                        ")": -0.56688327
                    },
                    {
                        "?,": -3.225932e-05
                    },
                    {
                        "?": -0.14185226
                    },
                    {
                        ">)": -0.00050003984
                    },
                    {
                        " item": -0.082843244
                    },
                    {
                        ";": -0.0007079482
                    },
                    {
                        "\n": -0.015388168
                    },
                    {
                        "                  ": -0.007983425
                    },
                    {
                        " listener": -0.3473876
                    },
                    {
                        ".": -0.00053969875
                    },
                    {
                        "get": -0.00014158308
                    },
                    {
                        "Log": -2.0966954e-06
                    },
                    {
                        "ger": -6.3900848e-06
                    },
                    {
                        "().": -0.00018462398
                    },
                    {
                        "println": -0.0018619493
                    },
                    {
                        "(\"": -0.015477393
                    },
                    {
                        "S": -0.0036405646
                    },
                    {
                        "ched": -3.3809963e-05
                    },
                    {
                        "uling": -0.00019666688
                    },
                    {
                        " project": -0.007859902
                    },
                    {
                        ":": -0.0003372524
                    },
                    {
                        " \"": -0.0028478715
                    },
                    {
                        " +": -0.0011370213
                    },
                    {
                        " Model": -0.0884327
                    },
                    {
                        "Hyper": -2.141132e-05
                    },
                    {
                        "link": -4.7041198e-05
                    },
                    {
                        "Note": -1.0681599e-05
                    },
                    {
                        ".": -6.265847e-05
                    },
                    {
                        "en": -1.5327929e-05
                    },
                    {
                        "code": -1.2112103e-05
                    },
                    {
                        "To": -9.9735196e-05
                    },
                    {
                        "(": -0.001121924
                    },
                    {
                        "project": -0.006062712
                    },
                    {
                        "));": -0.00758115
                    },
                    {
                        "\n": -0.004364976
                    },
                    {
                        "                  ": -0.0032938921
                    },
                    {
                        " node": -0.032531902
                    },
                    {
                        ".": -0.0005701139
                    },
                    {
                        "add": -0.00016042087
                    },
                    {
                        "Action": -5.79217e-06
                    },
                    {
                        "(": -6.4921565e-05
                    },
                    {
                        "new": -0.0024892858
                    },
                    {
                        " Label": -0.00045740348
                    },
                    {
                        "Action": -6.587617e-05
                    },
                    {
                        "(": -0.0006147833
                    },
                    {
                        "Mess": -0.00353875
                    },
                    {
                        "ages": -1.771398e-05
                    },
                    {
                        ".": -3.869565e-05
                    },
                    {
                        "Build": -0.0012913458
                    },
                    {
                        "Trigger": -0.00033224377
                    },
                    {
                        "Step": -0.0021126084
                    },
                    {
                        "Exec": -0.00043020982
                    },
                    {
                        "ution": -1.0920954e-05
                    },
                    {
                        "_": -3.225932e-05
                    },
                    {
                        "building": -0.00081692834
                    },
                    {
                        "_(": -0.0009466245
                    },
                    {
                        "project": -0.0068629924
                    },
                    {
                        ".": -0.0008594623
                    },
                    {
                        "get": -2.1649737e-05
                    },
                    {
                        "Full": -0.0034401761
                    },
                    {
                        "Display": -0.012888431
                    },
                    {
                        "Name": -5.0778563e-06
                    },
                    {
                        "()": -0.00031942554
                    },
                    {
                        "))": -0.00018796182
                    },
                    {
                        ");": -0.00021204854
                    },
                    {
                        "\n": -0.009386424
                    },
                    {
                        "                  ": -0.0076679355
                    },
                    {
                        " List": -0.040308133
                    },
                    {
                        "<": -0.00048882765
                    },
                    {
                        "Action": -0.0014202675
                    },
                    {
                        ">": -8.7733215e-06
                    },
                    {
                        " actions": -0.0025793961
                    },
                    {
                        " =": -0.0011839839
                    },
                    {
                        " new": -0.001124908
                    },
                    {
                        " Array": -0.00024144053
                    },
                    {
                        "List": -6.746778e-06
                    },
                    {
                        "<": -0.00020250905
                    },
                    {
                        ">": -0.03109365
                    },
                    {
                        "();": -7.1719274e-05
                    },
                    {
                        "\n": -0.0029906242
                    },
                    {
                        "                  ": -0.002873932
                    },
                    {
                        " if": -0.016153982
                    },
                    {
                        " (": -0.0061057103
                    },
                    {
                        "step": -0.00080261106
                    },
                    {
                        ".": -3.965026e-05
                    },
                    {
                        "get": -0.00028889967
                    },
                    {
                        "Wait": -0.0005125633
                    },
                    {
                        "())": -0.0021415178
                    },
                    {
                        " {": -0.00014992956
                    },
                    {
                        "\n": -0.0017159528
                    },
                    {
                        "                      ": -0.003812508
                    },
                    {
                        " Step": -0.018120667
                    },
                    {
                        "Context": -6.516092e-05
                    },
                    {
                        " context": -0.0005517445
                    },
                    {
                        " =": -0.0003440501
                    },
                    {
                        " get": -0.00079002563
                    },
                    {
                        "Context": -9.72699e-06
                    },
                    {
                        "();": -6.814395e-05
                    },
                    {
                        "\n": -0.001283586
                    },
                    {
                        "                      ": -0.0028961103
                    },
                    {
                        " boolean": -0.035426
                    },
                    {
                        " is": -0.01006004
                    },
                    {
                        "Prop": -0.00088756083
                    },
                    {
                        "agate": -0.001776856
                    },
                    {
                        " =": -0.0067965603
                    },
                    {
                        " ": -0.06856749
                    },
                    {
                        " step": -0.00084681687
                    },
                    {
                        ".": -2.033751e-05
                    },
                    {
                        "is": -0.00036074495
                    },
                    {
                        "Prop": -2.7371756e-05
                    },
                    {
                        "agate": -5.5556293e-06
                    },
                    {
                        "();": -0.0011993215
                    },
                    {
                        "\n": -0.004661896
                    },
                    {
                        "                      ": -0.0022673833
                    },
                    {
                        " actions": -0.014715561
                    },
                    {
                        ".": -0.00010080995
                    },
                    {
                        "add": -8.7733215e-06
                    },
                    {
                        "(": -8.197403e-05
                    },
                    {
                        "new": -0.004071017
                    },
                    {
                        " Build": -0.00075655995
                    },
                    {
                        "Trigger": -0.00011404399
                    },
                    {
                        "Action": -0.00013919984
                    },
                    {
                        "(": -0.00100915
                    },
                    {
                        "context": -0.005007484
                    },
                    {
                        ",": -0.0056141387
                    },
                    {
                        "is": -0.5824619
                    },
                    {
                        "Prop": -1.2231317e-05
                    },
                    {
                        "agate": -1.0084622e-05
                    },
                    {
                        "));": -0.52598184
                    },
                    {
                        "\n": -0.004964052
                    },
                    {
                        "                      ": -0.004166241
                    },
                    {
                        " LOG": -0.0056517804
                    },
                    {
                        "GER": -7.698572e-06
                    },
                    {
                        ".": -2.2245786e-05
                    },
                    {
                        "log": -0.0011204908
                    },
                    {
                        "(": -8.176345e-06
                    },
                    {
                        "Level": -0.0001086796
                    },
                    {
                        ".": -3.529076e-06
                    },
                    {
                        "FIN": -0.0035291205
                    },
                    {
                        "ER": -6.6619094e-07
                    },
                    {
                        ",": -0.0011611878
                    },
                    {
                        " \"": -0.00047183523
                    },
                    {
                        "sc": -0.0020256434
                    },
                    {
                        "hed": -4.277735e-07
                    },
                    {
                        "uling": -3.8935006e-05
                    },
                    {
                        " a": -0.00045203813
                    },
                    {
                        " build": -8.638288e-05
                    },
                    {
                        " of": -0.00021860692
                    },
                    {
                        " {": -0.0005653418
                    },
                    {
                        "0": -6.563869e-05
                    },
                    {
                        "}": -3.3689823e-05
                    },
                    {
                        " from": -0.0005800119
                    },
                    {
                        " {": -9.854499e-05
                    },
                    {
                        "1": -3.4642555e-05
                    },
                    {
                        "}": -0.0002202777
                    },
                    {
                        "\",": -0.0010568841
                    },
                    {
                        " new": -0.0016985802
                    },
                    {
                        " Object": -6.325358e-05
                    },
                    {
                        "[]": -2.4152187e-05
                    },
                    {
                        "{": -0.007888439
                    },
                    {
                        "project": -0.0075093214
                    },
                    {
                        ",": -0.0014208646
                    },
                    {
                        " context": -0.004917808
                    },
                    {
                        "});": -0.0007186854
                    },
                    {
                        "\n": -0.001877177
                    },
                    {
                        "                  ": -0.0032177067
                    },
                    {
                        " }": -2.5225998e-05
                    },
                    {
                        "\n": -0.00739715
                    },
                    {
                        "                  ": -0.0045212386
                    },
                    {
                        " Cause": -0.019435631
                    },
                    {
                        ".": -0.004942669
                    },
                    {
                        "Up": -5.8130416e-05
                    },
                    {
                        "stream": -2.2245786e-05
                    },
                    {
                        "Cause": -8.256821e-05
                    },
                    {
                        " cause": -0.000716181
                    },
                    {
                        " =": -0.00092974096
                    },
                    {
                        " new": -0.00057309505
                    },
                    {
                        " Cause": -8.781245e-05
                    },
                    {
                        ".": -7.698572e-06
                    },
                    {
                        "Up": -2.28437e-05
                    },
                    {
                        "stream": -2.8138238e-06
                    },
                    {
                        "Cause": -1.2946569e-05
                    },
                    {
                        "(": -0.00084944133
                    },
                    {
                        "inv": -0.0021805272
                    },
                    {
                        "oking": -2.5744682e-06
                    },
                    {
                        "Run": -5.490991e-05
                    },
                    {
                        ");": -0.00081788294
                    },
                    {
                        "\n": -0.0011928758
                    },
                    {
                        "                  ": -0.00141209
                    },
                    {
                        " Cause": -0.018037278
                    },
                    {
                        "Action": -6.146545e-05
                    },
                    {
                        " cause": -0.0012763658
                    },
                    {
                        "Action": -5.300351e-05
                    },
                    {
                        " =": -0.00040260222
                    },
                    {
                        " new": -0.0011641699
                    },
                    {
                        " Cause": -6.2299914e-05
                    },
                    {
                        "Action": -1.2351458e-05
                    },
                    {
                        "(": -7.3745825e-05
                    },
                    {
                        "cause": -0.000431523
                    },
                    {
                        ");": -0.00025837286
                    },
                    {
                        "\n": -0.0015129094
                    },
                    {
                        "                  ": -0.0012974339
                    },
                    {
                        " actions": -0.0061073885
                    },
                    {
                        ".": -5.896488e-05
                    },
                    {
                        "add": -6.2699432e-06
                    },
                    {
                        "(": -0.00021598431
                    },
                    {
                        "cause": -0.16508451
                    },
                    {
                        "Action": -3.8103353e-05
                    },
                    {
                        ");": -0.0016421579
                    },
                    {
                        "\n": -0.008855414
                    },
                    {
                        "                  ": -0.010198466
                    },
                    {
                        " List": -0.08562449
                    },
                    {
                        "<": -0.00089639076
                    },
                    {
                        "Parameter": -0.0020888334
                    },
                    {
                        "Value": -4.0843282e-05
                    },
                    {
                        ">": -5.0778563e-06
                    },
                    {
                        " parameters": -0.002893301
                    },
                    {
                        " =": -0.0014288637
                    },
                    {
                        " step": -0.00910753
                    },
                    {
                        ".": -4.9187893e-05
                    },
                    {
                        "get": -6.838237e-05
                    },
                    {
                        "Parameters": -9.21049e-05
                    },
                    {
                        "();": -0.000717375
                    },
                    {
                        "\n": -0.0027845118
                    },
                    {
                        "                  ": -0.0066430033
                    },
                    {
                        " if": -0.02052877
                    },
                    {
                        " (": -0.0099892365
                    },
                    {
                        "param": -0.0033966978
                    },
                    {
                        "eters": -1.0444119e-05
                    },
                    {
                        " !=": -0.0038673768
                    },
                    {
                        " null": -0.0008271887
                    },
                    {
                        ")": -0.012195168
                    },
                    {
                        " {": -0.00038686107
                    },
                    {
                        "\n": -0.0018853584
                    },
                    {
                        "                      ": -0.006839169
                    },
                    {
                        " parameters": -0.016302703
                    },
                    {
                        " =": -0.001089046
                    },
                    {
                        " complete": -0.0028773393
                    },
                    {
                        "Default": -9.675685e-05
                    },
                    {
                        "Parameters": -2.6538237e-05
                    },
                    {
                        "(": -0.0008057133
                    },
                    {
                        "param": -0.0034610524
                    },
                    {
                        "eters": -3.529076e-06
                    },
                    {
                        ",": -0.00092568324
                    },
                    {
                        " project": -0.48772687
                    },
                    {
                        ");": -0.001759124
                    },
                    {
                        "\n": -0.0022276568
                    },
                    {
                        "                      ": -0.0038679747
                    },
                    {
                        " actions": -0.013959261
                    },
                    {
                        ".": -4.966285e-05
                    },
                    {
                        "add": -1.3306066e-05
                    },
                    {
                        "(": -0.00019905198
                    },
                    {
                        "new": -0.0015357721
                    },
                    {
                        " Parameters": -0.0002609945
                    },
                    {
                        "Action": -4.361666e-06
                    },
                    {
                        "(": -5.7413286e-05
                    },
                    {
                        "param": -0.0012436023
                    },
                    {
                        "eters": -1.5805701e-05
                    },
                    {
                        "));": -0.00047809698
                    },
                    {
                        "\n": -0.0013930504
                    },
                    {
                        "                  ": -0.0031698712
                    },
                    {
                        " }": -6.4566746e-05
                    },
                    {
                        "\n": -0.010604402
                    },
                    {
                        "                  ": -0.010049985
                    },
                    {
                        " Integer": -0.09438915
                    },
                    {
                        " quiet": -0.00087682175
                    },
                    {
                        "Per": -5.3597672e-05
                    },
                    {
                        "iod": -1.0561456e-05
                    },
                    {
                        " =": -0.0018796852
                    },
                    {
                        " step": -0.0019447798
                    },
                    {
                        ".": -2.5464416e-05
                    },
                    {
                        "get": -5.9085025e-05
                    },
                    {
                        "Qu": -3.3212986e-05
                    },
                    {
                        "iet": -2.8138238e-06
                    },
                    {
                        "Per": -4.361666e-06
                    },
                    {
                        "iod": -5.4364154e-06
                    },
                    {
                        "();": -0.0012946883
                    },
                    {
                        "\n": -0.0016072908
                    },
                    {
                        "                  ": -0.003525951
                    },
                    {
                        " if": -0.032788027
                    },
                    {
                        " (": -0.0038194496
                    },
                    {
                        "quiet": -0.0014813296
                    },
                    {
                        "Per": -1.2622395e-06
                    },
                    {
                        "iod": -1.022884e-06
                    },
                    {
                        " ==": -0.0038456572
                    },
                    {
                        " null": -0.00015815685
                    },
                    {
                        ")": -0.0059755836
                    },
                    {
                        " {": -0.0009002092
                    },
                    {
                        "\n": -0.00068289746
                    },
                    {
                        "                      ": -0.003116237
                    },
                    {
                        " quiet": -0.03452652
                    },
                    {
                        "Per": -1.3823812e-06
                    },
                    {
                        "iod": -8.0580685e-06
                    },
                    {
                        " =": -0.0005308135
                    },
                    {
                        " project": -0.011031177
                    },
                    {
                        ".": -0.0020220587
                    },
                    {
                        "get": -6.873624e-05
                    },
                    {
                        "Qu": -0.00011082348
                    },
                    {
                        "iet": -5.4364154e-06
                    },
                    {
                        "Per": -3.130471e-05
                    },
                    {
                        "iod": -1.5006569e-06
                    },
                    {
                        "();": -0.0002861541
                    },
                    {
                        "\n": -0.00082850276
                    },
                    {
                        "                  ": -0.0028912679
                    },
                    {
                        " }": -2.4750101e-05
                    },
                    {
                        "\n": -0.011693961
                    },
                    {
                        "                  ": -0.013438564
                    },
                    {
                        " Que": -0.1797478
                    },
                    {
                        "ue": -6.031526e-06
                    },
                    {
                        "Task": -0.00856591
                    },
                    {
                        "Future": -9.966347e-06
                    },
                    {
                        "<?": -0.007975614
                    },
                    {
                        ">": -0.0029713733
                    },
                    {
                        " f": -0.017239891
                    },
                    {
                        " =": -0.0073570367
                    },
                    {
                        " project": -0.08997264
                    },
                    {
                        ".": -0.0036899776
                    },
                    {
                        "sche": -0.00011261161
                    },
                    {
                        "dule": -1.5006569e-06
                    },
                    {
                        "Build": -8.0580685e-06
                    },
                    {
                        "2": -0.0019441826
                    },
                    {
                        "(": -0.00021049884
                    },
                    {
                        "quiet": -0.013702234
                    },
                    {
                        "Per": -9.055464e-07
                    },
                    {
                        "iod": -6.827632e-08
                    },
                    {
                        ",": -0.002558482
                    },
                    {
                        " actions": -0.08668593
                    },
                    {
                        ".": -0.0023922492
                    },
                    {
                        "to": -0.00012214643
                    },
                    {
                        "Array": -6.031526e-06
                    },
                    {
                        "(": -6.563869e-05
                    },
                    {
                        "new": -0.0007253057
                    },
                    {
                        " Action": -0.00034249946
                    },
                    {
                        "[": -0.00017759066
                    },
                    {
                        "actions": -0.0038904152
                    },
                    {
                        ".": -0.00012942286
                    },
                    {
                        "size": -1.1991961e-05
                    },
                    {
                        "()": -2.9756868e-05
                    },
                    {
                        "])": -0.0008066679
                    },
                    {
                        ");": -0.00064561894
                    },
                    {
                        "\n": -0.0031023638
                    },
                    {
                        "                  ": -0.0024150733
                    },
                    {
                        " if": -0.0031660444
                    },
                    {
                        " (": -0.0024718363
                    },
                    {
                        "f": -0.0009773466
                    },
                    {
                        " ==": -0.0032670414
                    },
                    {
                        " null": -0.000111420464
                    },
                    {
                        ")": -0.001633204
                    },
                    {
                        " {": -0.0007605586
                    },
                    {
                        "\n": -0.0013876775
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6591,
                    6593,
                    6597,
                    6606,
                    6608,
                    6612,
                    6613,
                    6615,
                    6616,
                    6634,
                    6640,
                    6644,
                    6645,
                    6647,
                    6648,
                    6649,
                    6657,
                    6659,
                    6661,
                    6664,
                    6665,
                    6667,
                    6668,
                    6670,
                    6675,
                    6676,
                    6677,
                    6695,
                    6704,
                    6705,
                    6708,
                    6711,
                    6714,
                    6717,
                    6724,
                    6726,
                    6727,
                    6731,
                    6736,
                    6744,
                    6745,
                    6747,
                    6749,
                    6755,
                    6760,
                    6764,
                    6768,
                    6769,
                    6771,
                    6775,
                    6777,
                    6778,
                    6785,
                    6788,
                    6789,
                    6807,
                    6812,
                    6813,
                    6816,
                    6822,
                    6823,
                    6826,
                    6832,
                    6838,
                    6839,
                    6843,
                    6847,
                    6848,
                    6853,
                    6860,
                    6864,
                    6868,
                    6873,
                    6874,
                    6882,
                    6884,
                    6891,
                    6892,
                    6895,
                    6899,
                    6906,
                    6910,
                    6912,
                    6914,
                    6916,
                    6917,
                    6935,
                    6940,
                    6941,
                    6947,
                    6948,
                    6956,
                    6958,
                    6962,
                    6968,
                    6972,
                    6973,
                    6974,
                    6977,
                    6978,
                    6996,
                    6999,
                    7001,
                    7005,
                    7006,
                    7009,
                    7013,
                    7016,
                    7018,
                    7019,
                    7041,
                    7046,
                    7053,
                    7061,
                    7063,
                    7067,
                    7074,
                    7077,
                    7078,
                    7100,
                    7108,
                    7111,
                    7115,
                    7120,
                    7122,
                    7123,
                    7128,
                    7129,
                    7131,
                    7135,
                    7140,
                    7143,
                    7144,
                    7166,
                    7174,
                    7175,
                    7178,
                    7179,
                    7182,
                    7188,
                    7195,
                    7201,
                    7202,
                    7209,
                    7210,
                    7213,
                    7217,
                    7222,
                    7225,
                    7226,
                    7248,
                    7252,
                    7255,
                    7256,
                    7259,
                    7260,
                    7265,
                    7266,
                    7269,
                    7271,
                    7272,
                    7274,
                    7276,
                    7279,
                    7284,
                    7286,
                    7292,
                    7295,
                    7297,
                    7298,
                    7299,
                    7304,
                    7306,
                    7307,
                    7308,
                    7310,
                    7314,
                    7321,
                    7323,
                    7324,
                    7331,
                    7332,
                    7340,
                    7343,
                    7344,
                    7362,
                    7364,
                    7365,
                    7383,
                    7389,
                    7390,
                    7392,
                    7398,
                    7403,
                    7409,
                    7411,
                    7415,
                    7421,
                    7422,
                    7424,
                    7430,
                    7435,
                    7436,
                    7439,
                    7444,
                    7447,
                    7449,
                    7450,
                    7468,
                    7474,
                    7480,
                    7486,
                    7492,
                    7494,
                    7498,
                    7504,
                    7510,
                    7511,
                    7516,
                    7518,
                    7519,
                    7537,
                    7545,
                    7546,
                    7549,
                    7550,
                    7555,
                    7561,
                    7563,
                    7564,
                    7582,
                    7587,
                    7588,
                    7597,
                    7602,
                    7603,
                    7614,
                    7616,
                    7621,
                    7622,
                    7625,
                    7635,
                    7638,
                    7639,
                    7657,
                    7660,
                    7662,
                    7667,
                    7672,
                    7675,
                    7680,
                    7681,
                    7683,
                    7684,
                    7706,
                    7717,
                    7719,
                    7728,
                    7735,
                    7745,
                    7746,
                    7751,
                    7756,
                    7757,
                    7765,
                    7767,
                    7768,
                    7790,
                    7798,
                    7799,
                    7802,
                    7803,
                    7806,
                    7817,
                    7823,
                    7824,
                    7829,
                    7834,
                    7837,
                    7838,
                    7856,
                    7858,
                    7859,
                    7877,
                    7885,
                    7891,
                    7894,
                    7897,
                    7899,
                    7904,
                    7905,
                    7908,
                    7910,
                    7913,
                    7916,
                    7919,
                    7922,
                    7923,
                    7941,
                    7944,
                    7946,
                    7951,
                    7954,
                    7957,
                    7960,
                    7965,
                    7966,
                    7968,
                    7969,
                    7991,
                    7997,
                    8000,
                    8003,
                    8005,
                    8013,
                    8014,
                    8017,
                    8019,
                    8022,
                    8025,
                    8028,
                    8031,
                    8032,
                    8050,
                    8052,
                    8053,
                    8071,
                    8075,
                    8077,
                    8081,
                    8087,
                    8089,
                    8090,
                    8092,
                    8094,
                    8102,
                    8103,
                    8107,
                    8111,
                    8116,
                    8117,
                    8118,
                    8123,
                    8126,
                    8129,
                    8130,
                    8138,
                    8139,
                    8141,
                    8146,
                    8147,
                    8150,
                    8157,
                    8158,
                    8165,
                    8166,
                    8170,
                    8172,
                    8174,
                    8176,
                    8177,
                    8195,
                    8198,
                    8200,
                    8201,
                    8204,
                    8209,
                    8210,
                    8212
                ]
            },
            "finish_reason": "length"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "example",
                    ".",
                    "dem",
                    "o"
                ],
                "token_logprobs": [
                    -0.003619625,
                    -0.06962459,
                    -0.07238755,
                    -0.45132637,
                    -0.2025628,
                    -0.018325714,
                    -9.055464e-07,
                    -0.0012803064,
                    -0.00025181074,
                    -0.19149947,
                    -0.12813509,
                    -0.15956289,
                    -0.032964125,
                    -0.017729085,
                    -2.0815281e-05,
                    -0.47946948,
                    -0.5712767,
                    -0.08668567,
                    -0.24132681,
                    -0.041043278,
                    -0.0062701595,
                    -8.7733215e-06,
                    -0.19264978,
                    -2.8682118e-05,
                    -0.001478585,
                    -0.0012993431,
                    -0.30613688,
                    -0.095630646,
                    -0.07163882,
                    -0.8694113,
                    -1.4717324,
                    -0.7148871,
                    -0.0013781269,
                    -2.1266167,
                    -0.010023314,
                    -2.713283,
                    -0.03524779
                ],
                "top_logprobs": [
                    {
                        "\n": -0.003619625
                    },
                    {
                        "          ": -0.06962459
                    },
                    {
                        " if": -0.07238755
                    },
                    {
                        " (": -0.45132637
                    },
                    {
                        " !": -0.2025628
                    },
                    {
                        "step": -0.018325714
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012803064
                    },
                    {
                        "Wait": -0.00025181074
                    },
                    {
                        "()": -0.19149947
                    },
                    {
                        " ||": -0.12813509
                    },
                    {
                        " (": -0.15956289
                    },
                    {
                        "item": -0.032964125
                    },
                    {
                        " instance": -0.017729085
                    },
                    {
                        "of": -2.0815281e-05
                    },
                    {
                        " Job": -0.47946948
                    },
                    {
                        ")": -0.5712767
                    },
                    {
                        " ||": -0.08668567
                    },
                    {
                        " (": -0.24132681
                    },
                    {
                        "item": -0.041043278
                    },
                    {
                        " instance": -0.0062701595
                    },
                    {
                        "of": -8.7733215e-06
                    },
                    {
                        " Que": -0.19264978
                    },
                    {
                        "ue": -2.8682118e-05
                    },
                    {
                        ".": -0.001478585
                    },
                    {
                        "Task": -0.0012993431
                    },
                    {
                        "))": -0.30613688
                    },
                    {
                        " {": -0.095630646
                    },
                    {
                        "\n": -0.07163882
                    },
                    {
                        "              ": -0.7363298
                    },
                    {
                        "package": -1.4717324
                    },
                    {
                        " com": -0.7148871
                    },
                    {
                        ".": -0.0013781269
                    },
                    {
                        "example": -2.1266167
                    },
                    {
                        ".": -0.010023314
                    },
                    {
                        "dem": -2.713283
                    },
                    {
                        "o": -0.03524779
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574,
                    6574
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 1393,
        "completion_tokens": 1200,
        "total_tokens": 2593
    },
    "validation_result": [
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run invokingBuild = getContext().get(Run.class);\n               if(invokingBuild == null){\n                   throw new AbortException(\"The invoking build was not found\");\n               }\n               Node node = invokingBuild.getExecutor().getOwner();\n               if(node == null){\n                   throw new AbortException(\"The node that the invoking build was running on was not found\");\n               }\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               LOGGER.log(Level.FINE, \"Triggering a build of {0}\", item.getFullName());\n               // TODO can we get an owner reference here?\n               Node node = getContext().get(Node.class);\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               BuildListener listener = getContext().get(BuildListener.class);\n               Node node = getContext().get(Node.class);\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() ) {\n",
            "correctness": "test_timeout"
        },
        {
            "patch": "           if (!step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run invokingRun = getContext().get(Run.class);\n               TaskListener listener = getContext().get(TaskListener.class);\n               Node node = invokingRun.getExecutor().getOwner();\n               if (item instanceof Job) {\n                   final Job project = (Job) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate ));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Computer node = Computer.currentComputer();\n",
            "correctness": "test_timeout"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               if (item instanceof Job) {\n                   final Job<?,?> project = (Job<?,?>) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context, isPropagate));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n",
            "correctness": "uncompilable"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success"
        }
    ]
}