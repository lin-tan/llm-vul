{
    "id": "cmpl-6lSegAdFuEv7QsxtC8F2ULhg4uPka",
    "object": "text_completion",
    "created": 1676769586,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "           if ( !step.getWait() || !(item instanceof ItemGroup)) {\n               LOGGER.log(Level.FINE, \"about to schedule a build of {0}\", item.getFullName());\n               Node node = Computer.currentComputer().getNode();\n",
            "index": 0,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " !",
                    "(",
                    "item",
                    " instance",
                    "of",
                    " Item",
                    "Group",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FINE",
                    ",",
                    " \"",
                    "about",
                    " to",
                    " schedule",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    "\",",
                    " item",
                    ".",
                    "get",
                    "Full",
                    "Name",
                    "());",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " Computer",
                    ".",
                    "current",
                    "Computer",
                    "().",
                    "get",
                    "Node",
                    "();",
                    "\n",
                    "<|endoftext|>",
                    "\"",
                    "use",
                    " strict",
                    "\";",
                    "\n",
                    "Object"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -0.20284843,
                    -0.018213596,
                    -9.055464e-07,
                    -0.0012413335,
                    -0.00025097816,
                    -0.19275457,
                    -0.12290174,
                    -4.210884,
                    -0.07454615,
                    -0.098878205,
                    -0.013582412,
                    -4.9902206e-05,
                    -2.5657275,
                    -0.5735446,
                    -0.36656606,
                    -0.028130706,
                    -0.05447227,
                    -1.1254659,
                    -2.2953544,
                    -0.00034106892,
                    -0.0003407113,
                    -0.057510164,
                    -0.0003151312,
                    -0.0055222525,
                    -7.005035e-05,
                    -0.66937035,
                    -0.031876225,
                    -0.054053485,
                    -4.7621083,
                    -0.0022623644,
                    -1.0081586,
                    -1.3086393,
                    -0.25929937,
                    -0.07613782,
                    -0.07715195,
                    -0.0016423973,
                    -0.019263288,
                    -0.28562245,
                    -0.46328545,
                    -0.82100666,
                    -0.0013413618,
                    -0.07412427,
                    -0.031458266,
                    -0.0017087897,
                    -0.020809956,
                    -0.9318355,
                    -2.2181969,
                    -0.010669165,
                    -0.014376281,
                    -2.2088544,
                    -0.00023714808,
                    -0.000501949,
                    -0.00023714808,
                    -0.012509086,
                    -0.00024453807,
                    -0.0003170395,
                    -0.0010575993,
                    -0.017120134,
                    -0.6216003,
                    -5.6817403,
                    -0.013383773,
                    -0.0043478543,
                    -0.040323462,
                    -0.015004973,
                    -1.7690412
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        "step": -0.018213596
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012413335
                    },
                    {
                        "Wait": -0.00025097816
                    },
                    {
                        "()": -0.19275457
                    },
                    {
                        " ||": -0.12290174
                    },
                    {
                        " (": -0.16058564
                    },
                    {
                        "(": -0.07454615
                    },
                    {
                        "item": -0.098878205
                    },
                    {
                        " instance": -0.013582412
                    },
                    {
                        "of": -4.9902206e-05
                    },
                    {
                        " Que": -1.0763637
                    },
                    {
                        "Group": -0.5735446
                    },
                    {
                        "))": -0.36656606
                    },
                    {
                        " {": -0.028130706
                    },
                    {
                        "\n": -0.05447227
                    },
                    {
                        "<|endoftext|>": -0.5194382
                    },
                    {
                        " Run": -1.8350222
                    },
                    {
                        "GER": -0.00034106892
                    },
                    {
                        ".": -0.0003407113
                    },
                    {
                        "log": -0.057510164
                    },
                    {
                        "(": -0.0003151312
                    },
                    {
                        "Level": -0.0055222525
                    },
                    {
                        ".": -7.005035e-05
                    },
                    {
                        "FINE": -0.66937035
                    },
                    {
                        ",": -0.031876225
                    },
                    {
                        " \"": -0.054053485
                    },
                    {
                        "S": -1.7647711
                    },
                    {
                        " to": -0.0022623644
                    },
                    {
                        " schedule": -1.0081586
                    },
                    {
                        " {": -1.1094633
                    },
                    {
                        " build": -0.25929937
                    },
                    {
                        " of": -0.07613782
                    },
                    {
                        " {": -0.07715195
                    },
                    {
                        "0": -0.0016423973
                    },
                    {
                        "}": -0.019263288
                    },
                    {
                        "\",": -0.28562245
                    },
                    {
                        " item": -0.46328545
                    },
                    {
                        ");": -0.58454114
                    },
                    {
                        "get": -0.0013413618
                    },
                    {
                        "Full": -0.07412427
                    },
                    {
                        "Name": -0.031458266
                    },
                    {
                        "());": -0.0017087897
                    },
                    {
                        "\n": -0.020809956
                    },
                    {
                        "<|endoftext|>": -0.6019967
                    },
                    {
                        " Node": -2.2181969
                    },
                    {
                        " node": -0.010669165
                    },
                    {
                        " =": -0.014376281
                    },
                    {
                        " Exec": -1.6132131
                    },
                    {
                        ".": -0.00023714808
                    },
                    {
                        "current": -0.000501949
                    },
                    {
                        "Computer": -0.00023714808
                    },
                    {
                        "().": -0.012509086
                    },
                    {
                        "get": -0.00024453807
                    },
                    {
                        "Node": -0.0003170395
                    },
                    {
                        "();": -0.0010575993
                    },
                    {
                        "\n": -0.017120134
                    },
                    {
                        "<|endoftext|>": -0.6216003
                    },
                    {
                        "package": -1.473413
                    },
                    {
                        "use": -0.013383773
                    },
                    {
                        " strict": -0.0043478543
                    },
                    {
                        "\";": -0.040323462
                    },
                    {
                        "\n": -0.015004973
                    },
                    {
                        "\n": -0.81656176
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6519,
                    6523,
                    6532,
                    6534,
                    6539,
                    6544,
                    6546,
                    6548,
                    6549,
                    6563,
                    6567,
                    6570,
                    6571,
                    6574,
                    6575,
                    6580,
                    6581,
                    6585,
                    6586,
                    6588,
                    6593,
                    6596,
                    6605,
                    6607,
                    6613,
                    6616,
                    6618,
                    6619,
                    6620,
                    6622,
                    6627,
                    6628,
                    6631,
                    6635,
                    6639,
                    6643,
                    6644,
                    6658,
                    6663,
                    6668,
                    6670,
                    6679,
                    6680,
                    6687,
                    6695,
                    6698,
                    6701,
                    6705,
                    6708,
                    6709,
                    6709,
                    6709,
                    6709,
                    6709,
                    6709,
                    6709
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if (!step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               if (item instanceof Job) {\n                   final Job project = (Job) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n                       throw new AbortException(\"F",
            "index": 1,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (!",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " final",
                    " Job",
                    " project",
                    " =",
                    " (",
                    "Job",
                    ")",
                    " item",
                    ";",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "S",
                    "ched",
                    "uling",
                    " project",
                    ":",
                    " \"",
                    " +",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "project",
                    "));",
                    "\n",
                    "                  ",
                    " node",
                    ".",
                    "add",
                    "Action",
                    "(",
                    "new",
                    " Label",
                    "Action",
                    "(",
                    "Mess",
                    "ages",
                    ".",
                    "Build",
                    "Trigger",
                    "Step",
                    "Exec",
                    "ution",
                    "_",
                    "building",
                    "_(",
                    "project",
                    ".",
                    "get",
                    "Full",
                    "Display",
                    "Name",
                    "()",
                    "))",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Action",
                    ">",
                    " actions",
                    " =",
                    " new",
                    " Array",
                    "List",
                    "<",
                    ">",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "                      ",
                    " Step",
                    "Context",
                    " context",
                    " =",
                    " get",
                    "Context",
                    "();",
                    "\n",
                    "                      ",
                    " boolean",
                    " is",
                    "Prop",
                    "agate",
                    " =",
                    " ",
                    " step",
                    ".",
                    "is",
                    "Prop",
                    "agate",
                    "();",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Build",
                    "Trigger",
                    "Action",
                    "(",
                    "context",
                    ",",
                    "is",
                    "Prop",
                    "agate",
                    "));",
                    "\n",
                    "                      ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "FIN",
                    "ER",
                    ",",
                    " \"",
                    "sc",
                    "hed",
                    "uling",
                    " a",
                    " build",
                    " of",
                    " {",
                    "0",
                    "}",
                    " from",
                    " {",
                    "1",
                    "}",
                    "\",",
                    " new",
                    " Object",
                    "[]",
                    "{",
                    "project",
                    ",",
                    " context",
                    "});",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    " cause",
                    " =",
                    " new",
                    " Cause",
                    ".",
                    "Up",
                    "stream",
                    "Cause",
                    "(",
                    "inv",
                    "oking",
                    "Run",
                    ");",
                    "\n",
                    "                  ",
                    " Cause",
                    "Action",
                    " cause",
                    "Action",
                    " =",
                    " new",
                    " Cause",
                    "Action",
                    "(",
                    "cause",
                    ");",
                    "\n",
                    "                  ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "cause",
                    "Action",
                    ");",
                    "\n",
                    "                  ",
                    " List",
                    "<",
                    "Parameter",
                    "Value",
                    ">",
                    " parameters",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Parameters",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "param",
                    "eters",
                    " !=",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " parameters",
                    " =",
                    " complete",
                    "Default",
                    "Parameters",
                    "(",
                    "param",
                    "eters",
                    ",",
                    " project",
                    ");",
                    "\n",
                    "                      ",
                    " actions",
                    ".",
                    "add",
                    "(",
                    "new",
                    " Parameters",
                    "Action",
                    "(",
                    "param",
                    "eters",
                    "));",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Integer",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " step",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "quiet",
                    "Per",
                    "iod",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " quiet",
                    "Per",
                    "iod",
                    " =",
                    " project",
                    ".",
                    "get",
                    "Qu",
                    "iet",
                    "Per",
                    "iod",
                    "();",
                    "\n",
                    "                  ",
                    " }",
                    "\n",
                    "                  ",
                    " Que",
                    "ue",
                    "Task",
                    "Future",
                    "<?",
                    ">",
                    " f",
                    " =",
                    " project",
                    ".",
                    "sche",
                    "dule",
                    "Build",
                    "2",
                    "(",
                    "quiet",
                    "Per",
                    "iod",
                    ",",
                    " actions",
                    ".",
                    "to",
                    "Array",
                    "(",
                    "new",
                    " Action",
                    "[",
                    "actions",
                    ".",
                    "size",
                    "()",
                    "])",
                    ");",
                    "\n",
                    "                  ",
                    " if",
                    " (",
                    "f",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                      ",
                    " throw",
                    " new",
                    " Ab",
                    "ort",
                    "Exception",
                    "(\"",
                    "F"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -1.7237029,
                    -0.11057747,
                    -3.4089344e-06,
                    -0.001979953,
                    -0.00031417754,
                    -0.47877416,
                    -0.15296021,
                    -0.22031528,
                    -0.027295714,
                    -0.017442817,
                    -1.6521892e-05,
                    -0.45724738,
                    -0.7128374,
                    -0.093569815,
                    -0.2492309,
                    -0.028609488,
                    -0.006753471,
                    -9.72699e-06,
                    -0.21667759,
                    -3.7386224e-05,
                    -0.0017096263,
                    -0.0015517124,
                    -0.20838867,
                    -0.12625648,
                    -0.06260434,
                    -0.698378,
                    -2.1142776,
                    -0.7925548,
                    -0.56652844,
                    -0.087142296,
                    -9.72699e-06,
                    -0.65220964,
                    -0.23631327,
                    -0.0028427895,
                    -0.013660962,
                    -0.021809619,
                    -0.7533277,
                    -0.040031154,
                    -0.39869294,
                    -0.0030502893,
                    -0.010228756,
                    -0.0005036208,
                    -0.00086721935,
                    -0.01643824,
                    -0.00037863376,
                    -0.011944984,
                    -0.008285621,
                    -0.3312668,
                    -0.00043438585,
                    -0.00017496901,
                    -1.8601542e-06,
                    -3.6482897e-06,
                    -0.00032920254,
                    -0.0012181188,
                    -0.01577746,
                    -0.004240823,
                    -2.4866502e-05,
                    -0.00010748563,
                    -0.008199804,
                    -0.00047028364,
                    -0.0015621595,
                    -0.0014323255,
                    -0.08466303,
                    -1.4854846e-05,
                    -2.2604345e-05,
                    -6.2699432e-06,
                    -6.3492e-05,
                    -4.036551e-05,
                    -3.170517e-06,
                    -0.00010569845,
                    -0.0005457812,
                    -0.0062122224,
                    -0.005709987,
                    -0.00455902,
                    -0.0041333823,
                    -0.033951722,
                    -0.00046968853,
                    -0.00012429406,
                    -6.031526e-06,
                    -5.7770918e-05,
                    -0.002811585,
                    -0.0004236524,
                    -5.3837026e-05,
                    -0.0007383088,
                    -0.0038505637,
                    -5.4364154e-06,
                    -9.115311e-05,
                    -0.0013925727,
                    -0.00028722888,
                    -0.0017138022,
                    -0.00034798586,
                    -1.37819625e-05,
                    -2.5344274e-05,
                    -0.0007142718,
                    -0.0010170271,
                    -0.008178289,
                    -0.00076043844,
                    -6.277768e-05,
                    -0.0034550095,
                    -0.009168825,
                    -2.5744682e-06,
                    -0.0003170395,
                    -0.00016852893,
                    -0.00021300316,
                    -0.010481159,
                    -0.0071038627,
                    -0.041243643,
                    -0.000501949,
                    -0.0018173438,
                    -7.584048e-06,
                    -0.0028271873,
                    -0.0010788419,
                    -0.0010407129,
                    -0.000249787,
                    -2.8138238e-06,
                    -0.0004097594,
                    -0.035220623,
                    -8.459475e-05,
                    -0.00313824,
                    -0.0026999966,
                    -0.016626215,
                    -0.005480839,
                    -0.0006532539,
                    -2.8326363e-05,
                    -0.00076175254,
                    -0.00040558525,
                    -0.002072052,
                    -0.00011809803,
                    -0.0017038938,
                    -0.003968324,
                    -0.017107705,
                    -4.8353428e-05,
                    -0.00054649834,
                    -0.00038208987,
                    -0.00095175515,
                    -9.72699e-06,
                    -6.551948e-05,
                    -0.0011769431,
                    -0.0030347444,
                    -0.037195593,
                    -0.01346726,
                    -0.00096607424,
                    -0.0012055287,
                    -0.0066847038,
                    -0.08848714,
                    -0.00080058357,
                    -1.8073477e-05,
                    -0.00028353152,
                    -3.2855354e-05,
                    -2.1529595e-05,
                    -0.0012215778,
                    -0.0049253595,
                    -0.0023819136,
                    -0.013745621,
                    -0.0001083201,
                    -9.490449e-06,
                    -7.958892e-05,
                    -0.004874266,
                    -0.0007858515,
                    -0.00011058788,
                    -0.00012477185,
                    -0.0006213445,
                    -0.0050514545,
                    -0.0064129834,
                    -0.6536047,
                    -2.3078366e-05,
                    -4.859278e-05,
                    -2.3497612,
                    -0.0062737004,
                    -0.0053780605,
                    -0.006528586,
                    -1.306671e-05,
                    -1.1278585e-05,
                    -0.0012900336,
                    -7.698572e-06,
                    -9.449002e-05,
                    -2.4543265e-06,
                    -0.0035295992,
                    -7.8540467e-07,
                    -0.001283706,
                    -0.0005180506,
                    -0.0021202546,
                    -4.277735e-07,
                    -5.300351e-05,
                    -0.0006059581,
                    -8.6144464e-05,
                    -0.00033904242,
                    -0.00064263685,
                    -0.00010021203,
                    -4.5613506e-05,
                    -0.00070353557,
                    -0.00013466804,
                    -4.775551e-05,
                    -0.00023321231,
                    -0.0009120831,
                    -0.0014875397,
                    -6.99302e-05,
                    -4.7279616e-05,
                    -0.0106288,
                    -0.006964785,
                    -0.0012992248,
                    -0.004960818,
                    -0.0005966542,
                    -0.002236439,
                    -0.0033910754,
                    -2.7013197e-05,
                    -0.0070938375,
                    -0.0038511024,
                    -0.018567175,
                    -0.003831895,
                    -3.4167595e-05,
                    -2.3317722e-05,
                    -9.794894e-05,
                    -0.0005967725,
                    -0.00076556916,
                    -0.00043641243,
                    -5.8367896e-05,
                    -7.584048e-06,
                    -1.6165199e-05,
                    -3.883893e-06,
                    -1.2112103e-05,
                    -0.0005575876,
                    -0.0015632352,
                    -3.6482897e-06,
                    -5.0500123e-05,
                    -0.00043987136,
                    -0.0011069442,
                    -0.0013990775,
                    -0.015861632,
                    -4.680184e-05,
                    -0.0010818259,
                    -6.48061e-05,
                    -0.0003119107,
                    -0.0009515168,
                    -8.5429216e-05,
                    -2.8445576e-05,
                    -4.9902206e-05,
                    -0.0003813765,
                    -0.0002698197,
                    -0.0014014654,
                    -0.0011439439,
                    -0.0051745707,
                    -5.2288255e-05,
                    -7.3446927e-06,
                    -0.00021622273,
                    -0.03207266,
                    -4.048565e-05,
                    -0.0006156178,
                    -0.008861308,
                    -0.009575125,
                    -0.06984673,
                    -0.00036372704,
                    -0.001292658,
                    -3.9172486e-05,
                    -3.529076e-06,
                    -0.0021236583,
                    -0.0009953076,
                    -0.006889761,
                    -3.8338017e-05,
                    -0.00017067656,
                    -6.015603e-05,
                    -0.00045406283,
                    -0.0021482075,
                    -0.0043982044,
                    -0.019679366,
                    -0.006136414,
                    -0.0023969086,
                    -3.2855354e-05,
                    -0.002776322,
                    -0.00042651527,
                    -0.009471986,
                    -0.000292475,
                    -0.0015437132,
                    -0.004562313,
                    -0.011640954,
                    -0.0007433184,
                    -0.002220249,
                    -8.578871e-05,
                    -2.4986643e-05,
                    -0.0005770326,
                    -0.0019434665,
                    -3.170517e-06,
                    -0.0007944392,
                    -0.23054595,
                    -0.0009729368,
                    -0.0016970286,
                    -0.0039100423,
                    -0.014410687,
                    -6.206056e-05,
                    -1.4736571e-05,
                    -0.00014814144,
                    -0.00078835577,
                    -0.00027363625,
                    -6.1516675e-06,
                    -3.237946e-05,
                    -0.00093624304,
                    -1.843017e-05,
                    -0.0003054706,
                    -0.0011487178,
                    -0.0031313633,
                    -3.2735214e-05,
                    -0.0088682845,
                    -0.00754091,
                    -0.0724779,
                    -0.00053957955,
                    -4.2631407e-05,
                    -1.2828294e-05,
                    -0.0013389739,
                    -0.0013642197,
                    -3.142485e-05,
                    -0.00016340296,
                    -3.3689823e-05,
                    -2.693682e-06,
                    -3.6482897e-06,
                    -4.9586424e-06,
                    -0.0012185966,
                    -0.0013766944,
                    -0.00279545,
                    -0.028874058,
                    -0.002209675,
                    -0.0012279053,
                    -2.4543265e-06,
                    -2.4543265e-06,
                    -0.0038820966,
                    -8.900641e-05,
                    -0.00577617,
                    -0.00064060936,
                    -0.0005528173,
                    -0.002334235,
                    -0.032550316,
                    -3.4089344e-06,
                    -1.0084622e-05,
                    -0.0003334368,
                    -0.011639989,
                    -0.001841944,
                    -6.9453374e-05,
                    -8.173468e-05,
                    -1.2828294e-05,
                    -9.4967785e-05,
                    -2.0966954e-06,
                    -0.00027184532,
                    -0.0006883838,
                    -0.0023949966,
                    -2.0218295e-05,
                    -0.010232428,
                    -0.011179863,
                    -0.12674464,
                    -4.1232483e-06,
                    -0.0032681178,
                    -9.966347e-06,
                    -0.006457074,
                    -0.0021293932,
                    -0.011804686,
                    -0.0053778216,
                    -0.09268223,
                    -0.0035744018,
                    -0.00010772499,
                    -1.7400124e-06,
                    -7.584048e-06,
                    -0.0017748267,
                    -0.00016101786,
                    -0.011114646,
                    -1.8601542e-06,
                    -6.827632e-08,
                    -0.0022642764,
                    -0.09022368,
                    -0.002392845,
                    -0.00011928824,
                    -8.176345e-06,
                    -6.170386e-05,
                    -0.00055639644,
                    -0.00031131558,
                    -0.00026278265,
                    -0.0033261264,
                    -0.0012052894,
                    -4.608659e-05,
                    -2.5105857e-05,
                    -0.0005473328,
                    -0.00048823532,
                    -0.002854028,
                    -0.0019818638,
                    -0.0028138575,
                    -0.0019034519,
                    -0.0010111793,
                    -0.0022941479,
                    -9.186649e-05,
                    -0.0015409667,
                    -0.0005740496,
                    -0.0010708455,
                    -0.0014677801,
                    -0.004271171,
                    -3.2973632e-05,
                    -0.00068277825,
                    -2.9311614e-06,
                    -0.00011821817,
                    -0.0011315913,
                    -0.0020258809
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        "step": -0.11057747
                    },
                    {
                        ".": -3.4089344e-06
                    },
                    {
                        "get": -0.001979953
                    },
                    {
                        "Wait": -0.00031417754
                    },
                    {
                        "()": -0.47877416
                    },
                    {
                        " ||": -0.15296021
                    },
                    {
                        " (": -0.22031528
                    },
                    {
                        "item": -0.027295714
                    },
                    {
                        " instance": -0.017442817
                    },
                    {
                        "of": -1.6521892e-05
                    },
                    {
                        " Job": -0.45724738
                    },
                    {
                        ")": -0.7128374
                    },
                    {
                        " ||": -0.093569815
                    },
                    {
                        " (": -0.2492309
                    },
                    {
                        "item": -0.028609488
                    },
                    {
                        " instance": -0.006753471
                    },
                    {
                        "of": -9.72699e-06
                    },
                    {
                        " Que": -0.21667759
                    },
                    {
                        "ue": -3.7386224e-05
                    },
                    {
                        ".": -0.0017096263
                    },
                    {
                        "Task": -0.0015517124
                    },
                    {
                        "))": -0.20838867
                    },
                    {
                        " {": -0.12625648
                    },
                    {
                        "\n": -0.06260434
                    },
                    {
                        "              ": -0.698378
                    },
                    {
                        " Run": -1.7663456
                    },
                    {
                        " (": -0.7925548
                    },
                    {
                        "item": -0.56652844
                    },
                    {
                        " instance": -0.087142296
                    },
                    {
                        "of": -9.72699e-06
                    },
                    {
                        " Job": -0.65220964
                    },
                    {
                        ")": -0.23631327
                    },
                    {
                        " {": -0.0028427895
                    },
                    {
                        "\n": -0.013660962
                    },
                    {
                        "                  ": -0.021809619
                    },
                    {
                        " final": -0.7533277
                    },
                    {
                        " Job": -0.040031154
                    },
                    {
                        " project": -0.39869294
                    },
                    {
                        " =": -0.0030502893
                    },
                    {
                        " (": -0.010228756
                    },
                    {
                        "Job": -0.0005036208
                    },
                    {
                        ")": -0.00086721935
                    },
                    {
                        " item": -0.01643824
                    },
                    {
                        ";": -0.00037863376
                    },
                    {
                        "\n": -0.011944984
                    },
                    {
                        "                  ": -0.008285621
                    },
                    {
                        " listener": -0.3312668
                    },
                    {
                        ".": -0.00043438585
                    },
                    {
                        "get": -0.00017496901
                    },
                    {
                        "Log": -1.8601542e-06
                    },
                    {
                        "ger": -3.6482897e-06
                    },
                    {
                        "().": -0.00032920254
                    },
                    {
                        "println": -0.0012181188
                    },
                    {
                        "(\"": -0.01577746
                    },
                    {
                        "S": -0.004240823
                    },
                    {
                        "ched": -2.4866502e-05
                    },
                    {
                        "uling": -0.00010748563
                    },
                    {
                        " project": -0.008199804
                    },
                    {
                        ":": -0.00047028364
                    },
                    {
                        " \"": -0.0015621595
                    },
                    {
                        " +": -0.0014323255
                    },
                    {
                        " Model": -0.08466303
                    },
                    {
                        "Hyper": -1.4854846e-05
                    },
                    {
                        "link": -2.2604345e-05
                    },
                    {
                        "Note": -6.2699432e-06
                    },
                    {
                        ".": -6.3492e-05
                    },
                    {
                        "en": -4.036551e-05
                    },
                    {
                        "code": -3.170517e-06
                    },
                    {
                        "To": -0.00010569845
                    },
                    {
                        "(": -0.0005457812
                    },
                    {
                        "project": -0.0062122224
                    },
                    {
                        "));": -0.005709987
                    },
                    {
                        "\n": -0.00455902
                    },
                    {
                        "                  ": -0.0041333823
                    },
                    {
                        " node": -0.033951722
                    },
                    {
                        ".": -0.00046968853
                    },
                    {
                        "add": -0.00012429406
                    },
                    {
                        "Action": -6.031526e-06
                    },
                    {
                        "(": -5.7770918e-05
                    },
                    {
                        "new": -0.002811585
                    },
                    {
                        " Label": -0.0004236524
                    },
                    {
                        "Action": -5.3837026e-05
                    },
                    {
                        "(": -0.0007383088
                    },
                    {
                        "Mess": -0.0038505637
                    },
                    {
                        "ages": -5.4364154e-06
                    },
                    {
                        ".": -9.115311e-05
                    },
                    {
                        "Build": -0.0013925727
                    },
                    {
                        "Trigger": -0.00028722888
                    },
                    {
                        "Step": -0.0017138022
                    },
                    {
                        "Exec": -0.00034798586
                    },
                    {
                        "ution": -1.37819625e-05
                    },
                    {
                        "_": -2.5344274e-05
                    },
                    {
                        "building": -0.0007142718
                    },
                    {
                        "_(": -0.0010170271
                    },
                    {
                        "project": -0.008178289
                    },
                    {
                        ".": -0.00076043844
                    },
                    {
                        "get": -6.277768e-05
                    },
                    {
                        "Full": -0.0034550095
                    },
                    {
                        "Display": -0.009168825
                    },
                    {
                        "Name": -2.5744682e-06
                    },
                    {
                        "()": -0.0003170395
                    },
                    {
                        "))": -0.00016852893
                    },
                    {
                        ");": -0.00021300316
                    },
                    {
                        "\n": -0.010481159
                    },
                    {
                        "                  ": -0.0071038627
                    },
                    {
                        " List": -0.041243643
                    },
                    {
                        "<": -0.000501949
                    },
                    {
                        "Action": -0.0018173438
                    },
                    {
                        ">": -7.584048e-06
                    },
                    {
                        " actions": -0.0028271873
                    },
                    {
                        " =": -0.0010788419
                    },
                    {
                        " new": -0.0010407129
                    },
                    {
                        " Array": -0.000249787
                    },
                    {
                        "List": -2.8138238e-06
                    },
                    {
                        "<": -0.0004097594
                    },
                    {
                        ">": -0.035220623
                    },
                    {
                        "();": -8.459475e-05
                    },
                    {
                        "\n": -0.00313824
                    },
                    {
                        "                  ": -0.0026999966
                    },
                    {
                        " if": -0.016626215
                    },
                    {
                        " (": -0.005480839
                    },
                    {
                        "step": -0.0006532539
                    },
                    {
                        ".": -2.8326363e-05
                    },
                    {
                        "get": -0.00076175254
                    },
                    {
                        "Wait": -0.00040558525
                    },
                    {
                        "())": -0.002072052
                    },
                    {
                        " {": -0.00011809803
                    },
                    {
                        "\n": -0.0017038938
                    },
                    {
                        "                      ": -0.003968324
                    },
                    {
                        " Step": -0.017107705
                    },
                    {
                        "Context": -4.8353428e-05
                    },
                    {
                        " context": -0.00054649834
                    },
                    {
                        " =": -0.00038208987
                    },
                    {
                        " get": -0.00095175515
                    },
                    {
                        "Context": -9.72699e-06
                    },
                    {
                        "();": -6.551948e-05
                    },
                    {
                        "\n": -0.0011769431
                    },
                    {
                        "                      ": -0.0030347444
                    },
                    {
                        " boolean": -0.037195593
                    },
                    {
                        " is": -0.01346726
                    },
                    {
                        "Prop": -0.00096607424
                    },
                    {
                        "agate": -0.0012055287
                    },
                    {
                        " =": -0.0066847038
                    },
                    {
                        " ": -0.08848714
                    },
                    {
                        " step": -0.00080058357
                    },
                    {
                        ".": -1.8073477e-05
                    },
                    {
                        "is": -0.00028353152
                    },
                    {
                        "Prop": -3.2855354e-05
                    },
                    {
                        "agate": -2.1529595e-05
                    },
                    {
                        "();": -0.0012215778
                    },
                    {
                        "\n": -0.0049253595
                    },
                    {
                        "                      ": -0.0023819136
                    },
                    {
                        " actions": -0.013745621
                    },
                    {
                        ".": -0.0001083201
                    },
                    {
                        "add": -9.490449e-06
                    },
                    {
                        "(": -7.958892e-05
                    },
                    {
                        "new": -0.004874266
                    },
                    {
                        " Build": -0.0007858515
                    },
                    {
                        "Trigger": -0.00011058788
                    },
                    {
                        "Action": -0.00012477185
                    },
                    {
                        "(": -0.0006213445
                    },
                    {
                        "context": -0.0050514545
                    },
                    {
                        ",": -0.0064129834
                    },
                    {
                        "is": -0.6536047
                    },
                    {
                        "Prop": -2.3078366e-05
                    },
                    {
                        "agate": -4.859278e-05
                    },
                    {
                        " ));": -0.10942973
                    },
                    {
                        "\n": -0.0062737004
                    },
                    {
                        "                      ": -0.0053780605
                    },
                    {
                        " LOG": -0.006528586
                    },
                    {
                        "GER": -1.306671e-05
                    },
                    {
                        ".": -1.1278585e-05
                    },
                    {
                        "log": -0.0012900336
                    },
                    {
                        "(": -7.698572e-06
                    },
                    {
                        "Level": -9.449002e-05
                    },
                    {
                        ".": -2.4543265e-06
                    },
                    {
                        "FIN": -0.0035295992
                    },
                    {
                        "ER": -7.8540467e-07
                    },
                    {
                        ",": -0.001283706
                    },
                    {
                        " \"": -0.0005180506
                    },
                    {
                        "sc": -0.0021202546
                    },
                    {
                        "hed": -4.277735e-07
                    },
                    {
                        "uling": -5.300351e-05
                    },
                    {
                        " a": -0.0006059581
                    },
                    {
                        " build": -8.6144464e-05
                    },
                    {
                        " of": -0.00033904242
                    },
                    {
                        " {": -0.00064263685
                    },
                    {
                        "0": -0.00010021203
                    },
                    {
                        "}": -4.5613506e-05
                    },
                    {
                        " from": -0.00070353557
                    },
                    {
                        " {": -0.00013466804
                    },
                    {
                        "1": -4.775551e-05
                    },
                    {
                        "}": -0.00023321231
                    },
                    {
                        "\",": -0.0009120831
                    },
                    {
                        " new": -0.0014875397
                    },
                    {
                        " Object": -6.99302e-05
                    },
                    {
                        "[]": -4.7279616e-05
                    },
                    {
                        "{": -0.0106288
                    },
                    {
                        "project": -0.006964785
                    },
                    {
                        ",": -0.0012992248
                    },
                    {
                        " context": -0.004960818
                    },
                    {
                        "});": -0.0005966542
                    },
                    {
                        "\n": -0.002236439
                    },
                    {
                        "                  ": -0.0033910754
                    },
                    {
                        " }": -2.7013197e-05
                    },
                    {
                        "\n": -0.0070938375
                    },
                    {
                        "                  ": -0.0038511024
                    },
                    {
                        " Cause": -0.018567175
                    },
                    {
                        ".": -0.003831895
                    },
                    {
                        "Up": -3.4167595e-05
                    },
                    {
                        "stream": -2.3317722e-05
                    },
                    {
                        "Cause": -9.794894e-05
                    },
                    {
                        " cause": -0.0005967725
                    },
                    {
                        " =": -0.00076556916
                    },
                    {
                        " new": -0.00043641243
                    },
                    {
                        " Cause": -5.8367896e-05
                    },
                    {
                        ".": -7.584048e-06
                    },
                    {
                        "Up": -1.6165199e-05
                    },
                    {
                        "stream": -3.883893e-06
                    },
                    {
                        "Cause": -1.2112103e-05
                    },
                    {
                        "(": -0.0005575876
                    },
                    {
                        "inv": -0.0015632352
                    },
                    {
                        "oking": -3.6482897e-06
                    },
                    {
                        "Run": -5.0500123e-05
                    },
                    {
                        ");": -0.00043987136
                    },
                    {
                        "\n": -0.0011069442
                    },
                    {
                        "                  ": -0.0013990775
                    },
                    {
                        " Cause": -0.015861632
                    },
                    {
                        "Action": -4.680184e-05
                    },
                    {
                        " cause": -0.0010818259
                    },
                    {
                        "Action": -6.48061e-05
                    },
                    {
                        " =": -0.0003119107
                    },
                    {
                        " new": -0.0009515168
                    },
                    {
                        " Cause": -8.5429216e-05
                    },
                    {
                        "Action": -2.8445576e-05
                    },
                    {
                        "(": -4.9902206e-05
                    },
                    {
                        "cause": -0.0003813765
                    },
                    {
                        ");": -0.0002698197
                    },
                    {
                        "\n": -0.0014014654
                    },
                    {
                        "                  ": -0.0011439439
                    },
                    {
                        " actions": -0.0051745707
                    },
                    {
                        ".": -5.2288255e-05
                    },
                    {
                        "add": -7.3446927e-06
                    },
                    {
                        "(": -0.00021622273
                    },
                    {
                        "cause": -0.03207266
                    },
                    {
                        "Action": -4.048565e-05
                    },
                    {
                        ");": -0.0006156178
                    },
                    {
                        "\n": -0.008861308
                    },
                    {
                        "                  ": -0.009575125
                    },
                    {
                        " List": -0.06984673
                    },
                    {
                        "<": -0.00036372704
                    },
                    {
                        "Parameter": -0.001292658
                    },
                    {
                        "Value": -3.9172486e-05
                    },
                    {
                        ">": -3.529076e-06
                    },
                    {
                        " parameters": -0.0021236583
                    },
                    {
                        " =": -0.0009953076
                    },
                    {
                        " step": -0.006889761
                    },
                    {
                        ".": -3.8338017e-05
                    },
                    {
                        "get": -0.00017067656
                    },
                    {
                        "Parameters": -6.015603e-05
                    },
                    {
                        "();": -0.00045406283
                    },
                    {
                        "\n": -0.0021482075
                    },
                    {
                        "                  ": -0.0043982044
                    },
                    {
                        " if": -0.019679366
                    },
                    {
                        " (": -0.006136414
                    },
                    {
                        "param": -0.0023969086
                    },
                    {
                        "eters": -3.2855354e-05
                    },
                    {
                        " !=": -0.002776322
                    },
                    {
                        " null": -0.00042651527
                    },
                    {
                        ")": -0.009471986
                    },
                    {
                        " {": -0.000292475
                    },
                    {
                        "\n": -0.0015437132
                    },
                    {
                        "                      ": -0.004562313
                    },
                    {
                        " parameters": -0.011640954
                    },
                    {
                        " =": -0.0007433184
                    },
                    {
                        " complete": -0.002220249
                    },
                    {
                        "Default": -8.578871e-05
                    },
                    {
                        "Parameters": -2.4986643e-05
                    },
                    {
                        "(": -0.0005770326
                    },
                    {
                        "param": -0.0019434665
                    },
                    {
                        "eters": -3.170517e-06
                    },
                    {
                        ",": -0.0007944392
                    },
                    {
                        " project": -0.23054595
                    },
                    {
                        ");": -0.0009729368
                    },
                    {
                        "\n": -0.0016970286
                    },
                    {
                        "                      ": -0.0039100423
                    },
                    {
                        " actions": -0.014410687
                    },
                    {
                        ".": -6.206056e-05
                    },
                    {
                        "add": -1.4736571e-05
                    },
                    {
                        "(": -0.00014814144
                    },
                    {
                        "new": -0.00078835577
                    },
                    {
                        " Parameters": -0.00027363625
                    },
                    {
                        "Action": -6.1516675e-06
                    },
                    {
                        "(": -3.237946e-05
                    },
                    {
                        "param": -0.00093624304
                    },
                    {
                        "eters": -1.843017e-05
                    },
                    {
                        "));": -0.0003054706
                    },
                    {
                        "\n": -0.0011487178
                    },
                    {
                        "                  ": -0.0031313633
                    },
                    {
                        " }": -3.2735214e-05
                    },
                    {
                        "\n": -0.0088682845
                    },
                    {
                        "                  ": -0.00754091
                    },
                    {
                        " Integer": -0.0724779
                    },
                    {
                        " quiet": -0.00053957955
                    },
                    {
                        "Per": -4.2631407e-05
                    },
                    {
                        "iod": -1.2828294e-05
                    },
                    {
                        " =": -0.0013389739
                    },
                    {
                        " step": -0.0013642197
                    },
                    {
                        ".": -3.142485e-05
                    },
                    {
                        "get": -0.00016340296
                    },
                    {
                        "Qu": -3.3689823e-05
                    },
                    {
                        "iet": -2.693682e-06
                    },
                    {
                        "Per": -3.6482897e-06
                    },
                    {
                        "iod": -4.9586424e-06
                    },
                    {
                        "();": -0.0012185966
                    },
                    {
                        "\n": -0.0013766944
                    },
                    {
                        "                  ": -0.00279545
                    },
                    {
                        " if": -0.028874058
                    },
                    {
                        " (": -0.002209675
                    },
                    {
                        "quiet": -0.0012279053
                    },
                    {
                        "Per": -2.4543265e-06
                    },
                    {
                        "iod": -2.4543265e-06
                    },
                    {
                        " ==": -0.0038820966
                    },
                    {
                        " null": -8.900641e-05
                    },
                    {
                        ")": -0.00577617
                    },
                    {
                        " {": -0.00064060936
                    },
                    {
                        "\n": -0.0005528173
                    },
                    {
                        "                      ": -0.002334235
                    },
                    {
                        " quiet": -0.032550316
                    },
                    {
                        "Per": -3.4089344e-06
                    },
                    {
                        "iod": -1.0084622e-05
                    },
                    {
                        " =": -0.0003334368
                    },
                    {
                        " project": -0.011639989
                    },
                    {
                        ".": -0.001841944
                    },
                    {
                        "get": -6.9453374e-05
                    },
                    {
                        "Qu": -8.173468e-05
                    },
                    {
                        "iet": -1.2828294e-05
                    },
                    {
                        "Per": -9.4967785e-05
                    },
                    {
                        "iod": -2.0966954e-06
                    },
                    {
                        "();": -0.00027184532
                    },
                    {
                        "\n": -0.0006883838
                    },
                    {
                        "                  ": -0.0023949966
                    },
                    {
                        " }": -2.0218295e-05
                    },
                    {
                        "\n": -0.010232428
                    },
                    {
                        "                  ": -0.011179863
                    },
                    {
                        " Que": -0.12674464
                    },
                    {
                        "ue": -4.1232483e-06
                    },
                    {
                        "Task": -0.0032681178
                    },
                    {
                        "Future": -9.966347e-06
                    },
                    {
                        "<?": -0.006457074
                    },
                    {
                        ">": -0.0021293932
                    },
                    {
                        " f": -0.011804686
                    },
                    {
                        " =": -0.0053778216
                    },
                    {
                        " project": -0.09268223
                    },
                    {
                        ".": -0.0035744018
                    },
                    {
                        "sche": -0.00010772499
                    },
                    {
                        "dule": -1.7400124e-06
                    },
                    {
                        "Build": -7.584048e-06
                    },
                    {
                        "2": -0.0017748267
                    },
                    {
                        "(": -0.00016101786
                    },
                    {
                        "quiet": -0.011114646
                    },
                    {
                        "Per": -1.8601542e-06
                    },
                    {
                        "iod": -6.827632e-08
                    },
                    {
                        ",": -0.0022642764
                    },
                    {
                        " actions": -0.09022368
                    },
                    {
                        ".": -0.002392845
                    },
                    {
                        "to": -0.00011928824
                    },
                    {
                        "Array": -8.176345e-06
                    },
                    {
                        "(": -6.170386e-05
                    },
                    {
                        "new": -0.00055639644
                    },
                    {
                        " Action": -0.00031131558
                    },
                    {
                        "[": -0.00026278265
                    },
                    {
                        "actions": -0.0033261264
                    },
                    {
                        ".": -0.0012052894
                    },
                    {
                        "size": -4.608659e-05
                    },
                    {
                        "()": -2.5105857e-05
                    },
                    {
                        "])": -0.0005473328
                    },
                    {
                        ");": -0.00048823532
                    },
                    {
                        "\n": -0.002854028
                    },
                    {
                        "                  ": -0.0019818638
                    },
                    {
                        " if": -0.0028138575
                    },
                    {
                        " (": -0.0019034519
                    },
                    {
                        "f": -0.0010111793
                    },
                    {
                        " ==": -0.0022941479
                    },
                    {
                        " null": -9.186649e-05
                    },
                    {
                        ")": -0.0015409667
                    },
                    {
                        " {": -0.0005740496
                    },
                    {
                        "\n": -0.0010708455
                    },
                    {
                        "                      ": -0.0014677801
                    },
                    {
                        " throw": -0.004271171
                    },
                    {
                        " new": -3.2973632e-05
                    },
                    {
                        " Ab": -0.00068277825
                    },
                    {
                        "ort": -2.9311614e-06
                    },
                    {
                        "Exception": -0.00011821817
                    },
                    {
                        "(\"": -0.0011315913
                    },
                    {
                        "F": -0.0020258809
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6498,
                    6502,
                    6503,
                    6506,
                    6510,
                    6512,
                    6515,
                    6517,
                    6521,
                    6530,
                    6532,
                    6536,
                    6537,
                    6540,
                    6542,
                    6546,
                    6555,
                    6557,
                    6561,
                    6563,
                    6564,
                    6568,
                    6570,
                    6572,
                    6573,
                    6587,
                    6590,
                    6592,
                    6596,
                    6605,
                    6607,
                    6611,
                    6612,
                    6614,
                    6615,
                    6633,
                    6639,
                    6643,
                    6651,
                    6653,
                    6655,
                    6658,
                    6659,
                    6664,
                    6665,
                    6666,
                    6684,
                    6693,
                    6694,
                    6697,
                    6700,
                    6703,
                    6706,
                    6713,
                    6715,
                    6716,
                    6720,
                    6725,
                    6733,
                    6734,
                    6736,
                    6738,
                    6744,
                    6749,
                    6753,
                    6757,
                    6758,
                    6760,
                    6764,
                    6766,
                    6767,
                    6774,
                    6777,
                    6778,
                    6796,
                    6801,
                    6802,
                    6805,
                    6811,
                    6812,
                    6815,
                    6821,
                    6827,
                    6828,
                    6832,
                    6836,
                    6837,
                    6842,
                    6849,
                    6853,
                    6857,
                    6862,
                    6863,
                    6871,
                    6873,
                    6880,
                    6881,
                    6884,
                    6888,
                    6895,
                    6899,
                    6901,
                    6903,
                    6905,
                    6906,
                    6924,
                    6929,
                    6930,
                    6936,
                    6937,
                    6945,
                    6947,
                    6951,
                    6957,
                    6961,
                    6962,
                    6963,
                    6966,
                    6967,
                    6985,
                    6988,
                    6990,
                    6994,
                    6995,
                    6998,
                    7002,
                    7005,
                    7007,
                    7008,
                    7030,
                    7035,
                    7042,
                    7050,
                    7052,
                    7056,
                    7063,
                    7066,
                    7067,
                    7089,
                    7097,
                    7100,
                    7104,
                    7109,
                    7111,
                    7112,
                    7117,
                    7118,
                    7120,
                    7124,
                    7129,
                    7132,
                    7133,
                    7155,
                    7163,
                    7164,
                    7167,
                    7168,
                    7171,
                    7177,
                    7184,
                    7190,
                    7191,
                    7198,
                    7199,
                    7201,
                    7205,
                    7210,
                    7213,
                    7214,
                    7236,
                    7240,
                    7243,
                    7244,
                    7247,
                    7248,
                    7253,
                    7254,
                    7257,
                    7259,
                    7260,
                    7262,
                    7264,
                    7267,
                    7272,
                    7274,
                    7280,
                    7283,
                    7285,
                    7286,
                    7287,
                    7292,
                    7294,
                    7295,
                    7296,
                    7298,
                    7302,
                    7309,
                    7311,
                    7312,
                    7319,
                    7320,
                    7328,
                    7331,
                    7332,
                    7350,
                    7352,
                    7353,
                    7371,
                    7377,
                    7378,
                    7380,
                    7386,
                    7391,
                    7397,
                    7399,
                    7403,
                    7409,
                    7410,
                    7412,
                    7418,
                    7423,
                    7424,
                    7427,
                    7432,
                    7435,
                    7437,
                    7438,
                    7456,
                    7462,
                    7468,
                    7474,
                    7480,
                    7482,
                    7486,
                    7492,
                    7498,
                    7499,
                    7504,
                    7506,
                    7507,
                    7525,
                    7533,
                    7534,
                    7537,
                    7538,
                    7543,
                    7549,
                    7551,
                    7552,
                    7570,
                    7575,
                    7576,
                    7585,
                    7590,
                    7591,
                    7602,
                    7604,
                    7609,
                    7610,
                    7613,
                    7623,
                    7626,
                    7627,
                    7645,
                    7648,
                    7650,
                    7655,
                    7660,
                    7663,
                    7668,
                    7669,
                    7671,
                    7672,
                    7694,
                    7705,
                    7707,
                    7716,
                    7723,
                    7733,
                    7734,
                    7739,
                    7744,
                    7745,
                    7753,
                    7755,
                    7756,
                    7778,
                    7786,
                    7787,
                    7790,
                    7791,
                    7794,
                    7805,
                    7811,
                    7812,
                    7817,
                    7822,
                    7825,
                    7826,
                    7844,
                    7846,
                    7847,
                    7865,
                    7873,
                    7879,
                    7882,
                    7885,
                    7887,
                    7892,
                    7893,
                    7896,
                    7898,
                    7901,
                    7904,
                    7907,
                    7910,
                    7911,
                    7929,
                    7932,
                    7934,
                    7939,
                    7942,
                    7945,
                    7948,
                    7953,
                    7954,
                    7956,
                    7957,
                    7979,
                    7985,
                    7988,
                    7991,
                    7993,
                    8001,
                    8002,
                    8005,
                    8007,
                    8010,
                    8013,
                    8016,
                    8019,
                    8020,
                    8038,
                    8040,
                    8041,
                    8059,
                    8063,
                    8065,
                    8069,
                    8075,
                    8077,
                    8078,
                    8080,
                    8082,
                    8090,
                    8091,
                    8095,
                    8099,
                    8104,
                    8105,
                    8106,
                    8111,
                    8114,
                    8117,
                    8118,
                    8126,
                    8127,
                    8129,
                    8134,
                    8135,
                    8138,
                    8145,
                    8146,
                    8153,
                    8154,
                    8158,
                    8160,
                    8162,
                    8164,
                    8165,
                    8183,
                    8186,
                    8188,
                    8189,
                    8192,
                    8197,
                    8198,
                    8200,
                    8201,
                    8223,
                    8229,
                    8233,
                    8236,
                    8239,
                    8248,
                    8250
                ]
            },
            "finish_reason": "length"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job && !(item instanceof Queue.Task)) ) {\n               Run<?, ?> invokingRun = this.invokingRun;\n               Run<?, ?> run = invokingRun;\n               Node node = run.getExecutor().getOwner().getNode();\n               TaskListener listener = getContext().get(TaskListener.class);\n",
            "index": 2,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    " &&",
                    " !",
                    "(",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " )",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    "<",
                    "?,",
                    " ?",
                    ">",
                    " invoking",
                    "Run",
                    " =",
                    " this",
                    ".",
                    "inv",
                    "oking",
                    "Run",
                    ";",
                    "\n",
                    "              ",
                    " Run",
                    "<",
                    "?,",
                    " ?",
                    ">",
                    " run",
                    " =",
                    " invoking",
                    "Run",
                    ";",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " run",
                    ".",
                    "get",
                    "Exec",
                    "utor",
                    "().",
                    "get",
                    "Owner",
                    "().",
                    "get",
                    "Node",
                    "();",
                    "\n",
                    "              ",
                    " Task",
                    "Listener",
                    " listener",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Task",
                    "Listener",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "<|endoftext|>",
                    "/*"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -0.20284843,
                    -0.018213596,
                    -9.055464e-07,
                    -0.0012413335,
                    -0.00025097816,
                    -0.19275457,
                    -0.12290174,
                    -0.16058564,
                    -0.03319011,
                    -0.017945033,
                    -2.0696069e-05,
                    -0.4750607,
                    -2.1941576,
                    -0.3499907,
                    -0.12884308,
                    -0.039789125,
                    -0.004612493,
                    -3.690939e-05,
                    -1.0165442,
                    -0.00027363625,
                    -0.008409134,
                    -0.03128532,
                    -1.1077241,
                    -0.36290133,
                    -0.0791695,
                    -0.08384165,
                    -0.92810863,
                    -1.9797033,
                    -1.8682501,
                    -0.000632796,
                    -0.8793077,
                    -0.0029552311,
                    -1.0221361,
                    -0.13535711,
                    -0.027269624,
                    -2.0566332,
                    -0.00034428947,
                    -0.1152399,
                    -0.0002789997,
                    -0.000604766,
                    -0.054775193,
                    -0.016138354,
                    -0.19871789,
                    -2.978101,
                    -2.0722995,
                    -0.0004049883,
                    -0.107456036,
                    -0.043722358,
                    -1.5884216,
                    -0.09808052,
                    -1.2862526,
                    -0.00015124086,
                    -0.3360507,
                    -0.014173312,
                    -0.11800839,
                    -1.9656993,
                    -0.010756582,
                    -0.058187366,
                    -0.53991795,
                    -0.08655705,
                    -0.0008329154,
                    -0.15881401,
                    -8.638288e-05,
                    -0.011805289,
                    -0.0004941948,
                    -0.0047405255,
                    -0.470106,
                    -0.007512025,
                    -0.0012574482,
                    -0.002724503,
                    -0.018444767,
                    -0.7372268,
                    -1.1548994,
                    -0.0003195429,
                    -0.0053436626,
                    -0.009739546,
                    -0.28105152,
                    -0.03963433,
                    -0.0034118888,
                    -0.00019428364,
                    -0.0006862372,
                    -0.00057202304,
                    -4.5613506e-05,
                    -0.00020298682,
                    -8.483411e-05,
                    -0.005122747,
                    -0.02300348,
                    -0.36322808,
                    -2.6367638
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        "step": -0.018213596
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012413335
                    },
                    {
                        "Wait": -0.00025097816
                    },
                    {
                        "()": -0.19275457
                    },
                    {
                        " ||": -0.12290174
                    },
                    {
                        " (": -0.16058564
                    },
                    {
                        "item": -0.03319011
                    },
                    {
                        " instance": -0.017945033
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.4750607
                    },
                    {
                        ")": -0.56847775
                    },
                    {
                        " !": -0.3499907
                    },
                    {
                        "(": -0.12884308
                    },
                    {
                        "item": -0.039789125
                    },
                    {
                        " instance": -0.004612493
                    },
                    {
                        "of": -3.690939e-05
                    },
                    {
                        " Que": -1.0165442
                    },
                    {
                        "ue": -0.00027363625
                    },
                    {
                        ".": -0.008409134
                    },
                    {
                        "Task": -0.03128532
                    },
                    {
                        ")))": -0.6714229
                    },
                    {
                        " )": -0.36290133
                    },
                    {
                        " {": -0.0791695
                    },
                    {
                        "\n": -0.08384165
                    },
                    {
                        "<|endoftext|>": -0.6923479
                    },
                    {
                        " Run": -1.9797033
                    },
                    {
                        " run": -1.8375638
                    },
                    {
                        "?,": -0.000632796
                    },
                    {
                        "?": -0.53666383
                    },
                    {
                        ">": -0.0029552311
                    },
                    {
                        " invoking": -1.0221361
                    },
                    {
                        "Run": -0.13535711
                    },
                    {
                        " =": -0.027269624
                    },
                    {
                        " get": -0.2752258
                    },
                    {
                        ".": -0.00034428947
                    },
                    {
                        "inv": -0.1152399
                    },
                    {
                        "oking": -0.0002789997
                    },
                    {
                        "Run": -0.000604766
                    },
                    {
                        ";": -0.054775193
                    },
                    {
                        "\n": -0.016138354
                    },
                    {
                        "              ": -0.19871789
                    },
                    {
                        " Node": -2.0132391
                    },
                    {
                        "Listener": -1.90517
                    },
                    {
                        "?,": -0.0004049883
                    },
                    {
                        " ?": -0.107456036
                    },
                    {
                        ">": -0.043722358
                    },
                    {
                        " run": -1.5884216
                    },
                    {
                        " =": -0.09808052
                    },
                    {
                        " invoking": -1.2862526
                    },
                    {
                        "Run": -0.00015124086
                    },
                    {
                        ";": -0.3360507
                    },
                    {
                        "\n": -0.014173312
                    },
                    {
                        "              ": -0.11800839
                    },
                    {
                        " if": -1.6320362
                    },
                    {
                        " node": -0.010756582
                    },
                    {
                        " =": -0.058187366
                    },
                    {
                        " run": -0.53991795
                    },
                    {
                        ".": -0.08655705
                    },
                    {
                        "get": -0.0008329154
                    },
                    {
                        "Exec": -0.15881401
                    },
                    {
                        "utor": -8.638288e-05
                    },
                    {
                        "().": -0.011805289
                    },
                    {
                        "get": -0.0004941948
                    },
                    {
                        "Owner": -0.0047405255
                    },
                    {
                        "().": -0.470106
                    },
                    {
                        "get": -0.007512025
                    },
                    {
                        "Node": -0.0012574482
                    },
                    {
                        "();": -0.002724503
                    },
                    {
                        "\n": -0.018444767
                    },
                    {
                        "<|endoftext|>": -0.7294934
                    },
                    {
                        " Task": -1.1548994
                    },
                    {
                        "Listener": -0.0003195429
                    },
                    {
                        " listener": -0.0053436626
                    },
                    {
                        " =": -0.009739546
                    },
                    {
                        " get": -0.28105152
                    },
                    {
                        "Context": -0.03963433
                    },
                    {
                        "().": -0.0034118888
                    },
                    {
                        "get": -0.00019428364
                    },
                    {
                        "(": -0.0006862372
                    },
                    {
                        "Task": -0.00057202304
                    },
                    {
                        "Listener": -4.5613506e-05
                    },
                    {
                        ".": -0.00020298682
                    },
                    {
                        "class": -8.483411e-05
                    },
                    {
                        ");": -0.005122747
                    },
                    {
                        "\n": -0.02300348
                    },
                    {
                        "<|endoftext|>": -0.36322808
                    },
                    {
                        "package": -1.4743986
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6540,
                    6542,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6575,
                    6576,
                    6590,
                    6594,
                    6595,
                    6597,
                    6599,
                    6600,
                    6609,
                    6612,
                    6614,
                    6619,
                    6620,
                    6623,
                    6628,
                    6631,
                    6632,
                    6633,
                    6647,
                    6651,
                    6652,
                    6654,
                    6656,
                    6657,
                    6661,
                    6663,
                    6672,
                    6675,
                    6676,
                    6677,
                    6691,
                    6696,
                    6701,
                    6703,
                    6707,
                    6708,
                    6711,
                    6715,
                    6719,
                    6722,
                    6725,
                    6730,
                    6733,
                    6736,
                    6740,
                    6743,
                    6744,
                    6758,
                    6763,
                    6771,
                    6780,
                    6782,
                    6786,
                    6793,
                    6796,
                    6799,
                    6800,
                    6804,
                    6812,
                    6813,
                    6818,
                    6820,
                    6821,
                    6821
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               EnvVars envVars = invokingRun.getEnvironment(listener);\n               envVars.overrideAll(step.getParameters());\n",
            "index": 3,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    " ||",
                    " item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " En",
                    "v",
                    "V",
                    "ars",
                    " env",
                    "V",
                    "ars",
                    " =",
                    " invoking",
                    "Run",
                    ".",
                    "get",
                    "Environment",
                    "(",
                    "list",
                    "ener",
                    ");",
                    "\n",
                    "              ",
                    " env",
                    "V",
                    "ars",
                    ".",
                    "over",
                    "ride",
                    "All",
                    "(",
                    "step",
                    ".",
                    "get",
                    "Parameters",
                    "());",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " org",
                    ".",
                    "spring",
                    "framework",
                    ".",
                    "spring"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -0.20284843,
                    -0.018213596,
                    -9.055464e-07,
                    -0.0012413335,
                    -0.00025097816,
                    -0.19275457,
                    -0.12290174,
                    -0.16058564,
                    -0.03319011,
                    -0.017945033,
                    -2.0696069e-05,
                    -0.4750607,
                    -1.8989953,
                    -0.24296017,
                    -0.013909334,
                    -1.7595703e-05,
                    -0.20151754,
                    -3.058758e-05,
                    -0.0014240878,
                    -0.0016069341,
                    -0.31113636,
                    -0.04530835,
                    -0.06718896,
                    -0.79641426,
                    -3.1634624,
                    -0.00031203084,
                    -0.019201433,
                    -6.6619094e-07,
                    -0.149126,
                    -0.5863009,
                    -1.306671e-05,
                    -0.031038744,
                    -1.6194774,
                    -0.0055582738,
                    -0.0066003427,
                    -8.209043e-05,
                    -0.0023697852,
                    -0.0017242541,
                    -0.17171994,
                    -1.0920954e-05,
                    -0.0015984562,
                    -0.021824423,
                    -0.022424657,
                    -1.014515,
                    -0.0007152264,
                    -7.8540467e-07,
                    -0.042465314,
                    -0.14856121,
                    -0.00055341335,
                    -0.07871528,
                    -0.017820515,
                    -0.17528187,
                    -0.00014873935,
                    -0.0030127424,
                    -0.36635986,
                    -0.09268994,
                    -0.06604394,
                    -1.5539638,
                    -1.467473,
                    -2.9057314,
                    -0.00063041,
                    -4.3760138,
                    -0.34626308,
                    -0.0008329154,
                    -4.8298855
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        "step": -0.018213596
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012413335
                    },
                    {
                        "Wait": -0.00025097816
                    },
                    {
                        "()": -0.19275457
                    },
                    {
                        " ||": -0.12290174
                    },
                    {
                        " (": -0.16058564
                    },
                    {
                        "item": -0.03319011
                    },
                    {
                        " instance": -0.017945033
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.4750607
                    },
                    {
                        ")": -0.56847775
                    },
                    {
                        " item": -0.24296017
                    },
                    {
                        " instance": -0.013909334
                    },
                    {
                        "of": -1.7595703e-05
                    },
                    {
                        " Que": -0.20151754
                    },
                    {
                        "ue": -3.058758e-05
                    },
                    {
                        ".": -0.0014240878
                    },
                    {
                        "Task": -0.0016069341
                    },
                    {
                        "))": -0.31113636
                    },
                    {
                        " {": -0.04530835
                    },
                    {
                        "\n": -0.06718896
                    },
                    {
                        "              ": -0.79641426
                    },
                    {
                        " Run": -1.8831393
                    },
                    {
                        "v": -0.00031203084
                    },
                    {
                        "V": -0.019201433
                    },
                    {
                        "ars": -6.6619094e-07
                    },
                    {
                        " env": -0.149126
                    },
                    {
                        "V": -0.5863009
                    },
                    {
                        "ars": -1.306671e-05
                    },
                    {
                        " =": -0.031038744
                    },
                    {
                        " new": -1.0114309
                    },
                    {
                        "Run": -0.0055582738
                    },
                    {
                        ".": -0.0066003427
                    },
                    {
                        "get": -8.209043e-05
                    },
                    {
                        "Environment": -0.0023697852
                    },
                    {
                        "(": -0.0017242541
                    },
                    {
                        "list": -0.17171994
                    },
                    {
                        "ener": -1.0920954e-05
                    },
                    {
                        ");": -0.0015984562
                    },
                    {
                        "\n": -0.021824423
                    },
                    {
                        "              ": -0.022424657
                    },
                    {
                        " env": -1.014515
                    },
                    {
                        "V": -0.0007152264
                    },
                    {
                        "ars": -7.8540467e-07
                    },
                    {
                        ".": -0.042465314
                    },
                    {
                        "over": -0.14856121
                    },
                    {
                        "ride": -0.00055341335
                    },
                    {
                        "All": -0.07871528
                    },
                    {
                        "(": -0.017820515
                    },
                    {
                        "step": -0.17528187
                    },
                    {
                        ".": -0.00014873935
                    },
                    {
                        "get": -0.0030127424
                    },
                    {
                        "Parameters": -0.36635986
                    },
                    {
                        "());": -0.09268994
                    },
                    {
                        "\n": -0.06604394
                    },
                    {
                        "              ": -0.26905364
                    },
                    {
                        "package": -1.467473
                    },
                    {
                        " com": -0.71423084
                    },
                    {
                        ".": -0.00063041
                    },
                    {
                        "j": -3.133954
                    },
                    {
                        "framework": -0.34626308
                    },
                    {
                        ".": -0.0008329154
                    },
                    {
                        "s": -2.1111076
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6540,
                    6545,
                    6554,
                    6556,
                    6560,
                    6562,
                    6563,
                    6567,
                    6569,
                    6571,
                    6572,
                    6586,
                    6589,
                    6590,
                    6591,
                    6594,
                    6598,
                    6599,
                    6602,
                    6604,
                    6613,
                    6616,
                    6617,
                    6620,
                    6631,
                    6632,
                    6636,
                    6640,
                    6642,
                    6643,
                    6657,
                    6661,
                    6662,
                    6665,
                    6666,
                    6670,
                    6674,
                    6677,
                    6678,
                    6682,
                    6683,
                    6686,
                    6696,
                    6700,
                    6701,
                    6701,
                    6701,
                    6701,
                    6701,
                    6701,
                    6701,
                    6701
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || ( item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               AbstractBuild invokingBuild = (AbstractBuild) getContext().get(Run.class);\n               Computer node = Computer.currentComputer();\n",
            "index": 4,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    " item",
                    " instance",
                    "of",
                    " Param",
                    "eter",
                    "ized",
                    "Job",
                    "Mix",
                    "In",
                    ".",
                    "Parameter",
                    "ized",
                    "Job",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Abstract",
                    "Build",
                    " invoking",
                    "Build",
                    " =",
                    " (",
                    "Abstract",
                    "Build",
                    ")",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Run",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " Computer",
                    " node",
                    " =",
                    " Computer",
                    ".",
                    "current",
                    "Computer",
                    "();",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -0.20284843,
                    -0.018213596,
                    -9.055464e-07,
                    -0.0012413335,
                    -0.00025097816,
                    -0.19275457,
                    -0.12290174,
                    -0.16058564,
                    -4.132601,
                    -0.04435521,
                    -4.2631407e-05,
                    -1.2444105,
                    -0.00013967574,
                    -0.00048179337,
                    -0.00027935923,
                    -0.033648696,
                    -0.00093093404,
                    -0.0030157329,
                    -5.4194657e-05,
                    -0.00019118235,
                    -9.7351025e-05,
                    -1.0924397,
                    -0.14058274,
                    -0.07106239,
                    -0.77812165,
                    -3.63761,
                    -0.08564164,
                    -2.542655,
                    -0.11457335,
                    -0.029620418,
                    -0.45956728,
                    -0.008864856,
                    -1.6999666e-05,
                    -0.009147833,
                    -1.3670447,
                    -0.025595104,
                    -0.003678072,
                    -0.013777164,
                    -0.00053671666,
                    -0.21088403,
                    -0.0046880045,
                    -0.0004422574,
                    -0.004168516,
                    -0.015614208,
                    -0.050542533,
                    -2.8916197,
                    -0.65858775,
                    -0.037619513,
                    -1.0490422,
                    -0.0007086653,
                    -0.0008562409,
                    -0.00016590822,
                    -0.05678617,
                    -0.026393058,
                    -0.9851753,
                    -1.4729913,
                    -0.71714413
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        "step": -0.018213596
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012413335
                    },
                    {
                        "Wait": -0.00025097816
                    },
                    {
                        "()": -0.19275457
                    },
                    {
                        " ||": -0.12290174
                    },
                    {
                        " (": -0.16058564
                    },
                    {
                        "item": -0.03319011
                    },
                    {
                        " instance": -0.04435521
                    },
                    {
                        "of": -4.2631407e-05
                    },
                    {
                        " Job": -0.86075395
                    },
                    {
                        "eter": -0.00013967574
                    },
                    {
                        "ized": -0.00048179337
                    },
                    {
                        "Job": -0.00027935923
                    },
                    {
                        "Mix": -0.033648696
                    },
                    {
                        "In": -0.00093093404
                    },
                    {
                        ".": -0.0030157329
                    },
                    {
                        "Parameter": -5.4194657e-05
                    },
                    {
                        "ized": -0.00019118235
                    },
                    {
                        "Job": -9.7351025e-05
                    },
                    {
                        "))": -1.0924397
                    },
                    {
                        " {": -0.14058274
                    },
                    {
                        "\n": -0.07106239
                    },
                    {
                        "              ": -0.77812165
                    },
                    {
                        " Run": -1.9539407
                    },
                    {
                        "Build": -0.08564164
                    },
                    {
                        "<": -0.47190663
                    },
                    {
                        "Build": -0.11457335
                    },
                    {
                        " =": -0.029620418
                    },
                    {
                        " (": -0.45956728
                    },
                    {
                        "Abstract": -0.008864856
                    },
                    {
                        "Build": -1.6999666e-05
                    },
                    {
                        ")": -0.009147833
                    },
                    {
                        " invoking": -0.6809694
                    },
                    {
                        "Context": -0.025595104
                    },
                    {
                        "().": -0.003678072
                    },
                    {
                        "get": -0.013777164
                    },
                    {
                        "(": -0.00053671666
                    },
                    {
                        "Run": -0.21088403
                    },
                    {
                        ".": -0.0046880045
                    },
                    {
                        "class": -0.0004422574
                    },
                    {
                        ");": -0.004168516
                    },
                    {
                        "\n": -0.015614208
                    },
                    {
                        "              ": -0.050542533
                    },
                    {
                        " Node": -1.5885592
                    },
                    {
                        " node": -0.65858775
                    },
                    {
                        " =": -0.037619513
                    },
                    {
                        " Computer": -1.0490422
                    },
                    {
                        ".": -0.0007086653
                    },
                    {
                        "current": -0.0008562409
                    },
                    {
                        "Computer": -0.00016590822
                    },
                    {
                        "();": -0.05678617
                    },
                    {
                        "\n": -0.026393058
                    },
                    {
                        "              ": -0.5312112
                    },
                    {
                        "package": -1.4729913
                    },
                    {
                        " com": -0.71714413
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6523,
                    6532,
                    6534,
                    6540,
                    6544,
                    6548,
                    6551,
                    6554,
                    6556,
                    6557,
                    6566,
                    6570,
                    6573,
                    6575,
                    6577,
                    6578,
                    6592,
                    6601,
                    6606,
                    6615,
                    6620,
                    6622,
                    6624,
                    6632,
                    6637,
                    6638,
                    6642,
                    6649,
                    6652,
                    6655,
                    6656,
                    6659,
                    6660,
                    6665,
                    6667,
                    6668,
                    6682,
                    6691,
                    6696,
                    6698,
                    6707,
                    6708,
                    6715,
                    6723,
                    6726,
                    6727,
                    6727,
                    6727
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if (!step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob) || (item instanceof Queue.Task)) {\n",
            "index": 5,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (!",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Param",
                    "eter",
                    "ized",
                    "Job",
                    "Mix",
                    "In",
                    ".",
                    "Parameter",
                    "ized",
                    "Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "github",
                    ".",
                    "k",
                    "ir"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -1.7237029,
                    -0.11057747,
                    -3.4089344e-06,
                    -0.001979953,
                    -0.00031417754,
                    -0.47877416,
                    -0.15296021,
                    -0.22031528,
                    -0.027295714,
                    -0.017442817,
                    -1.6521892e-05,
                    -1.8677498,
                    -8.864972e-05,
                    -0.0016730854,
                    -0.0002773308,
                    -0.03705375,
                    -0.0012500489,
                    -0.003909204,
                    -4.382537e-05,
                    -0.00050719705,
                    -8.924483e-05,
                    -1.3481021,
                    -0.20789643,
                    -0.21889444,
                    -0.032165542,
                    -0.0038942448,
                    -6.1516675e-06,
                    -0.044152353,
                    -1.5094201e-05,
                    -0.0017513012,
                    -0.0009946515,
                    -0.17336284,
                    -0.12210709,
                    -0.06004963,
                    -0.8319406,
                    -1.4694027,
                    -0.71490496,
                    -0.0013877978,
                    -4.18463,
                    -0.0040676054,
                    -3.610247,
                    -4.4094663
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        "step": -0.11057747
                    },
                    {
                        ".": -3.4089344e-06
                    },
                    {
                        "get": -0.001979953
                    },
                    {
                        "Wait": -0.00031417754
                    },
                    {
                        "()": -0.47877416
                    },
                    {
                        " ||": -0.15296021
                    },
                    {
                        " (": -0.22031528
                    },
                    {
                        "item": -0.027295714
                    },
                    {
                        " instance": -0.017442817
                    },
                    {
                        "of": -1.6521892e-05
                    },
                    {
                        " Job": -0.45724738
                    },
                    {
                        "eter": -8.864972e-05
                    },
                    {
                        "ized": -0.0016730854
                    },
                    {
                        "Job": -0.0002773308
                    },
                    {
                        "Mix": -0.03705375
                    },
                    {
                        "In": -0.0012500489
                    },
                    {
                        ".": -0.003909204
                    },
                    {
                        "Parameter": -4.382537e-05
                    },
                    {
                        "ized": -0.00050719705
                    },
                    {
                        "Job": -8.924483e-05
                    },
                    {
                        "))": -0.44600168
                    },
                    {
                        " ||": -0.20789643
                    },
                    {
                        " (": -0.21889444
                    },
                    {
                        "item": -0.032165542
                    },
                    {
                        " instance": -0.0038942448
                    },
                    {
                        "of": -6.1516675e-06
                    },
                    {
                        " Que": -0.044152353
                    },
                    {
                        "ue": -1.5094201e-05
                    },
                    {
                        ".": -0.0017513012
                    },
                    {
                        "Task": -0.0009946515
                    },
                    {
                        "))": -0.17336284
                    },
                    {
                        " {": -0.12210709
                    },
                    {
                        "\n": -0.06004963
                    },
                    {
                        "              ": -0.7514657
                    },
                    {
                        "package": -1.4694027
                    },
                    {
                        " com": -0.71490496
                    },
                    {
                        ".": -0.0013877978
                    },
                    {
                        "example": -2.129191
                    },
                    {
                        ".": -0.0040676054
                    },
                    {
                        "j": -3.306823
                    },
                    {
                        "rist": -2.9268718
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6498,
                    6502,
                    6503,
                    6506,
                    6510,
                    6512,
                    6515,
                    6517,
                    6521,
                    6530,
                    6532,
                    6538,
                    6542,
                    6546,
                    6549,
                    6552,
                    6554,
                    6555,
                    6564,
                    6568,
                    6571,
                    6572,
                    6575,
                    6577,
                    6581,
                    6590,
                    6592,
                    6596,
                    6598,
                    6599,
                    6603,
                    6605,
                    6607,
                    6608,
                    6608,
                    6608,
                    6608,
                    6608,
                    6608,
                    6608,
                    6608
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               // reset the build result\n               getContext().onSuccess(null);\n               FlowNode node = getContext().get(FlowNode.class);\n               if (node == null) {\n                   LOGGER.log(Level.WARNING, \"Missing FlowNode.class in context\");\n               }\n",
            "index": 6,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Param",
                    "eter",
                    "ized",
                    "Job",
                    "Mix",
                    "In",
                    ".",
                    "Parameter",
                    "ized",
                    "Job",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " //",
                    " reset",
                    " the",
                    " build",
                    " result",
                    "\n",
                    "              ",
                    " get",
                    "Context",
                    "().",
                    "on",
                    "Success",
                    "(",
                    "null",
                    ");",
                    "\n",
                    "              ",
                    " Flow",
                    "Node",
                    " node",
                    " =",
                    " get",
                    "Context",
                    "().",
                    "get",
                    "(",
                    "Flow",
                    "Node",
                    ".",
                    "class",
                    ");",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "node",
                    " ==",
                    " null",
                    ")",
                    " {",
                    "\n",
                    "                  ",
                    " LOG",
                    "GER",
                    ".",
                    "log",
                    "(",
                    "Level",
                    ".",
                    "WARNING",
                    ",",
                    " \"",
                    "Missing",
                    " Flow",
                    "Node",
                    ".",
                    "class",
                    " in",
                    " context",
                    "\");",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "<|endoftext|>",
                    "package",
                    " com",
                    ".",
                    "b",
                    "ign",
                    "erd",
                    "ranch"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -0.20284843,
                    -0.018213596,
                    -9.055464e-07,
                    -0.0012413335,
                    -0.00025097816,
                    -0.19275457,
                    -0.12290174,
                    -0.16058564,
                    -0.03319011,
                    -0.017945033,
                    -2.0696069e-05,
                    -1.7240916,
                    -7.4460135e-05,
                    -0.0008406114,
                    -0.000297126,
                    -0.041494243,
                    -0.0006466937,
                    -0.0043179845,
                    -4.7875652e-05,
                    -6.4921565e-05,
                    -8.566857e-05,
                    -0.40994093,
                    -0.038316883,
                    -0.059113126,
                    -0.75442195,
                    -2.4590096,
                    -8.406253,
                    -0.7267155,
                    -2.1580365,
                    -1.7048372,
                    -1.011777,
                    -0.13953991,
                    -2.2060301,
                    -0.015358026,
                    -0.0006322,
                    -0.3038766,
                    -0.25537252,
                    -0.003412606,
                    -0.012851177,
                    -0.0008763449,
                    -0.058927044,
                    -0.97931755,
                    -3.367972,
                    -0.050089717,
                    -0.014920272,
                    -0.014119145,
                    -0.096694626,
                    -0.026551697,
                    -0.0009990068,
                    -0.0018154328,
                    -0.00090695056,
                    -0.011279142,
                    -8.864972e-05,
                    -2.9041616e-05,
                    -1.6642034e-05,
                    -0.0021418764,
                    -0.025380617,
                    -0.5753173,
                    -1.0076661,
                    -0.40968177,
                    -0.173203,
                    -0.1123575,
                    -0.0039588106,
                    -0.034518257,
                    -0.015198853,
                    -0.028714562,
                    -0.0066307015,
                    -2.3179693,
                    -8.88872e-05,
                    -8.3045044e-05,
                    -0.3151043,
                    -0.00019964804,
                    -0.020619184,
                    -4.5613506e-05,
                    -0.30047888,
                    -0.020975197,
                    -0.05161922,
                    -1.6352861,
                    -0.4077624,
                    -0.01743275,
                    -3.2685316,
                    -1.4142429,
                    -0.8417572,
                    -0.67600834,
                    -0.83950377,
                    -0.0051435935,
                    -0.6472821,
                    -0.00027053498,
                    -0.10213638,
                    -0.4651468,
                    -1.479282,
                    -0.7179533,
                    -0.0013827845,
                    -4.4529443,
                    -3.6333544,
                    -0.034804698,
                    -0.004837609
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        "step": -0.018213596
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012413335
                    },
                    {
                        "Wait": -0.00025097816
                    },
                    {
                        "()": -0.19275457
                    },
                    {
                        " ||": -0.12290174
                    },
                    {
                        " (": -0.16058564
                    },
                    {
                        "item": -0.03319011
                    },
                    {
                        " instance": -0.017945033
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.4750607
                    },
                    {
                        "eter": -7.4460135e-05
                    },
                    {
                        "ized": -0.0008406114
                    },
                    {
                        "Job": -0.000297126
                    },
                    {
                        "Mix": -0.041494243
                    },
                    {
                        "In": -0.0006466937
                    },
                    {
                        ".": -0.0043179845
                    },
                    {
                        "Parameter": -4.7875652e-05
                    },
                    {
                        "ized": -6.4921565e-05
                    },
                    {
                        "Job": -8.566857e-05
                    },
                    {
                        "))": -0.40994093
                    },
                    {
                        " {": -0.038316883
                    },
                    {
                        "\n": -0.059113126
                    },
                    {
                        "              ": -0.75442195
                    },
                    {
                        " if": -2.014976
                    },
                    {
                        " TOD": -2.923121
                    },
                    {
                        " the": -0.7267155
                    },
                    {
                        " result": -2.1035597
                    },
                    {
                        " number": -1.3776802
                    },
                    {
                        "\n": -1.011777
                    },
                    {
                        "              ": -0.13953991
                    },
                    {
                        " Build": -2.097419
                    },
                    {
                        "Context": -0.015358026
                    },
                    {
                        "().": -0.0006322
                    },
                    {
                        "on": -0.3038766
                    },
                    {
                        "Success": -0.25537252
                    },
                    {
                        "(": -0.003412606
                    },
                    {
                        "null": -0.012851177
                    },
                    {
                        ");": -0.0008763449
                    },
                    {
                        "\n": -0.058927044
                    },
                    {
                        "<|endoftext|>": -0.7202843
                    },
                    {
                        " //": -1.3053392
                    },
                    {
                        "Node": -0.050089717
                    },
                    {
                        " node": -0.014920272
                    },
                    {
                        " =": -0.014119145
                    },
                    {
                        " get": -0.096694626
                    },
                    {
                        "Context": -0.026551697
                    },
                    {
                        "().": -0.0009990068
                    },
                    {
                        "get": -0.0018154328
                    },
                    {
                        "(": -0.00090695056
                    },
                    {
                        "Flow": -0.011279142
                    },
                    {
                        "Node": -8.864972e-05
                    },
                    {
                        ".": -2.9041616e-05
                    },
                    {
                        "class": -1.6642034e-05
                    },
                    {
                        ");": -0.0021418764
                    },
                    {
                        "\n": -0.025380617
                    },
                    {
                        "              ": -0.5753173
                    },
                    {
                        " if": -1.0076661
                    },
                    {
                        " (": -0.40968177
                    },
                    {
                        "node": -0.173203
                    },
                    {
                        " ==": -0.1123575
                    },
                    {
                        " null": -0.0039588106
                    },
                    {
                        ")": -0.034518257
                    },
                    {
                        " {": -0.015198853
                    },
                    {
                        "\n": -0.028714562
                    },
                    {
                        "                  ": -0.0066307015
                    },
                    {
                        " throw": -1.0259684
                    },
                    {
                        "GER": -8.88872e-05
                    },
                    {
                        ".": -8.3045044e-05
                    },
                    {
                        "log": -0.3151043
                    },
                    {
                        "(": -0.00019964804
                    },
                    {
                        "Level": -0.020619184
                    },
                    {
                        ".": -4.5613506e-05
                    },
                    {
                        "WARNING": -0.30047888
                    },
                    {
                        ",": -0.020975197
                    },
                    {
                        " \"": -0.05161922
                    },
                    {
                        "Missing": -1.6352861
                    },
                    {
                        " Flow": -0.4077624
                    },
                    {
                        "Node": -0.01743275
                    },
                    {
                        ",": -1.2956034
                    },
                    {
                        "class": -1.4142429
                    },
                    {
                        " in": -0.8417572
                    },
                    {
                        " context": -0.67600834
                    },
                    {
                        "\");": -0.83950377
                    },
                    {
                        "\n": -0.0051435935
                    },
                    {
                        "              ": -0.6472821
                    },
                    {
                        " }": -0.00027053498
                    },
                    {
                        "\n": -0.10213638
                    },
                    {
                        "<|endoftext|>": -0.4651468
                    },
                    {
                        "package": -1.479282
                    },
                    {
                        " com": -0.7179533
                    },
                    {
                        ".": -0.0013827845
                    },
                    {
                        "example": -2.1221528
                    },
                    {
                        "aid": -2.9343271
                    },
                    {
                        "erd": -0.034804698
                    },
                    {
                        "ranch": -0.004837609
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6539,
                    6543,
                    6547,
                    6550,
                    6553,
                    6555,
                    6556,
                    6565,
                    6569,
                    6572,
                    6574,
                    6576,
                    6577,
                    6591,
                    6594,
                    6600,
                    6604,
                    6610,
                    6617,
                    6618,
                    6632,
                    6636,
                    6643,
                    6646,
                    6648,
                    6655,
                    6656,
                    6660,
                    6662,
                    6663,
                    6677,
                    6682,
                    6686,
                    6691,
                    6693,
                    6697,
                    6704,
                    6707,
                    6710,
                    6711,
                    6715,
                    6719,
                    6720,
                    6725,
                    6727,
                    6728,
                    6742,
                    6745,
                    6747,
                    6751,
                    6754,
                    6759,
                    6760,
                    6762,
                    6763,
                    6781,
                    6785,
                    6788,
                    6789,
                    6792,
                    6793,
                    6798,
                    6799,
                    6806,
                    6807,
                    6809,
                    6816,
                    6821,
                    6825,
                    6826,
                    6831,
                    6834,
                    6842,
                    6845,
                    6846,
                    6860,
                    6862,
                    6863,
                    6863,
                    6863,
                    6863,
                    6863,
                    6863,
                    6863,
                    6863
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               \n",
            "index": 7,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "               ",
                    "\n",
                    "<|endoftext|>",
                    "from",
                    " dj",
                    "ango",
                    ".",
                    "cont"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -0.20284843,
                    -0.018213596,
                    -9.055464e-07,
                    -0.0012413335,
                    -0.00025097816,
                    -0.19275457,
                    -0.12290174,
                    -0.16058564,
                    -0.03319011,
                    -0.017945033,
                    -2.0696069e-05,
                    -0.4750607,
                    -0.56847775,
                    -0.08632563,
                    -0.24508974,
                    -0.041489646,
                    -0.006280357,
                    -8.653179e-06,
                    -0.19149299,
                    -2.8445576e-05,
                    -0.0014699287,
                    -0.0012841838,
                    -0.30699566,
                    -0.09528362,
                    -0.071002945,
                    -2.9448185,
                    -0.27401173,
                    -0.71534824,
                    -4.039018,
                    -1.2850823,
                    -0.00094686385,
                    -0.08821609,
                    -1.6022108
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        "step": -0.018213596
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012413335
                    },
                    {
                        "Wait": -0.00025097816
                    },
                    {
                        "()": -0.19275457
                    },
                    {
                        " ||": -0.12290174
                    },
                    {
                        " (": -0.16058564
                    },
                    {
                        "item": -0.03319011
                    },
                    {
                        " instance": -0.017945033
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.4750607
                    },
                    {
                        ")": -0.56847775
                    },
                    {
                        " ||": -0.08632563
                    },
                    {
                        " (": -0.24508974
                    },
                    {
                        "item": -0.041489646
                    },
                    {
                        " instance": -0.006280357
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19149299
                    },
                    {
                        "ue": -2.8445576e-05
                    },
                    {
                        ".": -0.0014699287
                    },
                    {
                        "Task": -0.0012841838
                    },
                    {
                        "))": -0.30699566
                    },
                    {
                        " {": -0.09528362
                    },
                    {
                        "\n": -0.071002945
                    },
                    {
                        "              ": -0.75050956
                    },
                    {
                        "\n": -0.27401173
                    },
                    {
                        "<|endoftext|>": -0.71534824
                    },
                    {
                        "package": -1.4745239
                    },
                    {
                        " dj": -1.2850823
                    },
                    {
                        "ango": -0.00094686385
                    },
                    {
                        ".": -0.08821609
                    },
                    {
                        "cont": -1.6022108
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6589,
                    6590,
                    6590,
                    6590,
                    6590,
                    6590,
                    6590
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run previousBuild = invokingRun.getPreviousBuild();\n               Node node = previousBuild != null ? previousBuild.getBuiltOn() : Computer.currentComputer().getNode();\n",
            "index": 8,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    " !",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "()",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " ||",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Que",
                    "ue",
                    ".",
                    "Task",
                    "))",
                    " {",
                    "\n",
                    "              ",
                    " Run",
                    " previous",
                    "Build",
                    " =",
                    " invoking",
                    "Run",
                    ".",
                    "get",
                    "Previous",
                    "Build",
                    "();",
                    "\n",
                    "              ",
                    " Node",
                    " node",
                    " =",
                    " previous",
                    "Build",
                    " !=",
                    " null",
                    " ?",
                    " previous",
                    "Build",
                    ".",
                    "get",
                    "Built",
                    "On",
                    "()",
                    " :",
                    " Computer",
                    ".",
                    "current",
                    "Computer",
                    "().",
                    "get",
                    "Node",
                    "();",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -0.20284843,
                    -0.018213596,
                    -9.055464e-07,
                    -0.0012413335,
                    -0.00025097816,
                    -0.19275457,
                    -0.12290174,
                    -0.16058564,
                    -0.03319011,
                    -0.017945033,
                    -2.0696069e-05,
                    -0.4750607,
                    -0.56847775,
                    -0.08632563,
                    -0.24508974,
                    -0.041489646,
                    -0.006280357,
                    -8.653179e-06,
                    -0.19149299,
                    -2.8445576e-05,
                    -0.0014699287,
                    -0.0012841838,
                    -0.30699566,
                    -0.09528362,
                    -0.071002945,
                    -0.75050956,
                    -1.892938,
                    -2.6852536,
                    -0.43612027,
                    -0.0321981,
                    -0.45011055,
                    -0.01039515,
                    -0.0581252,
                    -0.0016781007,
                    -0.0053235292,
                    -0.028823813,
                    -0.011446978,
                    -0.01716082,
                    -0.034991466,
                    -1.64684,
                    -0.0139633715,
                    -0.14820306,
                    -0.6891603,
                    -0.00013037559,
                    -1.3223038,
                    -0.018210802,
                    -0.13664173,
                    -0.021692235,
                    -2.4272329e-05,
                    -0.00076974515,
                    -0.000159348,
                    -0.0614546,
                    -4.2433903e-06,
                    -0.03799352,
                    -0.014478597,
                    -1.8484586,
                    -0.0007221462,
                    -0.00032574454,
                    -0.0001849835,
                    -0.0099799065,
                    -0.00035704856,
                    -0.00078501605,
                    -0.014816944,
                    -0.028467821,
                    -0.5098061
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        "step": -0.018213596
                    },
                    {
                        ".": -9.055464e-07
                    },
                    {
                        "get": -0.0012413335
                    },
                    {
                        "Wait": -0.00025097816
                    },
                    {
                        "()": -0.19275457
                    },
                    {
                        " ||": -0.12290174
                    },
                    {
                        " (": -0.16058564
                    },
                    {
                        "item": -0.03319011
                    },
                    {
                        " instance": -0.017945033
                    },
                    {
                        "of": -2.0696069e-05
                    },
                    {
                        " Job": -0.4750607
                    },
                    {
                        ")": -0.56847775
                    },
                    {
                        " ||": -0.08632563
                    },
                    {
                        " (": -0.24508974
                    },
                    {
                        "item": -0.041489646
                    },
                    {
                        " instance": -0.006280357
                    },
                    {
                        "of": -8.653179e-06
                    },
                    {
                        " Que": -0.19149299
                    },
                    {
                        "ue": -2.8445576e-05
                    },
                    {
                        ".": -0.0014699287
                    },
                    {
                        "Task": -0.0012841838
                    },
                    {
                        "))": -0.30699566
                    },
                    {
                        " {": -0.09528362
                    },
                    {
                        "\n": -0.071002945
                    },
                    {
                        "              ": -0.75050956
                    },
                    {
                        " Run": -1.892938
                    },
                    {
                        "<": -1.937287
                    },
                    {
                        "Build": -0.43612027
                    },
                    {
                        " =": -0.0321981
                    },
                    {
                        " invoking": -0.45011055
                    },
                    {
                        "Run": -0.01039515
                    },
                    {
                        ".": -0.0581252
                    },
                    {
                        "get": -0.0016781007
                    },
                    {
                        "Previous": -0.0053235292
                    },
                    {
                        "Build": -0.028823813
                    },
                    {
                        "();": -0.011446978
                    },
                    {
                        "\n": -0.01716082
                    },
                    {
                        "              ": -0.034991466
                    },
                    {
                        " if": -1.0945767
                    },
                    {
                        " node": -0.0139633715
                    },
                    {
                        " =": -0.14820306
                    },
                    {
                        " previous": -0.6891603
                    },
                    {
                        "Build": -0.00013037559
                    },
                    {
                        ".": -0.7105552
                    },
                    {
                        " null": -0.018210802
                    },
                    {
                        " ?": -0.13664173
                    },
                    {
                        " previous": -0.021692235
                    },
                    {
                        "Build": -2.4272329e-05
                    },
                    {
                        ".": -0.00076974515
                    },
                    {
                        "get": -0.000159348
                    },
                    {
                        "Built": -0.0614546
                    },
                    {
                        "On": -4.2433903e-06
                    },
                    {
                        "()": -0.03799352
                    },
                    {
                        " :": -0.014478597
                    },
                    {
                        " null": -1.1803249
                    },
                    {
                        ".": -0.0007221462
                    },
                    {
                        "current": -0.00032574454
                    },
                    {
                        "Computer": -0.0001849835
                    },
                    {
                        "().": -0.0099799065
                    },
                    {
                        "get": -0.00035704856
                    },
                    {
                        "Node": -0.00078501605
                    },
                    {
                        "();": -0.014816944
                    },
                    {
                        "\n": -0.028467821
                    },
                    {
                        "<|endoftext|>": -0.5098061
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6499,
                    6503,
                    6504,
                    6507,
                    6511,
                    6513,
                    6516,
                    6518,
                    6522,
                    6531,
                    6533,
                    6537,
                    6538,
                    6541,
                    6543,
                    6547,
                    6556,
                    6558,
                    6562,
                    6564,
                    6565,
                    6569,
                    6571,
                    6573,
                    6574,
                    6588,
                    6592,
                    6601,
                    6606,
                    6608,
                    6617,
                    6620,
                    6621,
                    6624,
                    6632,
                    6637,
                    6640,
                    6641,
                    6655,
                    6660,
                    6665,
                    6667,
                    6676,
                    6681,
                    6684,
                    6689,
                    6691,
                    6700,
                    6705,
                    6706,
                    6709,
                    6714,
                    6716,
                    6718,
                    6720,
                    6729,
                    6730,
                    6737,
                    6745,
                    6748,
                    6751,
                    6755,
                    6758,
                    6759
                ]
            },
            "finish_reason": "stop"
        },
        {
            "text": "           if (item instanceof Job) {\n               if (step.getWait()) {\n                   listener.getLogger().println(\"Waiting for completion of \" + ModelHyperlinkNote.encodeTo(item));\n               }\n",
            "index": 9,
            "logprobs": {
                "tokens": [
                    "\n",
                    "          ",
                    " if",
                    " (",
                    "item",
                    " instance",
                    "of",
                    " Job",
                    ")",
                    " {",
                    "\n",
                    "              ",
                    " if",
                    " (",
                    "step",
                    ".",
                    "get",
                    "Wait",
                    "())",
                    " {",
                    "\n",
                    "                  ",
                    " listener",
                    ".",
                    "get",
                    "Log",
                    "ger",
                    "().",
                    "println",
                    "(\"",
                    "Wa",
                    "iting",
                    " for",
                    " completion",
                    " of",
                    " \"",
                    " +",
                    " Model",
                    "Hyper",
                    "link",
                    "Note",
                    ".",
                    "en",
                    "code",
                    "To",
                    "(",
                    "item",
                    "));",
                    "\n",
                    "              ",
                    " }",
                    "\n",
                    "<|endoftext|>"
                ],
                "token_logprobs": [
                    -0.0036250101,
                    -0.069804676,
                    -0.07093255,
                    -0.44885194,
                    -2.7287273,
                    -0.021969967,
                    -5.912312e-06,
                    -0.0725268,
                    -0.41837728,
                    -0.003880242,
                    -0.05353124,
                    -0.89852476,
                    -1.5082806,
                    -1.2977576,
                    -0.87944514,
                    -0.007969545,
                    -0.05495099,
                    -0.7576628,
                    -0.3684125,
                    -0.009676652,
                    -0.02213845,
                    -0.04847614,
                    -2.368314,
                    -0.0039050158,
                    -0.009797511,
                    -5.1930627e-05,
                    -5.4552278e-05,
                    -0.0016433528,
                    -0.08552411,
                    -0.10862141,
                    -0.6201242,
                    -0.001966038,
                    -0.17041245,
                    -1.1299616,
                    -0.022936026,
                    -0.111470476,
                    -0.0076834327,
                    -0.846422,
                    -6.13453e-05,
                    -0.00045251404,
                    -3.154219e-05,
                    -0.0001754468,
                    -9.663671e-05,
                    -1.5448071e-05,
                    -0.00027566,
                    -0.027818654,
                    -0.03504659,
                    -0.07548075,
                    -0.0070081204,
                    -0.27815598,
                    -0.0005495959,
                    -0.39474896,
                    -0.5428903
                ],
                "top_logprobs": [
                    {
                        "\n": -0.0036250101
                    },
                    {
                        "          ": -0.069804676
                    },
                    {
                        " if": -0.07093255
                    },
                    {
                        " (": -0.44885194
                    },
                    {
                        " !": -0.20284843
                    },
                    {
                        " instance": -0.021969967
                    },
                    {
                        "of": -5.912312e-06
                    },
                    {
                        " Job": -0.0725268
                    },
                    {
                        ")": -0.41837728
                    },
                    {
                        " {": -0.003880242
                    },
                    {
                        "\n": -0.05353124
                    },
                    {
                        "<|endoftext|>": -0.7660002
                    },
                    {
                        " if": -1.5082806
                    },
                    {
                        "(": -0.68574107
                    },
                    {
                        "step": -0.87944514
                    },
                    {
                        ".": -0.007969545
                    },
                    {
                        "get": -0.05495099
                    },
                    {
                        "Wait": -0.7576628
                    },
                    {
                        "())": -0.3684125
                    },
                    {
                        " {": -0.009676652
                    },
                    {
                        "\n": -0.02213845
                    },
                    {
                        "                  ": -0.04847614
                    },
                    {
                        " if": -2.1396952
                    },
                    {
                        ".": -0.0039050158
                    },
                    {
                        "get": -0.009797511
                    },
                    {
                        "Log": -5.1930627e-05
                    },
                    {
                        "ger": -5.4552278e-05
                    },
                    {
                        "().": -0.0016433528
                    },
                    {
                        "println": -0.08552411
                    },
                    {
                        "(\"": -0.10862141
                    },
                    {
                        "Wa": -0.6201242
                    },
                    {
                        "iting": -0.001966038
                    },
                    {
                        " for": -0.17041245
                    },
                    {
                        " completion": -1.1299616
                    },
                    {
                        " of": -0.022936026
                    },
                    {
                        " \"": -0.111470476
                    },
                    {
                        " +": -0.0076834327
                    },
                    {
                        " Model": -0.846422
                    },
                    {
                        "Hyper": -6.13453e-05
                    },
                    {
                        "link": -0.00045251404
                    },
                    {
                        "Note": -3.154219e-05
                    },
                    {
                        ".": -0.0001754468
                    },
                    {
                        "en": -9.663671e-05
                    },
                    {
                        "code": -1.5448071e-05
                    },
                    {
                        "To": -0.00027566
                    },
                    {
                        "(": -0.027818654
                    },
                    {
                        "item": -0.03504659
                    },
                    {
                        "));": -0.07548075
                    },
                    {
                        "\n": -0.0070081204
                    },
                    {
                        "              ": -0.27815598
                    },
                    {
                        " }": -0.0005495959
                    },
                    {
                        "\n": -0.39474896
                    },
                    {
                        "<|endoftext|>": -0.5428903
                    }
                ],
                "text_offset": [
                    6482,
                    6482,
                    6492,
                    6495,
                    6497,
                    6501,
                    6510,
                    6512,
                    6516,
                    6517,
                    6519,
                    6520,
                    6534,
                    6537,
                    6539,
                    6543,
                    6544,
                    6547,
                    6551,
                    6554,
                    6556,
                    6557,
                    6575,
                    6584,
                    6585,
                    6588,
                    6591,
                    6594,
                    6597,
                    6604,
                    6606,
                    6608,
                    6613,
                    6617,
                    6628,
                    6631,
                    6633,
                    6635,
                    6641,
                    6646,
                    6650,
                    6654,
                    6655,
                    6657,
                    6661,
                    6663,
                    6664,
                    6668,
                    6671,
                    6672,
                    6686,
                    6688,
                    6689
                ]
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 1393,
        "completion_tokens": 953,
        "total_tokens": 2346
    },
    "validation_result": [
        {
            "patch": "           if ( !step.getWait() || !(item instanceof ItemGroup)) {\n               LOGGER.log(Level.FINE, \"about to schedule a build of {0}\", item.getFullName());\n               Node node = Computer.currentComputer().getNode();\n",
            "correctness": "uncompilable",
            "translated": "           if ( !step.getWait() || !(item instanceof ItemGroup)) {\n               LOGGER.log(Level.FINE, \"about to schedule a build of {0}\", item.getFullName());\n               Node node = Computer.currentComputer().getNode();\n"
        },
        {
            "patch": "           if (!step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               if (item instanceof Job) {\n                   final Job project = (Job) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n                       throw new AbortException(\"F",
            "correctness": "uncompilable",
            "translated": "           if (!step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               if (item instanceof Job) {\n                   final Job project = (Job) item;\n                   listener.getLogger().println(\"Scheduling project: \" + ModelHyperlinkNote.encodeTo(project));\n                   node.addAction(new LabelAction(Messages.BuildTriggerStepExecution_building_(project.getFullDisplayName())));\n                   List<Action> actions = new ArrayList<>();\n                   if (step.getWait()) {\n                       StepContext context = getContext();\n                       boolean isPropagate =  step.isPropagate();\n                       actions.add(new BuildTriggerAction(context,isPropagate));\n                       LOGGER.log(Level.FINER, \"scheduling a build of {0} from {1}\", new Object[]{project, context});\n                   }\n                   Cause.UpstreamCause cause = new Cause.UpstreamCause(invokingRun);\n                   CauseAction causeAction = new CauseAction(cause);\n                   actions.add(causeAction);\n                   List<ParameterValue> parameters = step.getParameters();\n                   if (parameters != null) {\n                       parameters = completeDefaultParameters(parameters, project);\n                       actions.add(new ParametersAction(parameters));\n                   }\n                   Integer quietPeriod = step.getQuietPeriod();\n                   if (quietPeriod == null) {\n                       quietPeriod = project.getQuietPeriod();\n                   }\n                   QueueTaskFuture<?> f = project.scheduleBuild2(quietPeriod, actions.toArray(new Action[actions.size()]));\n                   if (f == null) {\n                       throw new AbortException(\"F"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job && !(item instanceof Queue.Task)) ) {\n               Run<?, ?> invokingRun = this.invokingRun;\n               Run<?, ?> run = invokingRun;\n               Node node = run.getExecutor().getOwner().getNode();\n               TaskListener listener = getContext().get(TaskListener.class);\n",
            "correctness": "uncompilable",
            "translated": "           if ( !step.getWait() || (item instanceof Job && !(item instanceof Queue.Task)) ) {\n               Run<?, ?> invokingRun = this.invokingRun;\n               Run<?, ?> run = invokingRun;\n               Node node = run.getExecutor().getOwner().getNode();\n               TaskListener listener = getContext().get(TaskListener.class);\n"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               EnvVars envVars = invokingRun.getEnvironment(listener);\n               envVars.overrideAll(step.getParameters());\n",
            "correctness": "uncompilable",
            "translated": "           if ( !step.getWait() || (item instanceof Job || item instanceof Queue.Task)) {\n               EnvVars envVars = invokingRun.getEnvironment(listener);\n               envVars.overrideAll(step.getParameters());\n"
        },
        {
            "patch": "           if ( !step.getWait() || ( item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               AbstractBuild invokingBuild = (AbstractBuild) getContext().get(Run.class);\n               Computer node = Computer.currentComputer();\n",
            "correctness": "uncompilable",
            "translated": "           if ( !step.getWait() || ( item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               AbstractBuild invokingBuild = (AbstractBuild) getContext().get(Run.class);\n               Computer node = Computer.currentComputer();\n"
        },
        {
            "patch": "           if (!step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob) || (item instanceof Queue.Task)) {\n",
            "correctness": "compile_success",
            "translated": "           if (!step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob) || (item instanceof Queue.Task)) {\n"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               // reset the build result\n               getContext().onSuccess(null);\n               FlowNode node = getContext().get(FlowNode.class);\n               if (node == null) {\n                   LOGGER.log(Level.WARNING, \"Missing FlowNode.class in context\");\n               }\n",
            "correctness": "compile_success",
            "translated": "           if ( !step.getWait() || (item instanceof ParameterizedJobMixIn.ParameterizedJob)) {\n               // reset the build result\n               getContext().onSuccess(null);\n               FlowNode node = getContext().get(FlowNode.class);\n               if (node == null) {\n                   LOGGER.log(Level.WARNING, \"Missing FlowNode.class in context\");\n               }\n"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               \n",
            "correctness": "compile_success",
            "translated": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               \n"
        },
        {
            "patch": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run previousBuild = invokingRun.getPreviousBuild();\n               Node node = previousBuild != null ? previousBuild.getBuiltOn() : Computer.currentComputer().getNode();\n",
            "correctness": "uncompilable",
            "translated": "           if ( !step.getWait() || (item instanceof Job) || (item instanceof Queue.Task)) {\n               Run previousBuild = invokingRun.getPreviousBuild();\n               Node node = previousBuild != null ? previousBuild.getBuiltOn() : Computer.currentComputer().getNode();\n"
        },
        {
            "patch": "           if (item instanceof Job) {\n               if (step.getWait()) {\n                   listener.getLogger().println(\"Waiting for completion of \" + ModelHyperlinkNote.encodeTo(item));\n               }\n",
            "correctness": "compile_success",
            "translated": "           if (item instanceof Job) {\n               if (step.getWait()) {\n                   listener.getLogger().println(\"Waiting for completion of \" + ModelHyperlinkNote.encodeTo(item));\n               }\n"
        }
    ]
}