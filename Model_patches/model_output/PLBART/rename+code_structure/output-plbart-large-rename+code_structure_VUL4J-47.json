{
    "function range": "2,5-25,5",
    "output": [
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"TextComponent\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory (ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"textComponent\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"text\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"Text\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput;}"
    ],
    "validation_result": [
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"TextComponent\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (nameForTextElem == null) { nameForTextElem = \"TextComponent\"; } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory (ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } nameForTextElem = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"textComponent\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (nameForTextElem == null) { nameForTextElem = \"textComponent\"; } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"text\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (nameForTextElem == null) { nameForTextElem = \"text\"; } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (textComponentName == null) { textComponentName = \"Text\"; } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (nameForTextElem == null) { nameForTextElem = \"Text\"; } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } xmlCreatorCharacteristics = xgCharacteristics; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } textComponentCfgName = textComponentName; xmlAnalyzerCharacteristics = xpCharacteristics; initializeManufactories(xmlInput, xmlOutput); xmlOutputManufactory = xmlOutput; xmlInputManufactory = xmlInput;}",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _xmlGeneratorFeatures = xgFeatures; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _cfgNameForTextElement = nameForTextElem; _xmlParserFeatures = xpFeatures; _initFactories(xmlIn, xmlOut); _xmlOutputFactory = xmlOut; _xmlInputFactory = xmlIn; }"
        }
    ]
}