{
    "function range": "2,1-28,1",
    "output": [
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': return false; default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '~': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '^': case '~': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '^': case '~': case '^~': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '~': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '^~': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '^': case '~': case '^~': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '^~': case '?': default: break; } } return true; }",
        "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '~': default: break; } } return true ; }"
    ],
    "validation_result": [
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': return false; default: break; } } return true; }",
            "correctness": "compile_success",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': return false; default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '~': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '~': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '^': case '~': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '^': case '~': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '^': case '~': case '^~': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '^': case '~': case '^~': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '~': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '~': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '^~': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '^~': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '^': case '~': case '^~': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '&': case '|': case '~': case '^': case '~': case '^~': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '^~': case '?': default: break; } } return true; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '^~': case '?': default: break; } } return true; }"
        },
        {
            "patch": "protected static boolean whetherReasonable(String a) { if (a == null || a.length() == 0) return false; for (int m = 0; m < a.length(); m++) { switch (a.charAt(m)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '~': default: break; } } return true ; }",
            "correctness": "uncompilable",
            "translated": "protected static boolean isValid(String str) { if (str == null || str.length() == 0) return false; for (int i = 0; i < str.length(); i++) { switch (str.charAt(i)) { case '/': case '\\\\': case '?': case ':': case '<': case '>': case ';': case '(': case ')': case '@': case ',': case '[': case ']': case '=': case '!': case '^': case '~': case '&': case '|': case '^': case '~': case '~': default: break; } } return true; }"
        }
    ]
}