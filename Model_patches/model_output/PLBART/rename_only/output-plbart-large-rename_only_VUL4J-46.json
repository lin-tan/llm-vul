{
    "function range": "2,1-19,1",
    "output": [
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory (ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
        "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; } }",
        "protected XmlManufactory() { }"
    ],
    "validation_result": [
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory (ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; nameForTextElem = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory(ObjectCodec objcodec, int xpCharacteristics, int xgCharacteristics, XMLInputFactory xmlInput, XMLOutputFactory xmlOutput, String textComponentName) { super(objcodec); xmlParserCharacteristics = xpCharacteristics; xmlCreatorCharacteristics = xgCharacteristics; textComponentCfgName = textComponentName; if (xmlInput == null) { xmlInput = XMLInputFactory.newInstance(); } if (xmlOutput == null) { xmlOutput = XMLOutputFactory.newInstance(); } initializeManufactories(xmlInput, xmlOutput); xmlInputManufactory = xmlInput; xmlOutputManufactory = xmlOutput; }",
            "correctness": "compile_success",
            "translated": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) { super(oc); _xmlParserFeatures = xpFeatures; _xmlGeneratorFeatures = xgFeatures; _cfgNameForTextElement = nameForTextElem; if (xmlIn == null) { xmlIn = XMLInputFactory.newInstance(); } if (xmlOut == null) { xmlOut = XMLOutputFactory.newInstance(); } _initFactories(xmlIn, xmlOut); _xmlInputFactory = xmlIn; _xmlOutputFactory = xmlOut; }"
        },
        {
            "patch": "protected XmlManufactory() { }",
            "correctness": "uncompilable",
            "translated": "protected XmlFactory() { }"
        }
    ]
}